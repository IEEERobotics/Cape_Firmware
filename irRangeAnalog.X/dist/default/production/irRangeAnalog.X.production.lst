

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Mar 27 00:08:37 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1718
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBIGRAM,global,class=CODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	dabs	1,0xCA0,32
    31                           	dabs	1,0xC20,80
    32                           	dabs	1,0xBE0,16
    33                           	dabs	1,0x2770,0,I2C_StatusCallback@EEPROM_Buffer
    34                           	dabs	1,0x7E,2
    35  0000                     	;# 
    36  0001                     	;# 
    37  0002                     	;# 
    38  0003                     	;# 
    39  0004                     	;# 
    40  0005                     	;# 
    41  0006                     	;# 
    42  0007                     	;# 
    43  0008                     	;# 
    44  0009                     	;# 
    45  000A                     	;# 
    46  000B                     	;# 
    47  000C                     	;# 
    48  000D                     	;# 
    49  000E                     	;# 
    50  0010                     	;# 
    51  0011                     	;# 
    52  0012                     	;# 
    53  0013                     	;# 
    54  0015                     	;# 
    55  0016                     	;# 
    56  0016                     	;# 
    57  0017                     	;# 
    58  0018                     	;# 
    59  0019                     	;# 
    60  001A                     	;# 
    61  001B                     	;# 
    62  001C                     	;# 
    63  008C                     	;# 
    64  008D                     	;# 
    65  008E                     	;# 
    66  0090                     	;# 
    67  0091                     	;# 
    68  0092                     	;# 
    69  0093                     	;# 
    70  0095                     	;# 
    71  0096                     	;# 
    72  0097                     	;# 
    73  0098                     	;# 
    74  0099                     	;# 
    75  009A                     	;# 
    76  009B                     	;# 
    77  009B                     	;# 
    78  009C                     	;# 
    79  009D                     	;# 
    80  009E                     	;# 
    81  009F                     	;# 
    82  010C                     	;# 
    83  010D                     	;# 
    84  010E                     	;# 
    85  0111                     	;# 
    86  0112                     	;# 
    87  0113                     	;# 
    88  0114                     	;# 
    89  0115                     	;# 
    90  0116                     	;# 
    91  0117                     	;# 
    92  0118                     	;# 
    93  0119                     	;# 
    94  011A                     	;# 
    95  011B                     	;# 
    96  011B                     	;# 
    97  011C                     	;# 
    98  018C                     	;# 
    99  018D                     	;# 
   100  018E                     	;# 
   101  0191                     	;# 
   102  0191                     	;# 
   103  0192                     	;# 
   104  0193                     	;# 
   105  0193                     	;# 
   106  0194                     	;# 
   107  0195                     	;# 
   108  0196                     	;# 
   109  0197                     	;# 
   110  0199                     	;# 
   111  0199                     	;# 
   112  0199                     	;# 
   113  019A                     	;# 
   114  019A                     	;# 
   115  019A                     	;# 
   116  019B                     	;# 
   117  019B                     	;# 
   118  019B                     	;# 
   119  019B                     	;# 
   120  019B                     	;# 
   121  019C                     	;# 
   122  019C                     	;# 
   123  019C                     	;# 
   124  019D                     	;# 
   125  019D                     	;# 
   126  019D                     	;# 
   127  019E                     	;# 
   128  019E                     	;# 
   129  019E                     	;# 
   130  019F                     	;# 
   131  019F                     	;# 
   132  019F                     	;# 
   133  019F                     	;# 
   134  019F                     	;# 
   135  020C                     	;# 
   136  020D                     	;# 
   137  020E                     	;# 
   138  0210                     	;# 
   139  0211                     	;# 
   140  0211                     	;# 
   141  0212                     	;# 
   142  0212                     	;# 
   143  0213                     	;# 
   144  0213                     	;# 
   145  0214                     	;# 
   146  0214                     	;# 
   147  0215                     	;# 
   148  0215                     	;# 
   149  0215                     	;# 
   150  0215                     	;# 
   151  0216                     	;# 
   152  0216                     	;# 
   153  0217                     	;# 
   154  0217                     	;# 
   155  028C                     	;# 
   156  028D                     	;# 
   157  028E                     	;# 
   158  0291                     	;# 
   159  0291                     	;# 
   160  0292                     	;# 
   161  0293                     	;# 
   162  0293                     	;# 
   163  0298                     	;# 
   164  0298                     	;# 
   165  0299                     	;# 
   166  029A                     	;# 
   167  029A                     	;# 
   168  029E                     	;# 
   169  030C                     	;# 
   170  030D                     	;# 
   171  030E                     	;# 
   172  038C                     	;# 
   173  038D                     	;# 
   174  038E                     	;# 
   175  0390                     	;# 
   176  0391                     	;# 
   177  0392                     	;# 
   178  0393                     	;# 
   179  0394                     	;# 
   180  0395                     	;# 
   181  0396                     	;# 
   182  0397                     	;# 
   183  0398                     	;# 
   184  0399                     	;# 
   185  039D                     	;# 
   186  039E                     	;# 
   187  039F                     	;# 
   188  0415                     	;# 
   189  0416                     	;# 
   190  0417                     	;# 
   191  041C                     	;# 
   192  041D                     	;# 
   193  041E                     	;# 
   194  0498                     	;# 
   195  0498                     	;# 
   196  0499                     	;# 
   197  049A                     	;# 
   198  049B                     	;# 
   199  049B                     	;# 
   200  049C                     	;# 
   201  049D                     	;# 
   202  049E                     	;# 
   203  049F                     	;# 
   204  0511                     	;# 
   205  0515                     	;# 
   206  0617                     	;# 
   207  0618                     	;# 
   208  0619                     	;# 
   209  0619                     	;# 
   210  061A                     	;# 
   211  061B                     	;# 
   212  061C                     	;# 
   213  061C                     	;# 
   214  0691                     	;# 
   215  0692                     	;# 
   216  0693                     	;# 
   217  0694                     	;# 
   218  0695                     	;# 
   219  0696                     	;# 
   220  0697                     	;# 
   221  0698                     	;# 
   222  0699                     	;# 
   223  069A                     	;# 
   224  069B                     	;# 
   225  069C                     	;# 
   226  069D                     	;# 
   227  069E                     	;# 
   228  069F                     	;# 
   229  0E0F                     	;# 
   230  0E10                     	;# 
   231  0E11                     	;# 
   232  0E12                     	;# 
   233  0E13                     	;# 
   234  0E14                     	;# 
   235  0E15                     	;# 
   236  0E17                     	;# 
   237  0E20                     	;# 
   238  0E21                     	;# 
   239  0E22                     	;# 
   240  0E24                     	;# 
   241  0E25                     	;# 
   242  0E28                     	;# 
   243  0E29                     	;# 
   244  0E2A                     	;# 
   245  0E2B                     	;# 
   246  0E90                     	;# 
   247  0E91                     	;# 
   248  0E92                     	;# 
   249  0E93                     	;# 
   250  0E94                     	;# 
   251  0E95                     	;# 
   252  0E96                     	;# 
   253  0E97                     	;# 
   254  0E98                     	;# 
   255  0E99                     	;# 
   256  0E9A                     	;# 
   257  0E9B                     	;# 
   258  0E9C                     	;# 
   259  0E9D                     	;# 
   260  0E9E                     	;# 
   261  0E9F                     	;# 
   262  0EA0                     	;# 
   263  0EA1                     	;# 
   264  0EA2                     	;# 
   265  0EA3                     	;# 
   266  0EA4                     	;# 
   267  0EA5                     	;# 
   268  0EA6                     	;# 
   269  0EA7                     	;# 
   270  0F0F                     	;# 
   271  0F10                     	;# 
   272  0F11                     	;# 
   273  0F12                     	;# 
   274  0F13                     	;# 
   275  0F14                     	;# 
   276  0F15                     	;# 
   277  0F16                     	;# 
   278  0F17                     	;# 
   279  0F18                     	;# 
   280  0F19                     	;# 
   281  0F1A                     	;# 
   282  0F1B                     	;# 
   283  0F1C                     	;# 
   284  0F1D                     	;# 
   285  0F1E                     	;# 
   286  0F1F                     	;# 
   287  0F20                     	;# 
   288  0F21                     	;# 
   289  0F22                     	;# 
   290  0F23                     	;# 
   291  0F24                     	;# 
   292  0F25                     	;# 
   293  0F26                     	;# 
   294  0F27                     	;# 
   295  0F28                     	;# 
   296  0F29                     	;# 
   297  0F2A                     	;# 
   298  0F2B                     	;# 
   299  0F2C                     	;# 
   300  0F2D                     	;# 
   301  0F2E                     	;# 
   302  0F2F                     	;# 
   303  0F30                     	;# 
   304  0F31                     	;# 
   305  0F32                     	;# 
   306  0F33                     	;# 
   307  0F34                     	;# 
   308  0F35                     	;# 
   309  0F36                     	;# 
   310  0F37                     	;# 
   311  0FE4                     	;# 
   312  0FE5                     	;# 
   313  0FE6                     	;# 
   314  0FE7                     	;# 
   315  0FE8                     	;# 
   316  0FE9                     	;# 
   317  0FEA                     	;# 
   318  0FEB                     	;# 
   319  0FED                     	;# 
   320  0FEE                     	;# 
   321  0FEF                     	;# 
   322  0000                     	;# 
   323  0001                     	;# 
   324  0002                     	;# 
   325  0003                     	;# 
   326  0004                     	;# 
   327  0005                     	;# 
   328  0006                     	;# 
   329  0007                     	;# 
   330  0008                     	;# 
   331  0009                     	;# 
   332  000A                     	;# 
   333  000B                     	;# 
   334  000C                     	;# 
   335  000D                     	;# 
   336  000E                     	;# 
   337  0010                     	;# 
   338  0011                     	;# 
   339  0012                     	;# 
   340  0013                     	;# 
   341  0015                     	;# 
   342  0016                     	;# 
   343  0016                     	;# 
   344  0017                     	;# 
   345  0018                     	;# 
   346  0019                     	;# 
   347  001A                     	;# 
   348  001B                     	;# 
   349  001C                     	;# 
   350  008C                     	;# 
   351  008D                     	;# 
   352  008E                     	;# 
   353  0090                     	;# 
   354  0091                     	;# 
   355  0092                     	;# 
   356  0093                     	;# 
   357  0095                     	;# 
   358  0096                     	;# 
   359  0097                     	;# 
   360  0098                     	;# 
   361  0099                     	;# 
   362  009A                     	;# 
   363  009B                     	;# 
   364  009B                     	;# 
   365  009C                     	;# 
   366  009D                     	;# 
   367  009E                     	;# 
   368  009F                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  0111                     	;# 
   373  0112                     	;# 
   374  0113                     	;# 
   375  0114                     	;# 
   376  0115                     	;# 
   377  0116                     	;# 
   378  0117                     	;# 
   379  0118                     	;# 
   380  0119                     	;# 
   381  011A                     	;# 
   382  011B                     	;# 
   383  011B                     	;# 
   384  011C                     	;# 
   385  018C                     	;# 
   386  018D                     	;# 
   387  018E                     	;# 
   388  0191                     	;# 
   389  0191                     	;# 
   390  0192                     	;# 
   391  0193                     	;# 
   392  0193                     	;# 
   393  0194                     	;# 
   394  0195                     	;# 
   395  0196                     	;# 
   396  0197                     	;# 
   397  0199                     	;# 
   398  0199                     	;# 
   399  0199                     	;# 
   400  019A                     	;# 
   401  019A                     	;# 
   402  019A                     	;# 
   403  019B                     	;# 
   404  019B                     	;# 
   405  019B                     	;# 
   406  019B                     	;# 
   407  019B                     	;# 
   408  019C                     	;# 
   409  019C                     	;# 
   410  019C                     	;# 
   411  019D                     	;# 
   412  019D                     	;# 
   413  019D                     	;# 
   414  019E                     	;# 
   415  019E                     	;# 
   416  019E                     	;# 
   417  019F                     	;# 
   418  019F                     	;# 
   419  019F                     	;# 
   420  019F                     	;# 
   421  019F                     	;# 
   422  020C                     	;# 
   423  020D                     	;# 
   424  020E                     	;# 
   425  0210                     	;# 
   426  0211                     	;# 
   427  0211                     	;# 
   428  0212                     	;# 
   429  0212                     	;# 
   430  0213                     	;# 
   431  0213                     	;# 
   432  0214                     	;# 
   433  0214                     	;# 
   434  0215                     	;# 
   435  0215                     	;# 
   436  0215                     	;# 
   437  0215                     	;# 
   438  0216                     	;# 
   439  0216                     	;# 
   440  0217                     	;# 
   441  0217                     	;# 
   442  028C                     	;# 
   443  028D                     	;# 
   444  028E                     	;# 
   445  0291                     	;# 
   446  0291                     	;# 
   447  0292                     	;# 
   448  0293                     	;# 
   449  0293                     	;# 
   450  0298                     	;# 
   451  0298                     	;# 
   452  0299                     	;# 
   453  029A                     	;# 
   454  029A                     	;# 
   455  029E                     	;# 
   456  030C                     	;# 
   457  030D                     	;# 
   458  030E                     	;# 
   459  038C                     	;# 
   460  038D                     	;# 
   461  038E                     	;# 
   462  0390                     	;# 
   463  0391                     	;# 
   464  0392                     	;# 
   465  0393                     	;# 
   466  0394                     	;# 
   467  0395                     	;# 
   468  0396                     	;# 
   469  0397                     	;# 
   470  0398                     	;# 
   471  0399                     	;# 
   472  039D                     	;# 
   473  039E                     	;# 
   474  039F                     	;# 
   475  0415                     	;# 
   476  0416                     	;# 
   477  0417                     	;# 
   478  041C                     	;# 
   479  041D                     	;# 
   480  041E                     	;# 
   481  0498                     	;# 
   482  0498                     	;# 
   483  0499                     	;# 
   484  049A                     	;# 
   485  049B                     	;# 
   486  049B                     	;# 
   487  049C                     	;# 
   488  049D                     	;# 
   489  049E                     	;# 
   490  049F                     	;# 
   491  0511                     	;# 
   492  0515                     	;# 
   493  0617                     	;# 
   494  0618                     	;# 
   495  0619                     	;# 
   496  0619                     	;# 
   497  061A                     	;# 
   498  061B                     	;# 
   499  061C                     	;# 
   500  061C                     	;# 
   501  0691                     	;# 
   502  0692                     	;# 
   503  0693                     	;# 
   504  0694                     	;# 
   505  0695                     	;# 
   506  0696                     	;# 
   507  0697                     	;# 
   508  0698                     	;# 
   509  0699                     	;# 
   510  069A                     	;# 
   511  069B                     	;# 
   512  069C                     	;# 
   513  069D                     	;# 
   514  069E                     	;# 
   515  069F                     	;# 
   516  0E0F                     	;# 
   517  0E10                     	;# 
   518  0E11                     	;# 
   519  0E12                     	;# 
   520  0E13                     	;# 
   521  0E14                     	;# 
   522  0E15                     	;# 
   523  0E17                     	;# 
   524  0E20                     	;# 
   525  0E21                     	;# 
   526  0E22                     	;# 
   527  0E24                     	;# 
   528  0E25                     	;# 
   529  0E28                     	;# 
   530  0E29                     	;# 
   531  0E2A                     	;# 
   532  0E2B                     	;# 
   533  0E90                     	;# 
   534  0E91                     	;# 
   535  0E92                     	;# 
   536  0E93                     	;# 
   537  0E94                     	;# 
   538  0E95                     	;# 
   539  0E96                     	;# 
   540  0E97                     	;# 
   541  0E98                     	;# 
   542  0E99                     	;# 
   543  0E9A                     	;# 
   544  0E9B                     	;# 
   545  0E9C                     	;# 
   546  0E9D                     	;# 
   547  0E9E                     	;# 
   548  0E9F                     	;# 
   549  0EA0                     	;# 
   550  0EA1                     	;# 
   551  0EA2                     	;# 
   552  0EA3                     	;# 
   553  0EA4                     	;# 
   554  0EA5                     	;# 
   555  0EA6                     	;# 
   556  0EA7                     	;# 
   557  0F0F                     	;# 
   558  0F10                     	;# 
   559  0F11                     	;# 
   560  0F12                     	;# 
   561  0F13                     	;# 
   562  0F14                     	;# 
   563  0F15                     	;# 
   564  0F16                     	;# 
   565  0F17                     	;# 
   566  0F18                     	;# 
   567  0F19                     	;# 
   568  0F1A                     	;# 
   569  0F1B                     	;# 
   570  0F1C                     	;# 
   571  0F1D                     	;# 
   572  0F1E                     	;# 
   573  0F1F                     	;# 
   574  0F20                     	;# 
   575  0F21                     	;# 
   576  0F22                     	;# 
   577  0F23                     	;# 
   578  0F24                     	;# 
   579  0F25                     	;# 
   580  0F26                     	;# 
   581  0F27                     	;# 
   582  0F28                     	;# 
   583  0F29                     	;# 
   584  0F2A                     	;# 
   585  0F2B                     	;# 
   586  0F2C                     	;# 
   587  0F2D                     	;# 
   588  0F2E                     	;# 
   589  0F2F                     	;# 
   590  0F30                     	;# 
   591  0F31                     	;# 
   592  0F32                     	;# 
   593  0F33                     	;# 
   594  0F34                     	;# 
   595  0F35                     	;# 
   596  0F36                     	;# 
   597  0F37                     	;# 
   598  0FE4                     	;# 
   599  0FE5                     	;# 
   600  0FE6                     	;# 
   601  0FE7                     	;# 
   602  0FE8                     	;# 
   603  0FE9                     	;# 
   604  0FEA                     	;# 
   605  0FEB                     	;# 
   606  0FED                     	;# 
   607  0FEE                     	;# 
   608  0FEF                     	;# 
   609  0000                     	;# 
   610  0001                     	;# 
   611  0002                     	;# 
   612  0003                     	;# 
   613  0004                     	;# 
   614  0005                     	;# 
   615  0006                     	;# 
   616  0007                     	;# 
   617  0008                     	;# 
   618  0009                     	;# 
   619  000A                     	;# 
   620  000B                     	;# 
   621  000C                     	;# 
   622  000D                     	;# 
   623  000E                     	;# 
   624  0010                     	;# 
   625  0011                     	;# 
   626  0012                     	;# 
   627  0013                     	;# 
   628  0015                     	;# 
   629  0016                     	;# 
   630  0016                     	;# 
   631  0017                     	;# 
   632  0018                     	;# 
   633  0019                     	;# 
   634  001A                     	;# 
   635  001B                     	;# 
   636  001C                     	;# 
   637  008C                     	;# 
   638  008D                     	;# 
   639  008E                     	;# 
   640  0090                     	;# 
   641  0091                     	;# 
   642  0092                     	;# 
   643  0093                     	;# 
   644  0095                     	;# 
   645  0096                     	;# 
   646  0097                     	;# 
   647  0098                     	;# 
   648  0099                     	;# 
   649  009A                     	;# 
   650  009B                     	;# 
   651  009B                     	;# 
   652  009C                     	;# 
   653  009D                     	;# 
   654  009E                     	;# 
   655  009F                     	;# 
   656  010C                     	;# 
   657  010D                     	;# 
   658  010E                     	;# 
   659  0111                     	;# 
   660  0112                     	;# 
   661  0113                     	;# 
   662  0114                     	;# 
   663  0115                     	;# 
   664  0116                     	;# 
   665  0117                     	;# 
   666  0118                     	;# 
   667  0119                     	;# 
   668  011A                     	;# 
   669  011B                     	;# 
   670  011B                     	;# 
   671  011C                     	;# 
   672  018C                     	;# 
   673  018D                     	;# 
   674  018E                     	;# 
   675  0191                     	;# 
   676  0191                     	;# 
   677  0192                     	;# 
   678  0193                     	;# 
   679  0193                     	;# 
   680  0194                     	;# 
   681  0195                     	;# 
   682  0196                     	;# 
   683  0197                     	;# 
   684  0199                     	;# 
   685  0199                     	;# 
   686  0199                     	;# 
   687  019A                     	;# 
   688  019A                     	;# 
   689  019A                     	;# 
   690  019B                     	;# 
   691  019B                     	;# 
   692  019B                     	;# 
   693  019B                     	;# 
   694  019B                     	;# 
   695  019C                     	;# 
   696  019C                     	;# 
   697  019C                     	;# 
   698  019D                     	;# 
   699  019D                     	;# 
   700  019D                     	;# 
   701  019E                     	;# 
   702  019E                     	;# 
   703  019E                     	;# 
   704  019F                     	;# 
   705  019F                     	;# 
   706  019F                     	;# 
   707  019F                     	;# 
   708  019F                     	;# 
   709  020C                     	;# 
   710  020D                     	;# 
   711  020E                     	;# 
   712  0210                     	;# 
   713  0211                     	;# 
   714  0211                     	;# 
   715  0212                     	;# 
   716  0212                     	;# 
   717  0213                     	;# 
   718  0213                     	;# 
   719  0214                     	;# 
   720  0214                     	;# 
   721  0215                     	;# 
   722  0215                     	;# 
   723  0215                     	;# 
   724  0215                     	;# 
   725  0216                     	;# 
   726  0216                     	;# 
   727  0217                     	;# 
   728  0217                     	;# 
   729  028C                     	;# 
   730  028D                     	;# 
   731  028E                     	;# 
   732  0291                     	;# 
   733  0291                     	;# 
   734  0292                     	;# 
   735  0293                     	;# 
   736  0293                     	;# 
   737  0298                     	;# 
   738  0298                     	;# 
   739  0299                     	;# 
   740  029A                     	;# 
   741  029A                     	;# 
   742  029E                     	;# 
   743  030C                     	;# 
   744  030D                     	;# 
   745  030E                     	;# 
   746  038C                     	;# 
   747  038D                     	;# 
   748  038E                     	;# 
   749  0390                     	;# 
   750  0391                     	;# 
   751  0392                     	;# 
   752  0393                     	;# 
   753  0394                     	;# 
   754  0395                     	;# 
   755  0396                     	;# 
   756  0397                     	;# 
   757  0398                     	;# 
   758  0399                     	;# 
   759  039D                     	;# 
   760  039E                     	;# 
   761  039F                     	;# 
   762  0415                     	;# 
   763  0416                     	;# 
   764  0417                     	;# 
   765  041C                     	;# 
   766  041D                     	;# 
   767  041E                     	;# 
   768  0498                     	;# 
   769  0498                     	;# 
   770  0499                     	;# 
   771  049A                     	;# 
   772  049B                     	;# 
   773  049B                     	;# 
   774  049C                     	;# 
   775  049D                     	;# 
   776  049E                     	;# 
   777  049F                     	;# 
   778  0511                     	;# 
   779  0515                     	;# 
   780  0617                     	;# 
   781  0618                     	;# 
   782  0619                     	;# 
   783  0619                     	;# 
   784  061A                     	;# 
   785  061B                     	;# 
   786  061C                     	;# 
   787  061C                     	;# 
   788  0691                     	;# 
   789  0692                     	;# 
   790  0693                     	;# 
   791  0694                     	;# 
   792  0695                     	;# 
   793  0696                     	;# 
   794  0697                     	;# 
   795  0698                     	;# 
   796  0699                     	;# 
   797  069A                     	;# 
   798  069B                     	;# 
   799  069C                     	;# 
   800  069D                     	;# 
   801  069E                     	;# 
   802  069F                     	;# 
   803  0E0F                     	;# 
   804  0E10                     	;# 
   805  0E11                     	;# 
   806  0E12                     	;# 
   807  0E13                     	;# 
   808  0E14                     	;# 
   809  0E15                     	;# 
   810  0E17                     	;# 
   811  0E20                     	;# 
   812  0E21                     	;# 
   813  0E22                     	;# 
   814  0E24                     	;# 
   815  0E25                     	;# 
   816  0E28                     	;# 
   817  0E29                     	;# 
   818  0E2A                     	;# 
   819  0E2B                     	;# 
   820  0E90                     	;# 
   821  0E91                     	;# 
   822  0E92                     	;# 
   823  0E93                     	;# 
   824  0E94                     	;# 
   825  0E95                     	;# 
   826  0E96                     	;# 
   827  0E97                     	;# 
   828  0E98                     	;# 
   829  0E99                     	;# 
   830  0E9A                     	;# 
   831  0E9B                     	;# 
   832  0E9C                     	;# 
   833  0E9D                     	;# 
   834  0E9E                     	;# 
   835  0E9F                     	;# 
   836  0EA0                     	;# 
   837  0EA1                     	;# 
   838  0EA2                     	;# 
   839  0EA3                     	;# 
   840  0EA4                     	;# 
   841  0EA5                     	;# 
   842  0EA6                     	;# 
   843  0EA7                     	;# 
   844  0F0F                     	;# 
   845  0F10                     	;# 
   846  0F11                     	;# 
   847  0F12                     	;# 
   848  0F13                     	;# 
   849  0F14                     	;# 
   850  0F15                     	;# 
   851  0F16                     	;# 
   852  0F17                     	;# 
   853  0F18                     	;# 
   854  0F19                     	;# 
   855  0F1A                     	;# 
   856  0F1B                     	;# 
   857  0F1C                     	;# 
   858  0F1D                     	;# 
   859  0F1E                     	;# 
   860  0F1F                     	;# 
   861  0F20                     	;# 
   862  0F21                     	;# 
   863  0F22                     	;# 
   864  0F23                     	;# 
   865  0F24                     	;# 
   866  0F25                     	;# 
   867  0F26                     	;# 
   868  0F27                     	;# 
   869  0F28                     	;# 
   870  0F29                     	;# 
   871  0F2A                     	;# 
   872  0F2B                     	;# 
   873  0F2C                     	;# 
   874  0F2D                     	;# 
   875  0F2E                     	;# 
   876  0F2F                     	;# 
   877  0F30                     	;# 
   878  0F31                     	;# 
   879  0F32                     	;# 
   880  0F33                     	;# 
   881  0F34                     	;# 
   882  0F35                     	;# 
   883  0F36                     	;# 
   884  0F37                     	;# 
   885  0FE4                     	;# 
   886  0FE5                     	;# 
   887  0FE6                     	;# 
   888  0FE7                     	;# 
   889  0FE8                     	;# 
   890  0FE9                     	;# 
   891  0FEA                     	;# 
   892  0FEB                     	;# 
   893  0FED                     	;# 
   894  0FEE                     	;# 
   895  0FEF                     	;# 
   896  0000                     	;# 
   897  0001                     	;# 
   898  0002                     	;# 
   899  0003                     	;# 
   900  0004                     	;# 
   901  0005                     	;# 
   902  0006                     	;# 
   903  0007                     	;# 
   904  0008                     	;# 
   905  0009                     	;# 
   906  000A                     	;# 
   907  000B                     	;# 
   908  000C                     	;# 
   909  000D                     	;# 
   910  000E                     	;# 
   911  0010                     	;# 
   912  0011                     	;# 
   913  0012                     	;# 
   914  0013                     	;# 
   915  0015                     	;# 
   916  0016                     	;# 
   917  0016                     	;# 
   918  0017                     	;# 
   919  0018                     	;# 
   920  0019                     	;# 
   921  001A                     	;# 
   922  001B                     	;# 
   923  001C                     	;# 
   924  008C                     	;# 
   925  008D                     	;# 
   926  008E                     	;# 
   927  0090                     	;# 
   928  0091                     	;# 
   929  0092                     	;# 
   930  0093                     	;# 
   931  0095                     	;# 
   932  0096                     	;# 
   933  0097                     	;# 
   934  0098                     	;# 
   935  0099                     	;# 
   936  009A                     	;# 
   937  009B                     	;# 
   938  009B                     	;# 
   939  009C                     	;# 
   940  009D                     	;# 
   941  009E                     	;# 
   942  009F                     	;# 
   943  010C                     	;# 
   944  010D                     	;# 
   945  010E                     	;# 
   946  0111                     	;# 
   947  0112                     	;# 
   948  0113                     	;# 
   949  0114                     	;# 
   950  0115                     	;# 
   951  0116                     	;# 
   952  0117                     	;# 
   953  0118                     	;# 
   954  0119                     	;# 
   955  011A                     	;# 
   956  011B                     	;# 
   957  011B                     	;# 
   958  011C                     	;# 
   959  018C                     	;# 
   960  018D                     	;# 
   961  018E                     	;# 
   962  0191                     	;# 
   963  0191                     	;# 
   964  0192                     	;# 
   965  0193                     	;# 
   966  0193                     	;# 
   967  0194                     	;# 
   968  0195                     	;# 
   969  0196                     	;# 
   970  0197                     	;# 
   971  0199                     	;# 
   972  0199                     	;# 
   973  0199                     	;# 
   974  019A                     	;# 
   975  019A                     	;# 
   976  019A                     	;# 
   977  019B                     	;# 
   978  019B                     	;# 
   979  019B                     	;# 
   980  019B                     	;# 
   981  019B                     	;# 
   982  019C                     	;# 
   983  019C                     	;# 
   984  019C                     	;# 
   985  019D                     	;# 
   986  019D                     	;# 
   987  019D                     	;# 
   988  019E                     	;# 
   989  019E                     	;# 
   990  019E                     	;# 
   991  019F                     	;# 
   992  019F                     	;# 
   993  019F                     	;# 
   994  019F                     	;# 
   995  019F                     	;# 
   996  020C                     	;# 
   997  020D                     	;# 
   998  020E                     	;# 
   999  0210                     	;# 
  1000  0211                     	;# 
  1001  0211                     	;# 
  1002  0212                     	;# 
  1003  0212                     	;# 
  1004  0213                     	;# 
  1005  0213                     	;# 
  1006  0214                     	;# 
  1007  0214                     	;# 
  1008  0215                     	;# 
  1009  0215                     	;# 
  1010  0215                     	;# 
  1011  0215                     	;# 
  1012  0216                     	;# 
  1013  0216                     	;# 
  1014  0217                     	;# 
  1015  0217                     	;# 
  1016  028C                     	;# 
  1017  028D                     	;# 
  1018  028E                     	;# 
  1019  0291                     	;# 
  1020  0291                     	;# 
  1021  0292                     	;# 
  1022  0293                     	;# 
  1023  0293                     	;# 
  1024  0298                     	;# 
  1025  0298                     	;# 
  1026  0299                     	;# 
  1027  029A                     	;# 
  1028  029A                     	;# 
  1029  029E                     	;# 
  1030  030C                     	;# 
  1031  030D                     	;# 
  1032  030E                     	;# 
  1033  038C                     	;# 
  1034  038D                     	;# 
  1035  038E                     	;# 
  1036  0390                     	;# 
  1037  0391                     	;# 
  1038  0392                     	;# 
  1039  0393                     	;# 
  1040  0394                     	;# 
  1041  0395                     	;# 
  1042  0396                     	;# 
  1043  0397                     	;# 
  1044  0398                     	;# 
  1045  0399                     	;# 
  1046  039D                     	;# 
  1047  039E                     	;# 
  1048  039F                     	;# 
  1049  0415                     	;# 
  1050  0416                     	;# 
  1051  0417                     	;# 
  1052  041C                     	;# 
  1053  041D                     	;# 
  1054  041E                     	;# 
  1055  0498                     	;# 
  1056  0498                     	;# 
  1057  0499                     	;# 
  1058  049A                     	;# 
  1059  049B                     	;# 
  1060  049B                     	;# 
  1061  049C                     	;# 
  1062  049D                     	;# 
  1063  049E                     	;# 
  1064  049F                     	;# 
  1065  0511                     	;# 
  1066  0515                     	;# 
  1067  0617                     	;# 
  1068  0618                     	;# 
  1069  0619                     	;# 
  1070  0619                     	;# 
  1071  061A                     	;# 
  1072  061B                     	;# 
  1073  061C                     	;# 
  1074  061C                     	;# 
  1075  0691                     	;# 
  1076  0692                     	;# 
  1077  0693                     	;# 
  1078  0694                     	;# 
  1079  0695                     	;# 
  1080  0696                     	;# 
  1081  0697                     	;# 
  1082  0698                     	;# 
  1083  0699                     	;# 
  1084  069A                     	;# 
  1085  069B                     	;# 
  1086  069C                     	;# 
  1087  069D                     	;# 
  1088  069E                     	;# 
  1089  069F                     	;# 
  1090  0E0F                     	;# 
  1091  0E10                     	;# 
  1092  0E11                     	;# 
  1093  0E12                     	;# 
  1094  0E13                     	;# 
  1095  0E14                     	;# 
  1096  0E15                     	;# 
  1097  0E17                     	;# 
  1098  0E20                     	;# 
  1099  0E21                     	;# 
  1100  0E22                     	;# 
  1101  0E24                     	;# 
  1102  0E25                     	;# 
  1103  0E28                     	;# 
  1104  0E29                     	;# 
  1105  0E2A                     	;# 
  1106  0E2B                     	;# 
  1107  0E90                     	;# 
  1108  0E91                     	;# 
  1109  0E92                     	;# 
  1110  0E93                     	;# 
  1111  0E94                     	;# 
  1112  0E95                     	;# 
  1113  0E96                     	;# 
  1114  0E97                     	;# 
  1115  0E98                     	;# 
  1116  0E99                     	;# 
  1117  0E9A                     	;# 
  1118  0E9B                     	;# 
  1119  0E9C                     	;# 
  1120  0E9D                     	;# 
  1121  0E9E                     	;# 
  1122  0E9F                     	;# 
  1123  0EA0                     	;# 
  1124  0EA1                     	;# 
  1125  0EA2                     	;# 
  1126  0EA3                     	;# 
  1127  0EA4                     	;# 
  1128  0EA5                     	;# 
  1129  0EA6                     	;# 
  1130  0EA7                     	;# 
  1131  0F0F                     	;# 
  1132  0F10                     	;# 
  1133  0F11                     	;# 
  1134  0F12                     	;# 
  1135  0F13                     	;# 
  1136  0F14                     	;# 
  1137  0F15                     	;# 
  1138  0F16                     	;# 
  1139  0F17                     	;# 
  1140  0F18                     	;# 
  1141  0F19                     	;# 
  1142  0F1A                     	;# 
  1143  0F1B                     	;# 
  1144  0F1C                     	;# 
  1145  0F1D                     	;# 
  1146  0F1E                     	;# 
  1147  0F1F                     	;# 
  1148  0F20                     	;# 
  1149  0F21                     	;# 
  1150  0F22                     	;# 
  1151  0F23                     	;# 
  1152  0F24                     	;# 
  1153  0F25                     	;# 
  1154  0F26                     	;# 
  1155  0F27                     	;# 
  1156  0F28                     	;# 
  1157  0F29                     	;# 
  1158  0F2A                     	;# 
  1159  0F2B                     	;# 
  1160  0F2C                     	;# 
  1161  0F2D                     	;# 
  1162  0F2E                     	;# 
  1163  0F2F                     	;# 
  1164  0F30                     	;# 
  1165  0F31                     	;# 
  1166  0F32                     	;# 
  1167  0F33                     	;# 
  1168  0F34                     	;# 
  1169  0F35                     	;# 
  1170  0F36                     	;# 
  1171  0F37                     	;# 
  1172  0FE4                     	;# 
  1173  0FE5                     	;# 
  1174  0FE6                     	;# 
  1175  0FE7                     	;# 
  1176  0FE8                     	;# 
  1177  0FE9                     	;# 
  1178  0FEA                     	;# 
  1179  0FEB                     	;# 
  1180  0FED                     	;# 
  1181  0FEE                     	;# 
  1182  0FEF                     	;# 
  1183  0000                     	;# 
  1184  0001                     	;# 
  1185  0002                     	;# 
  1186  0003                     	;# 
  1187  0004                     	;# 
  1188  0005                     	;# 
  1189  0006                     	;# 
  1190  0007                     	;# 
  1191  0008                     	;# 
  1192  0009                     	;# 
  1193  000A                     	;# 
  1194  000B                     	;# 
  1195  000C                     	;# 
  1196  000D                     	;# 
  1197  000E                     	;# 
  1198  0010                     	;# 
  1199  0011                     	;# 
  1200  0012                     	;# 
  1201  0013                     	;# 
  1202  0015                     	;# 
  1203  0016                     	;# 
  1204  0016                     	;# 
  1205  0017                     	;# 
  1206  0018                     	;# 
  1207  0019                     	;# 
  1208  001A                     	;# 
  1209  001B                     	;# 
  1210  001C                     	;# 
  1211  008C                     	;# 
  1212  008D                     	;# 
  1213  008E                     	;# 
  1214  0090                     	;# 
  1215  0091                     	;# 
  1216  0092                     	;# 
  1217  0093                     	;# 
  1218  0095                     	;# 
  1219  0096                     	;# 
  1220  0097                     	;# 
  1221  0098                     	;# 
  1222  0099                     	;# 
  1223  009A                     	;# 
  1224  009B                     	;# 
  1225  009B                     	;# 
  1226  009C                     	;# 
  1227  009D                     	;# 
  1228  009E                     	;# 
  1229  009F                     	;# 
  1230  010C                     	;# 
  1231  010D                     	;# 
  1232  010E                     	;# 
  1233  0111                     	;# 
  1234  0112                     	;# 
  1235  0113                     	;# 
  1236  0114                     	;# 
  1237  0115                     	;# 
  1238  0116                     	;# 
  1239  0117                     	;# 
  1240  0118                     	;# 
  1241  0119                     	;# 
  1242  011A                     	;# 
  1243  011B                     	;# 
  1244  011B                     	;# 
  1245  011C                     	;# 
  1246  018C                     	;# 
  1247  018D                     	;# 
  1248  018E                     	;# 
  1249  0191                     	;# 
  1250  0191                     	;# 
  1251  0192                     	;# 
  1252  0193                     	;# 
  1253  0193                     	;# 
  1254  0194                     	;# 
  1255  0195                     	;# 
  1256  0196                     	;# 
  1257  0197                     	;# 
  1258  0199                     	;# 
  1259  0199                     	;# 
  1260  0199                     	;# 
  1261  019A                     	;# 
  1262  019A                     	;# 
  1263  019A                     	;# 
  1264  019B                     	;# 
  1265  019B                     	;# 
  1266  019B                     	;# 
  1267  019B                     	;# 
  1268  019B                     	;# 
  1269  019C                     	;# 
  1270  019C                     	;# 
  1271  019C                     	;# 
  1272  019D                     	;# 
  1273  019D                     	;# 
  1274  019D                     	;# 
  1275  019E                     	;# 
  1276  019E                     	;# 
  1277  019E                     	;# 
  1278  019F                     	;# 
  1279  019F                     	;# 
  1280  019F                     	;# 
  1281  019F                     	;# 
  1282  019F                     	;# 
  1283  020C                     	;# 
  1284  020D                     	;# 
  1285  020E                     	;# 
  1286  0210                     	;# 
  1287  0211                     	;# 
  1288  0211                     	;# 
  1289  0212                     	;# 
  1290  0212                     	;# 
  1291  0213                     	;# 
  1292  0213                     	;# 
  1293  0214                     	;# 
  1294  0214                     	;# 
  1295  0215                     	;# 
  1296  0215                     	;# 
  1297  0215                     	;# 
  1298  0215                     	;# 
  1299  0216                     	;# 
  1300  0216                     	;# 
  1301  0217                     	;# 
  1302  0217                     	;# 
  1303  028C                     	;# 
  1304  028D                     	;# 
  1305  028E                     	;# 
  1306  0291                     	;# 
  1307  0291                     	;# 
  1308  0292                     	;# 
  1309  0293                     	;# 
  1310  0293                     	;# 
  1311  0298                     	;# 
  1312  0298                     	;# 
  1313  0299                     	;# 
  1314  029A                     	;# 
  1315  029A                     	;# 
  1316  029E                     	;# 
  1317  030C                     	;# 
  1318  030D                     	;# 
  1319  030E                     	;# 
  1320  038C                     	;# 
  1321  038D                     	;# 
  1322  038E                     	;# 
  1323  0390                     	;# 
  1324  0391                     	;# 
  1325  0392                     	;# 
  1326  0393                     	;# 
  1327  0394                     	;# 
  1328  0395                     	;# 
  1329  0396                     	;# 
  1330  0397                     	;# 
  1331  0398                     	;# 
  1332  0399                     	;# 
  1333  039D                     	;# 
  1334  039E                     	;# 
  1335  039F                     	;# 
  1336  0415                     	;# 
  1337  0416                     	;# 
  1338  0417                     	;# 
  1339  041C                     	;# 
  1340  041D                     	;# 
  1341  041E                     	;# 
  1342  0498                     	;# 
  1343  0498                     	;# 
  1344  0499                     	;# 
  1345  049A                     	;# 
  1346  049B                     	;# 
  1347  049B                     	;# 
  1348  049C                     	;# 
  1349  049D                     	;# 
  1350  049E                     	;# 
  1351  049F                     	;# 
  1352  0511                     	;# 
  1353  0515                     	;# 
  1354  0617                     	;# 
  1355  0618                     	;# 
  1356  0619                     	;# 
  1357  0619                     	;# 
  1358  061A                     	;# 
  1359  061B                     	;# 
  1360  061C                     	;# 
  1361  061C                     	;# 
  1362  0691                     	;# 
  1363  0692                     	;# 
  1364  0693                     	;# 
  1365  0694                     	;# 
  1366  0695                     	;# 
  1367  0696                     	;# 
  1368  0697                     	;# 
  1369  0698                     	;# 
  1370  0699                     	;# 
  1371  069A                     	;# 
  1372  069B                     	;# 
  1373  069C                     	;# 
  1374  069D                     	;# 
  1375  069E                     	;# 
  1376  069F                     	;# 
  1377  0E0F                     	;# 
  1378  0E10                     	;# 
  1379  0E11                     	;# 
  1380  0E12                     	;# 
  1381  0E13                     	;# 
  1382  0E14                     	;# 
  1383  0E15                     	;# 
  1384  0E17                     	;# 
  1385  0E20                     	;# 
  1386  0E21                     	;# 
  1387  0E22                     	;# 
  1388  0E24                     	;# 
  1389  0E25                     	;# 
  1390  0E28                     	;# 
  1391  0E29                     	;# 
  1392  0E2A                     	;# 
  1393  0E2B                     	;# 
  1394  0E90                     	;# 
  1395  0E91                     	;# 
  1396  0E92                     	;# 
  1397  0E93                     	;# 
  1398  0E94                     	;# 
  1399  0E95                     	;# 
  1400  0E96                     	;# 
  1401  0E97                     	;# 
  1402  0E98                     	;# 
  1403  0E99                     	;# 
  1404  0E9A                     	;# 
  1405  0E9B                     	;# 
  1406  0E9C                     	;# 
  1407  0E9D                     	;# 
  1408  0E9E                     	;# 
  1409  0E9F                     	;# 
  1410  0EA0                     	;# 
  1411  0EA1                     	;# 
  1412  0EA2                     	;# 
  1413  0EA3                     	;# 
  1414  0EA4                     	;# 
  1415  0EA5                     	;# 
  1416  0EA6                     	;# 
  1417  0EA7                     	;# 
  1418  0F0F                     	;# 
  1419  0F10                     	;# 
  1420  0F11                     	;# 
  1421  0F12                     	;# 
  1422  0F13                     	;# 
  1423  0F14                     	;# 
  1424  0F15                     	;# 
  1425  0F16                     	;# 
  1426  0F17                     	;# 
  1427  0F18                     	;# 
  1428  0F19                     	;# 
  1429  0F1A                     	;# 
  1430  0F1B                     	;# 
  1431  0F1C                     	;# 
  1432  0F1D                     	;# 
  1433  0F1E                     	;# 
  1434  0F1F                     	;# 
  1435  0F20                     	;# 
  1436  0F21                     	;# 
  1437  0F22                     	;# 
  1438  0F23                     	;# 
  1439  0F24                     	;# 
  1440  0F25                     	;# 
  1441  0F26                     	;# 
  1442  0F27                     	;# 
  1443  0F28                     	;# 
  1444  0F29                     	;# 
  1445  0F2A                     	;# 
  1446  0F2B                     	;# 
  1447  0F2C                     	;# 
  1448  0F2D                     	;# 
  1449  0F2E                     	;# 
  1450  0F2F                     	;# 
  1451  0F30                     	;# 
  1452  0F31                     	;# 
  1453  0F32                     	;# 
  1454  0F33                     	;# 
  1455  0F34                     	;# 
  1456  0F35                     	;# 
  1457  0F36                     	;# 
  1458  0F37                     	;# 
  1459  0FE4                     	;# 
  1460  0FE5                     	;# 
  1461  0FE6                     	;# 
  1462  0FE7                     	;# 
  1463  0FE8                     	;# 
  1464  0FE9                     	;# 
  1465  0FEA                     	;# 
  1466  0FEB                     	;# 
  1467  0FED                     	;# 
  1468  0FEE                     	;# 
  1469  0FEF                     	;# 
  1470  0000                     	;# 
  1471  0001                     	;# 
  1472  0002                     	;# 
  1473  0003                     	;# 
  1474  0004                     	;# 
  1475  0005                     	;# 
  1476  0006                     	;# 
  1477  0007                     	;# 
  1478  0008                     	;# 
  1479  0009                     	;# 
  1480  000A                     	;# 
  1481  000B                     	;# 
  1482  000C                     	;# 
  1483  000D                     	;# 
  1484  000E                     	;# 
  1485  0010                     	;# 
  1486  0011                     	;# 
  1487  0012                     	;# 
  1488  0013                     	;# 
  1489  0015                     	;# 
  1490  0016                     	;# 
  1491  0016                     	;# 
  1492  0017                     	;# 
  1493  0018                     	;# 
  1494  0019                     	;# 
  1495  001A                     	;# 
  1496  001B                     	;# 
  1497  001C                     	;# 
  1498  008C                     	;# 
  1499  008D                     	;# 
  1500  008E                     	;# 
  1501  0090                     	;# 
  1502  0091                     	;# 
  1503  0092                     	;# 
  1504  0093                     	;# 
  1505  0095                     	;# 
  1506  0096                     	;# 
  1507  0097                     	;# 
  1508  0098                     	;# 
  1509  0099                     	;# 
  1510  009A                     	;# 
  1511  009B                     	;# 
  1512  009B                     	;# 
  1513  009C                     	;# 
  1514  009D                     	;# 
  1515  009E                     	;# 
  1516  009F                     	;# 
  1517  010C                     	;# 
  1518  010D                     	;# 
  1519  010E                     	;# 
  1520  0111                     	;# 
  1521  0112                     	;# 
  1522  0113                     	;# 
  1523  0114                     	;# 
  1524  0115                     	;# 
  1525  0116                     	;# 
  1526  0117                     	;# 
  1527  0118                     	;# 
  1528  0119                     	;# 
  1529  011A                     	;# 
  1530  011B                     	;# 
  1531  011B                     	;# 
  1532  011C                     	;# 
  1533  018C                     	;# 
  1534  018D                     	;# 
  1535  018E                     	;# 
  1536  0191                     	;# 
  1537  0191                     	;# 
  1538  0192                     	;# 
  1539  0193                     	;# 
  1540  0193                     	;# 
  1541  0194                     	;# 
  1542  0195                     	;# 
  1543  0196                     	;# 
  1544  0197                     	;# 
  1545  0199                     	;# 
  1546  0199                     	;# 
  1547  0199                     	;# 
  1548  019A                     	;# 
  1549  019A                     	;# 
  1550  019A                     	;# 
  1551  019B                     	;# 
  1552  019B                     	;# 
  1553  019B                     	;# 
  1554  019B                     	;# 
  1555  019B                     	;# 
  1556  019C                     	;# 
  1557  019C                     	;# 
  1558  019C                     	;# 
  1559  019D                     	;# 
  1560  019D                     	;# 
  1561  019D                     	;# 
  1562  019E                     	;# 
  1563  019E                     	;# 
  1564  019E                     	;# 
  1565  019F                     	;# 
  1566  019F                     	;# 
  1567  019F                     	;# 
  1568  019F                     	;# 
  1569  019F                     	;# 
  1570  020C                     	;# 
  1571  020D                     	;# 
  1572  020E                     	;# 
  1573  0210                     	;# 
  1574  0211                     	;# 
  1575  0211                     	;# 
  1576  0212                     	;# 
  1577  0212                     	;# 
  1578  0213                     	;# 
  1579  0213                     	;# 
  1580  0214                     	;# 
  1581  0214                     	;# 
  1582  0215                     	;# 
  1583  0215                     	;# 
  1584  0215                     	;# 
  1585  0215                     	;# 
  1586  0216                     	;# 
  1587  0216                     	;# 
  1588  0217                     	;# 
  1589  0217                     	;# 
  1590  028C                     	;# 
  1591  028D                     	;# 
  1592  028E                     	;# 
  1593  0291                     	;# 
  1594  0291                     	;# 
  1595  0292                     	;# 
  1596  0293                     	;# 
  1597  0293                     	;# 
  1598  0298                     	;# 
  1599  0298                     	;# 
  1600  0299                     	;# 
  1601  029A                     	;# 
  1602  029A                     	;# 
  1603  029E                     	;# 
  1604  030C                     	;# 
  1605  030D                     	;# 
  1606  030E                     	;# 
  1607  038C                     	;# 
  1608  038D                     	;# 
  1609  038E                     	;# 
  1610  0390                     	;# 
  1611  0391                     	;# 
  1612  0392                     	;# 
  1613  0393                     	;# 
  1614  0394                     	;# 
  1615  0395                     	;# 
  1616  0396                     	;# 
  1617  0397                     	;# 
  1618  0398                     	;# 
  1619  0399                     	;# 
  1620  039D                     	;# 
  1621  039E                     	;# 
  1622  039F                     	;# 
  1623  0415                     	;# 
  1624  0416                     	;# 
  1625  0417                     	;# 
  1626  041C                     	;# 
  1627  041D                     	;# 
  1628  041E                     	;# 
  1629  0498                     	;# 
  1630  0498                     	;# 
  1631  0499                     	;# 
  1632  049A                     	;# 
  1633  049B                     	;# 
  1634  049B                     	;# 
  1635  049C                     	;# 
  1636  049D                     	;# 
  1637  049E                     	;# 
  1638  049F                     	;# 
  1639  0511                     	;# 
  1640  0515                     	;# 
  1641  0617                     	;# 
  1642  0618                     	;# 
  1643  0619                     	;# 
  1644  0619                     	;# 
  1645  061A                     	;# 
  1646  061B                     	;# 
  1647  061C                     	;# 
  1648  061C                     	;# 
  1649  0691                     	;# 
  1650  0692                     	;# 
  1651  0693                     	;# 
  1652  0694                     	;# 
  1653  0695                     	;# 
  1654  0696                     	;# 
  1655  0697                     	;# 
  1656  0698                     	;# 
  1657  0699                     	;# 
  1658  069A                     	;# 
  1659  069B                     	;# 
  1660  069C                     	;# 
  1661  069D                     	;# 
  1662  069E                     	;# 
  1663  069F                     	;# 
  1664  0E0F                     	;# 
  1665  0E10                     	;# 
  1666  0E11                     	;# 
  1667  0E12                     	;# 
  1668  0E13                     	;# 
  1669  0E14                     	;# 
  1670  0E15                     	;# 
  1671  0E17                     	;# 
  1672  0E20                     	;# 
  1673  0E21                     	;# 
  1674  0E22                     	;# 
  1675  0E24                     	;# 
  1676  0E25                     	;# 
  1677  0E28                     	;# 
  1678  0E29                     	;# 
  1679  0E2A                     	;# 
  1680  0E2B                     	;# 
  1681  0E90                     	;# 
  1682  0E91                     	;# 
  1683  0E92                     	;# 
  1684  0E93                     	;# 
  1685  0E94                     	;# 
  1686  0E95                     	;# 
  1687  0E96                     	;# 
  1688  0E97                     	;# 
  1689  0E98                     	;# 
  1690  0E99                     	;# 
  1691  0E9A                     	;# 
  1692  0E9B                     	;# 
  1693  0E9C                     	;# 
  1694  0E9D                     	;# 
  1695  0E9E                     	;# 
  1696  0E9F                     	;# 
  1697  0EA0                     	;# 
  1698  0EA1                     	;# 
  1699  0EA2                     	;# 
  1700  0EA3                     	;# 
  1701  0EA4                     	;# 
  1702  0EA5                     	;# 
  1703  0EA6                     	;# 
  1704  0EA7                     	;# 
  1705  0F0F                     	;# 
  1706  0F10                     	;# 
  1707  0F11                     	;# 
  1708  0F12                     	;# 
  1709  0F13                     	;# 
  1710  0F14                     	;# 
  1711  0F15                     	;# 
  1712  0F16                     	;# 
  1713  0F17                     	;# 
  1714  0F18                     	;# 
  1715  0F19                     	;# 
  1716  0F1A                     	;# 
  1717  0F1B                     	;# 
  1718  0F1C                     	;# 
  1719  0F1D                     	;# 
  1720  0F1E                     	;# 
  1721  0F1F                     	;# 
  1722  0F20                     	;# 
  1723  0F21                     	;# 
  1724  0F22                     	;# 
  1725  0F23                     	;# 
  1726  0F24                     	;# 
  1727  0F25                     	;# 
  1728  0F26                     	;# 
  1729  0F27                     	;# 
  1730  0F28                     	;# 
  1731  0F29                     	;# 
  1732  0F2A                     	;# 
  1733  0F2B                     	;# 
  1734  0F2C                     	;# 
  1735  0F2D                     	;# 
  1736  0F2E                     	;# 
  1737  0F2F                     	;# 
  1738  0F30                     	;# 
  1739  0F31                     	;# 
  1740  0F32                     	;# 
  1741  0F33                     	;# 
  1742  0F34                     	;# 
  1743  0F35                     	;# 
  1744  0F36                     	;# 
  1745  0F37                     	;# 
  1746  0FE4                     	;# 
  1747  0FE5                     	;# 
  1748  0FE6                     	;# 
  1749  0FE7                     	;# 
  1750  0FE8                     	;# 
  1751  0FE9                     	;# 
  1752  0FEA                     	;# 
  1753  0FEB                     	;# 
  1754  0FED                     	;# 
  1755  0FEE                     	;# 
  1756  0FEF                     	;# 
  1757  0000                     	;# 
  1758  0001                     	;# 
  1759  0002                     	;# 
  1760  0003                     	;# 
  1761  0004                     	;# 
  1762  0005                     	;# 
  1763  0006                     	;# 
  1764  0007                     	;# 
  1765  0008                     	;# 
  1766  0009                     	;# 
  1767  000A                     	;# 
  1768  000B                     	;# 
  1769  000C                     	;# 
  1770  000D                     	;# 
  1771  000E                     	;# 
  1772  0010                     	;# 
  1773  0011                     	;# 
  1774  0012                     	;# 
  1775  0013                     	;# 
  1776  0015                     	;# 
  1777  0016                     	;# 
  1778  0016                     	;# 
  1779  0017                     	;# 
  1780  0018                     	;# 
  1781  0019                     	;# 
  1782  001A                     	;# 
  1783  001B                     	;# 
  1784  001C                     	;# 
  1785  008C                     	;# 
  1786  008D                     	;# 
  1787  008E                     	;# 
  1788  0090                     	;# 
  1789  0091                     	;# 
  1790  0092                     	;# 
  1791  0093                     	;# 
  1792  0095                     	;# 
  1793  0096                     	;# 
  1794  0097                     	;# 
  1795  0098                     	;# 
  1796  0099                     	;# 
  1797  009A                     	;# 
  1798  009B                     	;# 
  1799  009B                     	;# 
  1800  009C                     	;# 
  1801  009D                     	;# 
  1802  009E                     	;# 
  1803  009F                     	;# 
  1804  010C                     	;# 
  1805  010D                     	;# 
  1806  010E                     	;# 
  1807  0111                     	;# 
  1808  0112                     	;# 
  1809  0113                     	;# 
  1810  0114                     	;# 
  1811  0115                     	;# 
  1812  0116                     	;# 
  1813  0117                     	;# 
  1814  0118                     	;# 
  1815  0119                     	;# 
  1816  011A                     	;# 
  1817  011B                     	;# 
  1818  011B                     	;# 
  1819  011C                     	;# 
  1820  018C                     	;# 
  1821  018D                     	;# 
  1822  018E                     	;# 
  1823  0191                     	;# 
  1824  0191                     	;# 
  1825  0192                     	;# 
  1826  0193                     	;# 
  1827  0193                     	;# 
  1828  0194                     	;# 
  1829  0195                     	;# 
  1830  0196                     	;# 
  1831  0197                     	;# 
  1832  0199                     	;# 
  1833  0199                     	;# 
  1834  0199                     	;# 
  1835  019A                     	;# 
  1836  019A                     	;# 
  1837  019A                     	;# 
  1838  019B                     	;# 
  1839  019B                     	;# 
  1840  019B                     	;# 
  1841  019B                     	;# 
  1842  019B                     	;# 
  1843  019C                     	;# 
  1844  019C                     	;# 
  1845  019C                     	;# 
  1846  019D                     	;# 
  1847  019D                     	;# 
  1848  019D                     	;# 
  1849  019E                     	;# 
  1850  019E                     	;# 
  1851  019E                     	;# 
  1852  019F                     	;# 
  1853  019F                     	;# 
  1854  019F                     	;# 
  1855  019F                     	;# 
  1856  019F                     	;# 
  1857  020C                     	;# 
  1858  020D                     	;# 
  1859  020E                     	;# 
  1860  0210                     	;# 
  1861  0211                     	;# 
  1862  0211                     	;# 
  1863  0212                     	;# 
  1864  0212                     	;# 
  1865  0213                     	;# 
  1866  0213                     	;# 
  1867  0214                     	;# 
  1868  0214                     	;# 
  1869  0215                     	;# 
  1870  0215                     	;# 
  1871  0215                     	;# 
  1872  0215                     	;# 
  1873  0216                     	;# 
  1874  0216                     	;# 
  1875  0217                     	;# 
  1876  0217                     	;# 
  1877  028C                     	;# 
  1878  028D                     	;# 
  1879  028E                     	;# 
  1880  0291                     	;# 
  1881  0291                     	;# 
  1882  0292                     	;# 
  1883  0293                     	;# 
  1884  0293                     	;# 
  1885  0298                     	;# 
  1886  0298                     	;# 
  1887  0299                     	;# 
  1888  029A                     	;# 
  1889  029A                     	;# 
  1890  029E                     	;# 
  1891  030C                     	;# 
  1892  030D                     	;# 
  1893  030E                     	;# 
  1894  038C                     	;# 
  1895  038D                     	;# 
  1896  038E                     	;# 
  1897  0390                     	;# 
  1898  0391                     	;# 
  1899  0392                     	;# 
  1900  0393                     	;# 
  1901  0394                     	;# 
  1902  0395                     	;# 
  1903  0396                     	;# 
  1904  0397                     	;# 
  1905  0398                     	;# 
  1906  0399                     	;# 
  1907  039D                     	;# 
  1908  039E                     	;# 
  1909  039F                     	;# 
  1910  0415                     	;# 
  1911  0416                     	;# 
  1912  0417                     	;# 
  1913  041C                     	;# 
  1914  041D                     	;# 
  1915  041E                     	;# 
  1916  0498                     	;# 
  1917  0498                     	;# 
  1918  0499                     	;# 
  1919  049A                     	;# 
  1920  049B                     	;# 
  1921  049B                     	;# 
  1922  049C                     	;# 
  1923  049D                     	;# 
  1924  049E                     	;# 
  1925  049F                     	;# 
  1926  0511                     	;# 
  1927  0515                     	;# 
  1928  0617                     	;# 
  1929  0618                     	;# 
  1930  0619                     	;# 
  1931  0619                     	;# 
  1932  061A                     	;# 
  1933  061B                     	;# 
  1934  061C                     	;# 
  1935  061C                     	;# 
  1936  0691                     	;# 
  1937  0692                     	;# 
  1938  0693                     	;# 
  1939  0694                     	;# 
  1940  0695                     	;# 
  1941  0696                     	;# 
  1942  0697                     	;# 
  1943  0698                     	;# 
  1944  0699                     	;# 
  1945  069A                     	;# 
  1946  069B                     	;# 
  1947  069C                     	;# 
  1948  069D                     	;# 
  1949  069E                     	;# 
  1950  069F                     	;# 
  1951  0E0F                     	;# 
  1952  0E10                     	;# 
  1953  0E11                     	;# 
  1954  0E12                     	;# 
  1955  0E13                     	;# 
  1956  0E14                     	;# 
  1957  0E15                     	;# 
  1958  0E17                     	;# 
  1959  0E20                     	;# 
  1960  0E21                     	;# 
  1961  0E22                     	;# 
  1962  0E24                     	;# 
  1963  0E25                     	;# 
  1964  0E28                     	;# 
  1965  0E29                     	;# 
  1966  0E2A                     	;# 
  1967  0E2B                     	;# 
  1968  0E90                     	;# 
  1969  0E91                     	;# 
  1970  0E92                     	;# 
  1971  0E93                     	;# 
  1972  0E94                     	;# 
  1973  0E95                     	;# 
  1974  0E96                     	;# 
  1975  0E97                     	;# 
  1976  0E98                     	;# 
  1977  0E99                     	;# 
  1978  0E9A                     	;# 
  1979  0E9B                     	;# 
  1980  0E9C                     	;# 
  1981  0E9D                     	;# 
  1982  0E9E                     	;# 
  1983  0E9F                     	;# 
  1984  0EA0                     	;# 
  1985  0EA1                     	;# 
  1986  0EA2                     	;# 
  1987  0EA3                     	;# 
  1988  0EA4                     	;# 
  1989  0EA5                     	;# 
  1990  0EA6                     	;# 
  1991  0EA7                     	;# 
  1992  0F0F                     	;# 
  1993  0F10                     	;# 
  1994  0F11                     	;# 
  1995  0F12                     	;# 
  1996  0F13                     	;# 
  1997  0F14                     	;# 
  1998  0F15                     	;# 
  1999  0F16                     	;# 
  2000  0F17                     	;# 
  2001  0F18                     	;# 
  2002  0F19                     	;# 
  2003  0F1A                     	;# 
  2004  0F1B                     	;# 
  2005  0F1C                     	;# 
  2006  0F1D                     	;# 
  2007  0F1E                     	;# 
  2008  0F1F                     	;# 
  2009  0F20                     	;# 
  2010  0F21                     	;# 
  2011  0F22                     	;# 
  2012  0F23                     	;# 
  2013  0F24                     	;# 
  2014  0F25                     	;# 
  2015  0F26                     	;# 
  2016  0F27                     	;# 
  2017  0F28                     	;# 
  2018  0F29                     	;# 
  2019  0F2A                     	;# 
  2020  0F2B                     	;# 
  2021  0F2C                     	;# 
  2022  0F2D                     	;# 
  2023  0F2E                     	;# 
  2024  0F2F                     	;# 
  2025  0F30                     	;# 
  2026  0F31                     	;# 
  2027  0F32                     	;# 
  2028  0F33                     	;# 
  2029  0F34                     	;# 
  2030  0F35                     	;# 
  2031  0F36                     	;# 
  2032  0F37                     	;# 
  2033  0FE4                     	;# 
  2034  0FE5                     	;# 
  2035  0FE6                     	;# 
  2036  0FE7                     	;# 
  2037  0FE8                     	;# 
  2038  0FE9                     	;# 
  2039  0FEA                     	;# 
  2040  0FEB                     	;# 
  2041  0FED                     	;# 
  2042  0FEE                     	;# 
  2043  0FEF                     	;I2C_StatusCallback@EEPROM_Buffer
  2044                           
  2045                           	psect	idataCOMMON
  2046  0326                     __pidataCOMMON:	
  2047                           
  2048                           ;initializer for _I2C_slaveWriteData
  2049  0326  3455               	retlw	85
  2050                           
  2051                           ;initializer for _i2cread_ptr
  2052  0327  3423               	retlw	low (_adc_readings| 0)
  2053                           
  2054                           	psect	idataBANK0
  2055  0328                     __pidataBANK0:	
  2056                           
  2057                           ;initializer for _adc_readings_ptr
  2058  0328  3423               	retlw	low (_adc_readings| 0)
  2059                           
  2060                           	psect	idataBIGRAM
  2061  0133                     __pidataBIGRAM:	
  2062                           
  2063                           ;initializer for I2C_StatusCallback@EEPROM_Buffer
  2064  0133  3400               	retlw	0
  2065  0134  3401               	retlw	1
  2066  0135  3402               	retlw	2
  2067  0136  3403               	retlw	3
  2068  0137  3404               	retlw	4
  2069  0138  3405               	retlw	5
  2070  0139  3406               	retlw	6
  2071  013A  3407               	retlw	7
  2072  013B  3408               	retlw	8
  2073  013C  3409               	retlw	9
  2074  013D  340A               	retlw	10
  2075  013E  340B               	retlw	11
  2076  013F  340C               	retlw	12
  2077  0140  340D               	retlw	13
  2078  0141  340E               	retlw	14
  2079  0142  340F               	retlw	15
  2080  0143  3410               	retlw	16
  2081  0144  3411               	retlw	17
  2082  0145  3412               	retlw	18
  2083  0146  3413               	retlw	19
  2084  0147  3414               	retlw	20
  2085  0148  3415               	retlw	21
  2086  0149  3416               	retlw	22
  2087  014A  3417               	retlw	23
  2088  014B  3418               	retlw	24
  2089  014C  3419               	retlw	25
  2090  014D  341A               	retlw	26
  2091  014E  341B               	retlw	27
  2092  014F  341C               	retlw	28
  2093  0150  341D               	retlw	29
  2094  0151  341E               	retlw	30
  2095  0152  341F               	retlw	31
  2096  0153  3420               	retlw	32
  2097  0154  3421               	retlw	33
  2098  0155  3422               	retlw	34
  2099  0156  3423               	retlw	35
  2100  0157  3424               	retlw	36
  2101  0158  3425               	retlw	37
  2102  0159  3426               	retlw	38
  2103  015A  3427               	retlw	39
  2104  015B  3428               	retlw	40
  2105  015C  3429               	retlw	41
  2106  015D  342A               	retlw	42
  2107  015E  342B               	retlw	43
  2108  015F  342C               	retlw	44
  2109  0160  342D               	retlw	45
  2110  0161  342E               	retlw	46
  2111  0162  342F               	retlw	47
  2112  0163  3430               	retlw	48
  2113  0164  3431               	retlw	49
  2114  0165  3432               	retlw	50
  2115  0166  3433               	retlw	51
  2116  0167  3434               	retlw	52
  2117  0168  3435               	retlw	53
  2118  0169  3436               	retlw	54
  2119  016A  3437               	retlw	55
  2120  016B  3438               	retlw	56
  2121  016C  3439               	retlw	57
  2122  016D  343A               	retlw	58
  2123  016E  343B               	retlw	59
  2124  016F  343C               	retlw	60
  2125  0170  343D               	retlw	61
  2126  0171  343E               	retlw	62
  2127  0172  343F               	retlw	63
  2128  0173  3440               	retlw	64
  2129  0174  3441               	retlw	65
  2130  0175  3442               	retlw	66
  2131  0176  3443               	retlw	67
  2132  0177  3444               	retlw	68
  2133  0178  3445               	retlw	69
  2134  0179  3446               	retlw	70
  2135  017A  3447               	retlw	71
  2136  017B  3448               	retlw	72
  2137  017C  3449               	retlw	73
  2138  017D  344A               	retlw	74
  2139  017E  344B               	retlw	75
  2140  017F  344C               	retlw	76
  2141  0180  344D               	retlw	77
  2142  0181  344E               	retlw	78
  2143  0182  344F               	retlw	79
  2144  0183  3450               	retlw	80
  2145  0184  3451               	retlw	81
  2146  0185  3452               	retlw	82
  2147  0186  3453               	retlw	83
  2148  0187  3454               	retlw	84
  2149  0188  3455               	retlw	85
  2150  0189  3456               	retlw	86
  2151  018A  3457               	retlw	87
  2152  018B  3458               	retlw	88
  2153  018C  3459               	retlw	89
  2154  018D  345A               	retlw	90
  2155  018E  345B               	retlw	91
  2156  018F  345C               	retlw	92
  2157  0190  345D               	retlw	93
  2158  0191  345E               	retlw	94
  2159  0192  345F               	retlw	95
  2160  0193  3460               	retlw	96
  2161  0194  3461               	retlw	97
  2162  0195  3462               	retlw	98
  2163  0196  3463               	retlw	99
  2164  0197  3464               	retlw	100
  2165  0198  3465               	retlw	101
  2166  0199  3466               	retlw	102
  2167  019A  3467               	retlw	103
  2168  019B  3468               	retlw	104
  2169  019C  3469               	retlw	105
  2170  019D  346A               	retlw	106
  2171  019E  346B               	retlw	107
  2172  019F  346C               	retlw	108
  2173  01A0  346D               	retlw	109
  2174  01A1  346E               	retlw	110
  2175  01A2  346F               	retlw	111
  2176  01A3  3470               	retlw	112
  2177  01A4  3471               	retlw	113
  2178  01A5  3472               	retlw	114
  2179  01A6  3473               	retlw	115
  2180  01A7  3474               	retlw	116
  2181  01A8  3475               	retlw	117
  2182  01A9  3476               	retlw	118
  2183  01AA  3477               	retlw	119
  2184  01AB  3478               	retlw	120
  2185  01AC  3479               	retlw	121
  2186  01AD  347A               	retlw	122
  2187  01AE  347B               	retlw	123
  2188  01AF  347C               	retlw	124
  2189  01B0  347D               	retlw	125
  2190  01B1  347E               	retlw	126
  2191  01B2  347F               	retlw	127
  2192  000B                     _INTCONbits	set	11
  2193  0011                     _PIR1bits	set	17
  2194  005F                     _GIE	set	95
  2195  009D                     _ADCON0	set	157
  2196  009D                     _ADCON0bits	set	157
  2197  009E                     _ADCON1	set	158
  2198  009F                     _ADCON2	set	159
  2199  009C                     _ADRESH	set	156
  2200  009B                     _ADRESL	set	155
  2201  0095                     _OPTION_REGbits	set	149
  2202  0099                     _OSCCON	set	153
  2203  009A                     _OSCSTAT	set	154
  2204  0098                     _OSCTUNE	set	152
  2205  0091                     _PIE1bits	set	145
  2206  008C                     _TRISA	set	140
  2207  008D                     _TRISB	set	141
  2208  008E                     _TRISC	set	142
  2209  0090                     _TRISE	set	144
  2210  010C                     _LATA	set	268
  2211  010D                     _LATB	set	269
  2212  010E                     _LATC	set	270
  2213  018C                     _ANSELA	set	396
  2214  018D                     _ANSELB	set	397
  2215  018E                     _ANSELC	set	398
  2216  0212                     _SSP1ADD	set	530
  2217  0211                     _SSP1BUF	set	529
  2218  0215                     _SSP1CON1	set	533
  2219  0215                     _SSP1CON1bits	set	533
  2220  0216                     _SSP1CON2	set	534
  2221  0216                     _SSP1CON2bits	set	534
  2222  0217                     _SSP1CON3	set	535
  2223  0213                     _SSP1MSK	set	531
  2224  0214                     _SSP1STAT	set	532
  2225  0214                     _SSP1STATbits	set	532
  2226  020C                     _WPUA	set	524
  2227  020D                     _WPUB	set	525
  2228  020E                     _WPUC	set	526
  2229  0210                     _WPUE	set	528
  2230  0E0F                     _PPSLOCK	set	3599
  2231  0E0F                     _PPSLOCKbits	set	3599
  2232  0E20                     _SSPCLKPPSbits	set	3616
  2233  0E21                     _SSPDATPPSbits	set	3617
  2234  0EA0                     _RC0PPSbits	set	3744
  2235  0EA1                     _RC1PPSbits	set	3745
  2236                           
  2237                           ; #config settings
  2238  0000                     
  2239                           	psect	cinit
  2240  0022                     start_initialization:	
  2241  0022                     __initialization:		;BIGRAM
  2242                           
  2243                           ; Clear objects allocated to COMMON
  2244  0022  01F8               	clrf	__pbssCOMMON& (0+127)
  2245  0023  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  2246  0024  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  2247                           
  2248                           ; Clear objects allocated to BANK0
  2249  0025  3020               	movlw	low __pbssBANK0
  2250  0026  0084               	movwf	4
  2251  0027  3000               	movlw	high __pbssBANK0
  2252  0028  0085               	movwf	5
  2253  0029  3017               	movlw	23
  2254  002A  00FE               	movwf	btemp
  2255  002B  3000               	movlw	0
  2256  002C  00FF               	movwf	btemp+1
  2257  002D  3182  22E3  3180   	fcall	clear_ram0
  2258                           
  2259                           ; Initialize objects allocated to BIGRAM
  2260  0030  3033               	movlw	low __pidataBIGRAM
  2261  0031  0084               	movwf	4
  2262  0032  3081               	movlw	(high __pidataBIGRAM)| (0+128)
  2263  0033  0085               	movwf	5
  2264  0034  3070               	movlw	low (0+10096)
  2265  0035  0086               	movwf	6
  2266  0036  3027               	movlw	high (0+10096)
  2267  0037  0087               	movwf	7
  2268  0038  3000               	movlw	0
  2269  0039  00FF               	movwf	btemp+1
  2270  003A  3080               	movlw	128
  2271  003B  3182  22EF  3180   	fcall	init_ram
  2272                           
  2273                           ; Initialize objects allocated to COMMON
  2274  003E  3183  2326  3180   	fcall	__pidataCOMMON	;fetch initializer
  2275  0041  00FB               	movwf	__pdataCOMMON& (0+127)
  2276  0042  3183  2327  3180   	fcall	__pidataCOMMON+1	;fetch initializer
  2277  0045  00FC               	movwf	(__pdataCOMMON+1)& (0+127)
  2278                           
  2279                           ; Initialize objects allocated to BANK0
  2280  0046  3183  2328         	fcall	__pidataBANK0	;fetch initializer
  2281  0048  00BC               	movwf	__pdataBANK0& (0+127)
  2282  0049                     end_of_initialization:	
  2283                           ;End of C runtime variable initialization code
  2284                           
  2285  0049                     __end_of__initialization:	
  2286  0049  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2287  004A  0020               	movlb	0
  2288  004B  3182  2AFB         	ljmp	_main	;jump to C main() function
  2289                           
  2290                           	psect	bssCOMMON
  2291  0078                     __pbssCOMMON:	
  2292  0078                     I2C_StatusCallback@eepromAddress:	
  2293  0078                     	ds	1
  2294  0079                     I2C_StatusCallback@slaveWriteType:	
  2295  0079                     	ds	1
  2296  007A                     _Command:	
  2297  007A                     	ds	1
  2298                           
  2299                           	psect	dataCOMMON
  2300  007B                     __pdataCOMMON:	
  2301  007B                     _I2C_slaveWriteData:	
  2302  007B                     	ds	1
  2303  007C                     _i2cread_ptr:	
  2304  007C                     	ds	1
  2305                           
  2306                           	psect	bssBANK0
  2307  0020                     __pbssBANK0:	
  2308  0020                     _debug:	
  2309  0020                     	ds	2
  2310  0022                     _adc_state:	
  2311  0022                     	ds	1
  2312  0023                     _adc_readings:	
  2313  0023                     	ds	20
  2314                           
  2315                           	psect	dataBANK0
  2316  003C                     __pdataBANK0:	
  2317  003C                     _adc_readings_ptr:	
  2318  003C                     	ds	1
  2319                           
  2320                           	psect	clrtext
  2321  02E3                     clear_ram0:	
  2322                           ;	Called with FSR0 containing the base address, and
  2323                           ;	btemp/btemp+1 has the size to clear
  2324                           
  2325  02E3  0064               	clrwdt	;clear the watchdog before getting into this loop
  2326  02E4                     clrloop0:	
  2327  02E4  0180               	clrf	0	;clear RAM location pointed to by FSR
  2328  02E5  3101               	addfsr 0,1
  2329  02E6  3001               	movlw	1
  2330  02E7  02FE               	subwf	126,f
  2331  02E8  3000               	movlw	0
  2332  02E9  3BFF               	subwfb	127,f
  2333  02EA  087F               	movf	127,w
  2334  02EB  047E               	iorwf	126,w
  2335  02EC  1903               	btfsc	3,2
  2336  02ED  3400               	retlw	0	;all done for this memory range, return
  2337  02EE  2AE4               	goto	clrloop0	;have we reached the end yet?
  2338                           
  2339                           	psect	inittext
  2340  02EF                     init_ram:	
  2341  02EF  00FE               	movwf	126
  2342  02F0                     initloop:	
  2343  02F0  0012               	moviw fsr0++
  2344  02F1  001E               	movwi fsr1++
  2345  02F2  3001               	movlw	1
  2346  02F3  02FE               	subwf	126,f
  2347  02F4  3000               	movlw	0
  2348  02F5  3BFF               	subwfb	127,f
  2349  02F6  087F               	movf	127,w
  2350  02F7  047E               	iorwf	126,w
  2351  02F8  1903               	btfsc	3,2
  2352  02F9  3400               	retlw	0
  2353  02FA  2AF0               	goto	initloop
  2354                           
  2355                           	psect	cstackCOMMON
  2356  0070                     __pcstackCOMMON:	
  2357  0070                     ?_OSCILLATOR_Initialize:	
  2358  0070                     ?_ADC_Initialize:	
  2359                           ; 0 bytes @ 0x0
  2360                           
  2361  0070                     ?_I2C_Initialize:	
  2362                           ; 0 bytes @ 0x0
  2363                           
  2364  0070                     ?_I2C_StatusCallback:	
  2365                           ; 0 bytes @ 0x0
  2366                           
  2367  0070                     ??_getADCReading:	
  2368                           ; 0 bytes @ 0x0
  2369                           
  2370  0070                     ?_init_irRange:	
  2371                           ; 0 bytes @ 0x0
  2372                           
  2373  0070                     ?_readADCs:	
  2374                           ; 0 bytes @ 0x0
  2375                           
  2376  0070                     ?_PIN_MANAGER_Initialize:	
  2377                           ; 0 bytes @ 0x0
  2378                           
  2379  0070                     ?_SYSTEM_Initialize:	
  2380                           ; 0 bytes @ 0x0
  2381                           
  2382  0070                     ?_I2C_ISR:	
  2383                           ; 0 bytes @ 0x0
  2384                           
  2385  0070                     ?_ADC_ISR:	
  2386                           ; 0 bytes @ 0x0
  2387                           
  2388  0070                     ??_ADC_ISR:	
  2389                           ; 0 bytes @ 0x0
  2390                           
  2391  0070                     ?_INTERRUPT_InterruptManager:	
  2392                           ; 0 bytes @ 0x0
  2393                           
  2394  0070                     ?_main:	
  2395                           ; 0 bytes @ 0x0
  2396                           
  2397  0070                     ?_getADCReading:	
  2398                           ; 0 bytes @ 0x0
  2399                           
  2400                           
  2401                           ; 1 bytes @ 0x0
  2402  0070                     	ds	1
  2403  0071                     getADCReading@temp:	
  2404                           
  2405                           ; 1 bytes @ 0x1
  2406  0071                     	ds	1
  2407  0072                     ??_I2C_StatusCallback:	
  2408                           
  2409                           ; 0 bytes @ 0x2
  2410  0072                     	ds	2
  2411  0074                     I2C_StatusCallback@i2c_bus_state:	
  2412                           
  2413                           ; 1 bytes @ 0x4
  2414  0074                     	ds	1
  2415  0075                     ??_I2C_ISR:	
  2416                           
  2417                           ; 0 bytes @ 0x5
  2418  0075                     	ds	1
  2419  0076                     I2C_ISR@i2c_data:	
  2420                           
  2421                           ; 1 bytes @ 0x6
  2422  0076                     	ds	1
  2423  0077                     ??_INTERRUPT_InterruptManager:	
  2424                           
  2425                           ; 0 bytes @ 0x7
  2426  0077                     	ds	1
  2427                           
  2428                           	psect	cstackBANK0
  2429  0037                     __pcstackBANK0:	
  2430  0037                     ??_OSCILLATOR_Initialize:	
  2431  0037                     ??_ADC_Initialize:	
  2432                           ; 0 bytes @ 0x0
  2433                           
  2434  0037                     ??_I2C_Initialize:	
  2435                           ; 0 bytes @ 0x0
  2436                           
  2437  0037                     ??_init_irRange:	
  2438                           ; 0 bytes @ 0x0
  2439                           
  2440  0037                     ??_PIN_MANAGER_Initialize:	
  2441                           ; 0 bytes @ 0x0
  2442                           
  2443  0037                     ?_ADC_GetConversion:	
  2444                           ; 0 bytes @ 0x0
  2445                           
  2446  0037                     PIN_MANAGER_Initialize@state:	
  2447                           ; 2 bytes @ 0x0
  2448                           
  2449                           
  2450                           ; 1 bytes @ 0x0
  2451  0037                     	ds	1
  2452  0038                     ??_SYSTEM_Initialize:	
  2453  0038                     init_irRange@i:	
  2454                           ; 0 bytes @ 0x1
  2455                           
  2456                           
  2457                           ; 2 bytes @ 0x1
  2458  0038                     	ds	1
  2459  0039                     ??_ADC_GetConversion:	
  2460                           
  2461                           ; 0 bytes @ 0x2
  2462  0039                     	ds	1
  2463  003A                     ADC_GetConversion@channel:	
  2464                           
  2465                           ; 1 bytes @ 0x3
  2466  003A                     	ds	1
  2467  003B                     ??_readADCs:	
  2468                           
  2469                           ; 0 bytes @ 0x4
  2470  003B                     	ds	1
  2471  003C                     ??_main:	
  2472                           
  2473                           	psect	maintext
  2474  02FB                     __pmaintext:	
  2475                           ; 0 bytes @ 0x5
  2476 ;;
  2477 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2478 ;;
  2479 ;; *************** function _main *****************
  2480 ;; Defined at:
  2481 ;;		line 54 in file "main.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;		None
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;		None
  2486 ;; Return value:  Size  Location     Type
  2487 ;;		None               void
  2488 ;; Registers used:
  2489 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2490 ;; Tracked objects:
  2491 ;;		On entry : B1F/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2499 ;;Total ram usage:        0 bytes
  2500 ;; Hardware stack levels required when called:    6
  2501 ;; This function calls:
  2502 ;;		_SYSTEM_Initialize
  2503 ;;		_init_irRange
  2504 ;;		_readADCs
  2505 ;; This function is called by:
  2506 ;;		Startup code after reset
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           
  2511                           ;psect for function _main
  2512  02FB                     _main:	
  2513                           
  2514                           ;main.c: 56: SYSTEM_Initialize();
  2515                           
  2516                           ;incstack = 0
  2517                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2518  02FB  3183  2307  3182   	fcall	_SYSTEM_Initialize
  2519                           
  2520                           ;main.c: 62: (INTCONbits.GIE = 1);
  2521  02FE  178B               	bsf	11,7	;volatile
  2522                           
  2523                           ;main.c: 65: (INTCONbits.PEIE = 1);
  2524  02FF  170B               	bsf	11,6	;volatile
  2525                           
  2526                           ;main.c: 72: init_irRange();
  2527  0300  3182  227B  3182   	fcall	_init_irRange
  2528  0303                     l1160:	
  2529                           ;main.c: 73: while (1) {
  2530                           
  2531                           
  2532                           ;main.c: 75: readADCs();
  2533  0303  3180  204D  3182   	fcall	_readADCs
  2534  0306  2B03               	goto	l1160
  2535  0307                     __end_of_main:	
  2536                           
  2537                           	psect	text1
  2538  004D                     __ptext1:	
  2539 ;; *************** function _readADCs *****************
  2540 ;; Defined at:
  2541 ;;		line 23 in file "irRange.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;		None
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;		None
  2546 ;; Return value:  Size  Location     Type
  2547 ;;		None               void
  2548 ;; Registers used:
  2549 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2557 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2558 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2559 ;;Total ram usage:        1 bytes
  2560 ;; Hardware stack levels used:    1
  2561 ;; Hardware stack levels required when called:    5
  2562 ;; This function calls:
  2563 ;;		_ADC_GetConversion
  2564 ;; This function is called by:
  2565 ;;		_main
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           
  2570                           ;psect for function _readADCs
  2571  004D                     _readADCs:	
  2572                           
  2573                           ;irRange.c: 25: switch(adc_state){
  2574                           
  2575                           ;incstack = 0
  2576                           ; Regs used in _readADCs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2577  004D  2911               	goto	l1140
  2578  004E                     l1078:	
  2579                           ;irRange.c: 26: case channel_AN0:
  2580                           
  2581                           
  2582                           ;irRange.c: 27: *adc_readings_ptr = (uint16_t)ADC_GetConversion(channel_AN0);
  2583  004E  3000               	movlw	0
  2584  004F  3182  22A3         	fcall	_ADC_GetConversion
  2585  0051  0020               	movlb	0	; select bank0
  2586  0052  083C               	movf	_adc_readings_ptr,w
  2587  0053  0086               	movwf	6
  2588  0054  0187               	clrf	7
  2589  0055  0837               	movf	?_ADC_GetConversion,w
  2590  0056  3FC0               	movwi [0]fsr1
  2591  0057  0838               	movf	?_ADC_GetConversion+1,w
  2592  0058  3FC1               	movwi [1]fsr1
  2593                           
  2594                           ;irRange.c: 28: adc_readings_ptr++;
  2595  0059  3002               	movlw	2
  2596  005A  00BB               	movwf	??_readADCs
  2597  005B  083B               	movf	??_readADCs,w
  2598  005C  07BC               	addwf	_adc_readings_ptr,f
  2599                           
  2600                           ;irRange.c: 29: adc_state = channel_AN1;
  2601  005D  01A2               	clrf	_adc_state
  2602  005E  0AA2               	incf	_adc_state,f
  2603                           
  2604                           ;irRange.c: 31: break;
  2605  005F  0008               	return
  2606  0060                     l1084:	
  2607                           ;irRange.c: 32: case channel_AN1:
  2608                           
  2609                           
  2610                           ;irRange.c: 33: *adc_readings_ptr = (uint16_t)ADC_GetConversion(channel_AN1);
  2611  0060  3001               	movlw	1
  2612  0061  3182  22A3         	fcall	_ADC_GetConversion
  2613  0063  0020               	movlb	0	; select bank0
  2614  0064  083C               	movf	_adc_readings_ptr,w
  2615  0065  0086               	movwf	6
  2616  0066  0187               	clrf	7
  2617  0067  0837               	movf	?_ADC_GetConversion,w
  2618  0068  3FC0               	movwi [0]fsr1
  2619  0069  0838               	movf	?_ADC_GetConversion+1,w
  2620  006A  3FC1               	movwi [1]fsr1
  2621                           
  2622                           ;irRange.c: 34: adc_readings_ptr++;
  2623  006B  3002               	movlw	2
  2624  006C  00BB               	movwf	??_readADCs
  2625  006D  083B               	movf	??_readADCs,w
  2626  006E  07BC               	addwf	_adc_readings_ptr,f
  2627                           
  2628                           ;irRange.c: 35: adc_state = channel_AN2;
  2629  006F  3002               	movlw	2
  2630  0070  00BB               	movwf	??_readADCs
  2631  0071  083B               	movf	??_readADCs,w
  2632  0072  00A2               	movwf	_adc_state
  2633                           
  2634                           ;irRange.c: 37: break;
  2635  0073  0008               	return
  2636  0074                     l1090:	
  2637                           ;irRange.c: 38: case channel_AN2:
  2638                           
  2639                           
  2640                           ;irRange.c: 39: *adc_readings_ptr = (uint16_t)ADC_GetConversion(channel_AN2);
  2641  0074  3002               	movlw	2
  2642  0075  3182  22A3         	fcall	_ADC_GetConversion
  2643  0077  0020               	movlb	0	; select bank0
  2644  0078  083C               	movf	_adc_readings_ptr,w
  2645  0079  0086               	movwf	6
  2646  007A  0187               	clrf	7
  2647  007B  0837               	movf	?_ADC_GetConversion,w
  2648  007C  3FC0               	movwi [0]fsr1
  2649  007D  0838               	movf	?_ADC_GetConversion+1,w
  2650  007E  3FC1               	movwi [1]fsr1
  2651                           
  2652                           ;irRange.c: 40: adc_readings_ptr++;
  2653  007F  3002               	movlw	2
  2654  0080  00BB               	movwf	??_readADCs
  2655  0081  083B               	movf	??_readADCs,w
  2656  0082  07BC               	addwf	_adc_readings_ptr,f
  2657                           
  2658                           ;irRange.c: 41: adc_state = channel_AN3;
  2659  0083  3003               	movlw	3
  2660  0084  00BB               	movwf	??_readADCs
  2661  0085  083B               	movf	??_readADCs,w
  2662  0086  00A2               	movwf	_adc_state
  2663                           
  2664                           ;irRange.c: 43: break;
  2665  0087  0008               	return
  2666  0088                     l1096:	
  2667                           ;irRange.c: 44: case channel_AN3:
  2668                           
  2669                           
  2670                           ;irRange.c: 45: *adc_readings_ptr = (uint16_t)ADC_GetConversion(channel_AN3);
  2671  0088  3003               	movlw	3
  2672  0089  3182  22A3         	fcall	_ADC_GetConversion
  2673  008B  0020               	movlb	0	; select bank0
  2674  008C  083C               	movf	_adc_readings_ptr,w
  2675  008D  0086               	movwf	6
  2676  008E  0187               	clrf	7
  2677  008F  0837               	movf	?_ADC_GetConversion,w
  2678  0090  3FC0               	movwi [0]fsr1
  2679  0091  0838               	movf	?_ADC_GetConversion+1,w
  2680  0092  3FC1               	movwi [1]fsr1
  2681                           
  2682                           ;irRange.c: 46: adc_readings_ptr++;
  2683  0093  3002               	movlw	2
  2684  0094  00BB               	movwf	??_readADCs
  2685  0095  083B               	movf	??_readADCs,w
  2686  0096  07BC               	addwf	_adc_readings_ptr,f
  2687                           
  2688                           ;irRange.c: 47: adc_state = channel_AN4;
  2689  0097  3004               	movlw	4
  2690  0098  00BB               	movwf	??_readADCs
  2691  0099  083B               	movf	??_readADCs,w
  2692  009A  00A2               	movwf	_adc_state
  2693                           
  2694                           ;irRange.c: 48: break;
  2695  009B  0008               	return
  2696  009C                     l1102:	
  2697                           ;irRange.c: 49: case channel_AN4:
  2698                           
  2699                           
  2700                           ;irRange.c: 50: *adc_readings_ptr = (uint16_t)ADC_GetConversion(channel_AN4);
  2701  009C  3004               	movlw	4
  2702  009D  3182  22A3         	fcall	_ADC_GetConversion
  2703  009F  0020               	movlb	0	; select bank0
  2704  00A0  083C               	movf	_adc_readings_ptr,w
  2705  00A1  0086               	movwf	6
  2706  00A2  0187               	clrf	7
  2707  00A3  0837               	movf	?_ADC_GetConversion,w
  2708  00A4  3FC0               	movwi [0]fsr1
  2709  00A5  0838               	movf	?_ADC_GetConversion+1,w
  2710  00A6  3FC1               	movwi [1]fsr1
  2711                           
  2712                           ;irRange.c: 51: adc_readings_ptr++;
  2713  00A7  3002               	movlw	2
  2714  00A8  00BB               	movwf	??_readADCs
  2715  00A9  083B               	movf	??_readADCs,w
  2716  00AA  07BC               	addwf	_adc_readings_ptr,f
  2717                           
  2718                           ;irRange.c: 52: adc_state = channel_AN14;
  2719  00AB  300E               	movlw	14
  2720  00AC  00BB               	movwf	??_readADCs
  2721  00AD  083B               	movf	??_readADCs,w
  2722  00AE  00A2               	movwf	_adc_state
  2723                           
  2724                           ;irRange.c: 53: break;
  2725  00AF  0008               	return
  2726  00B0                     l1108:	
  2727                           ;irRange.c: 54: case channel_AN14:
  2728                           
  2729                           
  2730                           ;irRange.c: 55: *adc_readings_ptr = (uint16_t)ADC_GetConversion(channel_AN14);
  2731  00B0  300E               	movlw	14
  2732  00B1  3182  22A3         	fcall	_ADC_GetConversion
  2733  00B3  0020               	movlb	0	; select bank0
  2734  00B4  083C               	movf	_adc_readings_ptr,w
  2735  00B5  0086               	movwf	6
  2736  00B6  0187               	clrf	7
  2737  00B7  0837               	movf	?_ADC_GetConversion,w
  2738  00B8  3FC0               	movwi [0]fsr1
  2739  00B9  0838               	movf	?_ADC_GetConversion+1,w
  2740  00BA  3FC1               	movwi [1]fsr1
  2741                           
  2742                           ;irRange.c: 56: adc_readings_ptr++;
  2743  00BB  3002               	movlw	2
  2744  00BC  00BB               	movwf	??_readADCs
  2745  00BD  083B               	movf	??_readADCs,w
  2746  00BE  07BC               	addwf	_adc_readings_ptr,f
  2747                           
  2748                           ;irRange.c: 57: adc_state = channel_AN15;
  2749  00BF  300F               	movlw	15
  2750  00C0  00BB               	movwf	??_readADCs
  2751  00C1  083B               	movf	??_readADCs,w
  2752  00C2  00A2               	movwf	_adc_state
  2753                           
  2754                           ;irRange.c: 58: break;
  2755  00C3  0008               	return
  2756  00C4                     l1114:	
  2757                           ;irRange.c: 59: case channel_AN15:
  2758                           
  2759                           
  2760                           ;irRange.c: 60: *adc_readings_ptr = (uint16_t)ADC_GetConversion(channel_AN15);
  2761  00C4  300F               	movlw	15
  2762  00C5  3182  22A3         	fcall	_ADC_GetConversion
  2763  00C7  0020               	movlb	0	; select bank0
  2764  00C8  083C               	movf	_adc_readings_ptr,w
  2765  00C9  0086               	movwf	6
  2766  00CA  0187               	clrf	7
  2767  00CB  0837               	movf	?_ADC_GetConversion,w
  2768  00CC  3FC0               	movwi [0]fsr1
  2769  00CD  0838               	movf	?_ADC_GetConversion+1,w
  2770  00CE  3FC1               	movwi [1]fsr1
  2771                           
  2772                           ;irRange.c: 61: adc_readings_ptr++;
  2773  00CF  3002               	movlw	2
  2774  00D0  00BB               	movwf	??_readADCs
  2775  00D1  083B               	movf	??_readADCs,w
  2776  00D2  07BC               	addwf	_adc_readings_ptr,f
  2777                           
  2778                           ;irRange.c: 62: adc_state = channel_AN16;
  2779  00D3  3010               	movlw	16
  2780  00D4  00BB               	movwf	??_readADCs
  2781  00D5  083B               	movf	??_readADCs,w
  2782  00D6  00A2               	movwf	_adc_state
  2783                           
  2784                           ;irRange.c: 63: break;
  2785  00D7  0008               	return
  2786  00D8                     l1120:	
  2787                           ;irRange.c: 64: case channel_AN16:
  2788                           
  2789                           
  2790                           ;irRange.c: 65: *adc_readings_ptr = (uint16_t)ADC_GetConversion(channel_AN16);
  2791  00D8  3010               	movlw	16
  2792  00D9  3182  22A3         	fcall	_ADC_GetConversion
  2793  00DB  0020               	movlb	0	; select bank0
  2794  00DC  083C               	movf	_adc_readings_ptr,w
  2795  00DD  0086               	movwf	6
  2796  00DE  0187               	clrf	7
  2797  00DF  0837               	movf	?_ADC_GetConversion,w
  2798  00E0  3FC0               	movwi [0]fsr1
  2799  00E1  0838               	movf	?_ADC_GetConversion+1,w
  2800  00E2  3FC1               	movwi [1]fsr1
  2801                           
  2802                           ;irRange.c: 66: adc_readings_ptr++;
  2803  00E3  3002               	movlw	2
  2804  00E4  00BB               	movwf	??_readADCs
  2805  00E5  083B               	movf	??_readADCs,w
  2806  00E6  07BC               	addwf	_adc_readings_ptr,f
  2807                           
  2808                           ;irRange.c: 67: adc_state = channel_AN17;
  2809  00E7  3011               	movlw	17
  2810  00E8  00BB               	movwf	??_readADCs
  2811  00E9  083B               	movf	??_readADCs,w
  2812  00EA  00A2               	movwf	_adc_state
  2813                           
  2814                           ;irRange.c: 68: break;
  2815  00EB  0008               	return
  2816  00EC                     l1126:	
  2817                           ;irRange.c: 69: case channel_AN17:
  2818                           
  2819                           
  2820                           ;irRange.c: 70: *adc_readings_ptr = (uint16_t)ADC_GetConversion(channel_AN17);
  2821  00EC  3011               	movlw	17
  2822  00ED  3182  22A3         	fcall	_ADC_GetConversion
  2823  00EF  0020               	movlb	0	; select bank0
  2824  00F0  083C               	movf	_adc_readings_ptr,w
  2825  00F1  0086               	movwf	6
  2826  00F2  0187               	clrf	7
  2827  00F3  0837               	movf	?_ADC_GetConversion,w
  2828  00F4  3FC0               	movwi [0]fsr1
  2829  00F5  0838               	movf	?_ADC_GetConversion+1,w
  2830  00F6  3FC1               	movwi [1]fsr1
  2831                           
  2832                           ;irRange.c: 71: adc_readings_ptr++;
  2833  00F7  3002               	movlw	2
  2834  00F8  00BB               	movwf	??_readADCs
  2835  00F9  083B               	movf	??_readADCs,w
  2836  00FA  07BC               	addwf	_adc_readings_ptr,f
  2837                           
  2838                           ;irRange.c: 72: adc_state = channel_AN18;
  2839  00FB  3012               	movlw	18
  2840  00FC  00BB               	movwf	??_readADCs
  2841  00FD  083B               	movf	??_readADCs,w
  2842  00FE  00A2               	movwf	_adc_state
  2843                           
  2844                           ;irRange.c: 73: break;
  2845  00FF  0008               	return
  2846  0100                     l1132:	
  2847                           ;irRange.c: 74: case channel_AN18:
  2848                           
  2849                           
  2850                           ;irRange.c: 75: *adc_readings_ptr = (uint16_t)ADC_GetConversion(channel_AN18);
  2851  0100  3012               	movlw	18
  2852  0101  3182  22A3         	fcall	_ADC_GetConversion
  2853  0103  0020               	movlb	0	; select bank0
  2854  0104  083C               	movf	_adc_readings_ptr,w
  2855  0105  0086               	movwf	6
  2856  0106  0187               	clrf	7
  2857  0107  0837               	movf	?_ADC_GetConversion,w
  2858  0108  3FC0               	movwi [0]fsr1
  2859  0109  0838               	movf	?_ADC_GetConversion+1,w
  2860  010A  3FC1               	movwi [1]fsr1
  2861                           
  2862                           ;irRange.c: 76: adc_readings_ptr = adc_readings;
  2863  010B  3023               	movlw	(low (_adc_readings| 0))& (0+255)
  2864  010C  00BB               	movwf	??_readADCs
  2865  010D  083B               	movf	??_readADCs,w
  2866  010E  00BC               	movwf	_adc_readings_ptr
  2867                           
  2868                           ;irRange.c: 77: adc_state = channel_AN0;
  2869  010F  01A2               	clrf	_adc_state
  2870                           
  2871                           ;irRange.c: 80: }
  2872                           
  2873                           ;irRange.c: 78: break;
  2874  0110  0008               	return
  2875  0111                     l1140:	
  2876  0111  0020               	movlb	0	; select bank0
  2877  0112  0822               	movf	_adc_state,w
  2878                           
  2879                           ; Switch size 1, requested type "space"
  2880                           ; Number of cases is 10, Range of values is 0 to 18
  2881                           ; switch strategies available:
  2882                           ; Name         Instructions Cycles
  2883                           ; simple_byte           31    16 (average)
  2884                           ; direct_byte           44     6 (fixed)
  2885                           ; jumptable            260     6 (fixed)
  2886                           ;	Chosen strategy is simple_byte
  2887  0113  3A00               	xorlw	0	; case 0
  2888  0114  1903               	skipnz
  2889  0115  284E               	goto	l1078
  2890  0116  3A01               	xorlw	1	; case 1
  2891  0117  1903               	skipnz
  2892  0118  2860               	goto	l1084
  2893  0119  3A03               	xorlw	3	; case 2
  2894  011A  1903               	skipnz
  2895  011B  2874               	goto	l1090
  2896  011C  3A01               	xorlw	1	; case 3
  2897  011D  1903               	skipnz
  2898  011E  2888               	goto	l1096
  2899  011F  3A07               	xorlw	7	; case 4
  2900  0120  1903               	skipnz
  2901  0121  289C               	goto	l1102
  2902  0122  3A0A               	xorlw	10	; case 14
  2903  0123  1903               	skipnz
  2904  0124  28B0               	goto	l1108
  2905  0125  3A01               	xorlw	1	; case 15
  2906  0126  1903               	skipnz
  2907  0127  28C4               	goto	l1114
  2908  0128  3A1F               	xorlw	31	; case 16
  2909  0129  1903               	skipnz
  2910  012A  28D8               	goto	l1120
  2911  012B  3A01               	xorlw	1	; case 17
  2912  012C  1903               	skipnz
  2913  012D  28EC               	goto	l1126
  2914  012E  3A03               	xorlw	3	; case 18
  2915  012F  1903               	skipnz
  2916  0130  2900               	goto	l1132
  2917  0131  2932               	goto	l235
  2918  0132                     l235:	
  2919  0132  0008               	return
  2920  0133                     __end_of_readADCs:	
  2921                           
  2922                           	psect	text2
  2923  02A3                     __ptext2:	
  2924 ;; *************** function _ADC_GetConversion *****************
  2925 ;; Defined at:
  2926 ;;		line 111 in file "mcc_generated_files/adc.c"
  2927 ;; Parameters:    Size  Location     Type
  2928 ;;  channel         1    wreg     enum E6209
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;  channel         1    3[BANK0 ] enum E6209
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  2    0[BANK0 ] unsigned int 
  2933 ;; Registers used:
  2934 ;;		wreg, status,2, status,0
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2940 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2941 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2942 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2943 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2944 ;;Total ram usage:        4 bytes
  2945 ;; Hardware stack levels used:    1
  2946 ;; Hardware stack levels required when called:    4
  2947 ;; This function calls:
  2948 ;;		Nothing
  2949 ;; This function is called by:
  2950 ;;		_readADCs
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954                           
  2955                           ;psect for function _ADC_GetConversion
  2956  02A3                     _ADC_GetConversion:	
  2957                           
  2958                           ;incstack = 0
  2959                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  2960                           ;ADC_GetConversion@channel stored from wreg
  2961  02A3  0020               	movlb	0	; select bank0
  2962  02A4  00BA               	movwf	ADC_GetConversion@channel
  2963                           
  2964                           ;adc.c: 113: ADCON0bits.CHS = channel;
  2965  02A5  083A               	movf	ADC_GetConversion@channel,w
  2966  02A6  00B9               	movwf	??_ADC_GetConversion
  2967  02A7  0DB9               	rlf	??_ADC_GetConversion,f
  2968  02A8  0DB9               	rlf	??_ADC_GetConversion,f
  2969  02A9  0021               	movlb	1	; select bank1
  2970  02AA  081D               	movf	29,w	;volatile
  2971  02AB  0020               	movlb	0	; select bank0
  2972  02AC  0639               	xorwf	??_ADC_GetConversion,w
  2973  02AD  3983               	andlw	-125
  2974  02AE  0639               	xorwf	??_ADC_GetConversion,w
  2975  02AF  0021               	movlb	1	; select bank1
  2976  02B0  009D               	movwf	29	;volatile
  2977                           
  2978                           ;adc.c: 116: ADCON0bits.ADON = 1;
  2979  02B1  141D               	bsf	29,0	;volatile
  2980                           
  2981                           ;adc.c: 119: _delay((unsigned long)((5)*(2000000/4000000.0)));
  2982  02B2  3200               	nop2	;2 cycle nop
  2983                           
  2984                           ;adc.c: 122: ADCON0bits.GO_nDONE = 1;
  2985  02B3  0021               	movlb	1	; select bank1
  2986  02B4  149D               	bsf	29,1	;volatile
  2987  02B5                     l168:	
  2988                           ;adc.c: 125: while (ADCON0bits.GO_nDONE) {
  2989                           
  2990  02B5  189D               	btfsc	29,1	;volatile
  2991  02B6  2AB5               	goto	l168
  2992                           
  2993                           ;adc.c: 126: }
  2994                           ;adc.c: 129: return ((ADRESH << 8) + ADRESL);
  2995  02B7  081C               	movf	28,w	;volatile
  2996  02B8  0020               	movlb	0	; select bank0
  2997  02B9  00B8               	movwf	?_ADC_GetConversion+1
  2998  02BA  0021               	movlb	1	; select bank1
  2999  02BB  081B               	movf	27,w	;volatile
  3000  02BC  0020               	movlb	0	; select bank0
  3001  02BD  00B7               	movwf	?_ADC_GetConversion
  3002  02BE  0008               	return
  3003  02BF                     __end_of_ADC_GetConversion:	
  3004                           
  3005                           	psect	text3
  3006  027B                     __ptext3:	
  3007 ;; *************** function _init_irRange *****************
  3008 ;; Defined at:
  3009 ;;		line 12 in file "irRange.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;		None
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;  i               2    1[BANK0 ] int 
  3014 ;; Return value:  Size  Location     Type
  3015 ;;		None               void
  3016 ;; Registers used:
  3017 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3024 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3025 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3026 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3027 ;;Total ram usage:        3 bytes
  3028 ;; Hardware stack levels used:    1
  3029 ;; Hardware stack levels required when called:    4
  3030 ;; This function calls:
  3031 ;;		Nothing
  3032 ;; This function is called by:
  3033 ;;		_main
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           
  3038                           ;psect for function _init_irRange
  3039  027B                     _init_irRange:	
  3040                           
  3041                           ;irRange.c: 13: int i;
  3042                           ;irRange.c: 15: for(i = 0; i < 10; i++){
  3043                           
  3044                           ;incstack = 0
  3045                           ; Regs used in _init_irRange: [wreg+fsr1l+fsr1h+status,2+status,0]
  3046  027B  0020               	movlb	0	; select bank0
  3047  027C  01B8               	clrf	init_irRange@i
  3048  027D  01B9               	clrf	init_irRange@i+1
  3049  027E  0839               	movf	init_irRange@i+1,w
  3050  027F  3A80               	xorlw	128
  3051  0280  00B7               	movwf	??_init_irRange
  3052  0281  3080               	movlw	128
  3053  0282  0237               	subwf	??_init_irRange,w
  3054  0283  1D03               	skipz
  3055  0284  2A87               	goto	u275
  3056  0285  300A               	movlw	10
  3057  0286  0238               	subwf	init_irRange@i,w
  3058  0287                     u275:	
  3059  0287  1803               	btfsc	3,0
  3060  0288  2AA0               	goto	l1074
  3061  0289                     l1068:	
  3062                           
  3063                           ;irRange.c: 16: *(adc_readings + i) = 0;
  3064  0289  0020               	movlb	0	; select bank0
  3065  028A  3538               	lslf	init_irRange@i,w
  3066  028B  3E23               	addlw	(low (_adc_readings| 0))& (0+255)
  3067  028C  0086               	movwf	6
  3068  028D  0187               	clrf	7
  3069  028E  3000               	movlw	0
  3070  028F  3FC0               	movwi [0]fsr1
  3071  0290  3FC1               	movwi [1]fsr1
  3072  0291  3001               	movlw	1
  3073  0292  07B8               	addwf	init_irRange@i,f
  3074  0293  3000               	movlw	0
  3075  0294  3DB9               	addwfc	init_irRange@i+1,f
  3076  0295  0839               	movf	init_irRange@i+1,w
  3077  0296  3A80               	xorlw	128
  3078  0297  00B7               	movwf	??_init_irRange
  3079  0298  3080               	movlw	128
  3080  0299  0237               	subwf	??_init_irRange,w
  3081  029A  1D03               	skipz
  3082  029B  2A9E               	goto	u285
  3083  029C  300A               	movlw	10
  3084  029D  0238               	subwf	init_irRange@i,w
  3085  029E                     u285:	
  3086  029E  1C03               	skipc
  3087  029F  2A89               	goto	l1068
  3088  02A0                     l1074:	
  3089                           
  3090                           ;irRange.c: 17: }
  3091                           ;irRange.c: 18: adc_state = channel_AN0;
  3092  02A0  0020               	movlb	0	; select bank0
  3093  02A1  01A2               	clrf	_adc_state
  3094  02A2  0008               	return
  3095  02A3                     __end_of_init_irRange:	
  3096                           
  3097                           	psect	text4
  3098  0307                     __ptext4:	
  3099 ;; *************** function _SYSTEM_Initialize *****************
  3100 ;; Defined at:
  3101 ;;		line 72 in file "mcc_generated_files/mcc.c"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;		None
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;		None
  3106 ;; Return value:  Size  Location     Type
  3107 ;;		None               void
  3108 ;; Registers used:
  3109 ;;		wreg, status,2, status,0, pclath, cstack
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3119 ;;Total ram usage:        0 bytes
  3120 ;; Hardware stack levels used:    1
  3121 ;; Hardware stack levels required when called:    5
  3122 ;; This function calls:
  3123 ;;		_ADC_Initialize
  3124 ;;		_I2C_Initialize
  3125 ;;		_OSCILLATOR_Initialize
  3126 ;;		_PIN_MANAGER_Initialize
  3127 ;; This function is called by:
  3128 ;;		_main
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132                           
  3133                           ;psect for function _SYSTEM_Initialize
  3134  0307                     _SYSTEM_Initialize:	
  3135                           
  3136                           ;mcc.c: 73: OSCILLATOR_Initialize();
  3137                           
  3138                           ;incstack = 0
  3139                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3140  0307  3183  231D  3183   	fcall	_OSCILLATOR_Initialize
  3141                           
  3142                           ;mcc.c: 74: PIN_MANAGER_Initialize();
  3143  030A  3181  21B3  3183   	fcall	_PIN_MANAGER_Initialize
  3144                           
  3145                           ;mcc.c: 75: ADC_Initialize();
  3146  030D  3183  2313  3183   	fcall	_ADC_Initialize
  3147                           
  3148                           ;mcc.c: 76: I2C_Initialize();
  3149  0310  3182  22D4         	fcall	_I2C_Initialize
  3150  0312  0008               	return
  3151  0313                     __end_of_SYSTEM_Initialize:	
  3152                           
  3153                           	psect	text5
  3154  01B3                     __ptext5:	
  3155 ;; *************** function _PIN_MANAGER_Initialize *****************
  3156 ;; Defined at:
  3157 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;		None
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;  state           1    0[BANK0 ] unsigned char 
  3162 ;; Return value:  Size  Location     Type
  3163 ;;		None               void
  3164 ;; Registers used:
  3165 ;;		wreg, status,2, status,0
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3172 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3174 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3175 ;;Total ram usage:        1 bytes
  3176 ;; Hardware stack levels used:    1
  3177 ;; Hardware stack levels required when called:    4
  3178 ;; This function calls:
  3179 ;;		Nothing
  3180 ;; This function is called by:
  3181 ;;		_SYSTEM_Initialize
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           
  3186                           ;psect for function _PIN_MANAGER_Initialize
  3187  01B3                     _PIN_MANAGER_Initialize:	
  3188                           
  3189                           ;pin_manager.c: 52: LATA = 0x00;
  3190                           
  3191                           ;incstack = 0
  3192                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  3193  01B3  0022               	movlb	2	; select bank2
  3194  01B4  018C               	clrf	12	;volatile
  3195                           
  3196                           ;pin_manager.c: 53: TRISA = 0xFF;
  3197  01B5  30FF               	movlw	255
  3198  01B6  0021               	movlb	1	; select bank1
  3199  01B7  008C               	movwf	12	;volatile
  3200                           
  3201                           ;pin_manager.c: 54: ANSELA = 0x3F;
  3202  01B8  303F               	movlw	63
  3203  01B9  0023               	movlb	3	; select bank3
  3204  01BA  008C               	movwf	12	;volatile
  3205                           
  3206                           ;pin_manager.c: 55: WPUA = 0x00;
  3207  01BB  0024               	movlb	4	; select bank4
  3208  01BC  018C               	clrf	12	;volatile
  3209                           
  3210                           ;pin_manager.c: 57: LATB = 0x00;
  3211  01BD  0022               	movlb	2	; select bank2
  3212  01BE  018D               	clrf	13	;volatile
  3213                           
  3214                           ;pin_manager.c: 58: TRISB = 0xFF;
  3215  01BF  30FF               	movlw	255
  3216  01C0  0021               	movlb	1	; select bank1
  3217  01C1  008D               	movwf	13	;volatile
  3218                           
  3219                           ;pin_manager.c: 59: ANSELB = 0x3F;
  3220  01C2  303F               	movlw	63
  3221  01C3  0023               	movlb	3	; select bank3
  3222  01C4  008D               	movwf	13	;volatile
  3223                           
  3224                           ;pin_manager.c: 60: WPUB = 0x00;
  3225  01C5  0024               	movlb	4	; select bank4
  3226  01C6  018D               	clrf	13	;volatile
  3227                           
  3228                           ;pin_manager.c: 62: LATC = 0x03;
  3229  01C7  3003               	movlw	3
  3230  01C8  0022               	movlb	2	; select bank2
  3231  01C9  008E               	movwf	14	;volatile
  3232                           
  3233                           ;pin_manager.c: 63: TRISC = 0xFF;
  3234  01CA  30FF               	movlw	255
  3235  01CB  0021               	movlb	1	; select bank1
  3236  01CC  008E               	movwf	14	;volatile
  3237                           
  3238                           ;pin_manager.c: 64: ANSELC = 0xFC;
  3239  01CD  30FC               	movlw	252
  3240  01CE  0023               	movlb	3	; select bank3
  3241  01CF  008E               	movwf	14	;volatile
  3242                           
  3243                           ;pin_manager.c: 65: WPUC = 0x00;
  3244  01D0  0024               	movlb	4	; select bank4
  3245  01D1  018E               	clrf	14	;volatile
  3246                           
  3247                           ;pin_manager.c: 67: TRISE = 0x08;
  3248  01D2  3008               	movlw	8
  3249  01D3  0021               	movlb	1	; select bank1
  3250  01D4  0090               	movwf	16	;volatile
  3251                           
  3252                           ;pin_manager.c: 68: WPUE = 0x00;
  3253  01D5  0024               	movlb	4	; select bank4
  3254  01D6  0190               	clrf	16	;volatile
  3255                           
  3256                           ;pin_manager.c: 70: OPTION_REGbits.nWPUEN = 0x01;
  3257  01D7  0021               	movlb	1	; select bank1
  3258  01D8  1795               	bsf	21,7	;volatile
  3259                           
  3260                           ;pin_manager.c: 73: bool state = GIE;
  3261  01D9  3000               	movlw	0
  3262  01DA  1B8B               	btfsc	11,7	;volatile
  3263  01DB  3001               	movlw	1
  3264  01DC  0020               	movlb	0	; select bank0
  3265  01DD  00B7               	movwf	PIN_MANAGER_Initialize@state
  3266                           
  3267                           ;pin_manager.c: 74: GIE = 0;
  3268  01DE  138B               	bcf	11,7	;volatile
  3269                           
  3270                           ;pin_manager.c: 75: PPSLOCK = 0x55;
  3271  01DF  3055               	movlw	85
  3272  01E0  003C               	movlb	28	; select bank28
  3273  01E1  008F               	movwf	15	;volatile
  3274                           
  3275                           ;pin_manager.c: 76: PPSLOCK = 0xAA;
  3276  01E2  30AA               	movlw	170
  3277  01E3  008F               	movwf	15	;volatile
  3278                           
  3279                           ;pin_manager.c: 77: PPSLOCKbits.PPSLOCKED = 0x00;
  3280  01E4  100F               	bcf	15,0	;volatile
  3281                           
  3282                           ;pin_manager.c: 79: SSPCLKPPSbits.SSPCLKPPS = 0x10;
  3283  01E5  0820               	movf	32,w	;volatile
  3284  01E6  39E0               	andlw	-32
  3285  01E7  3810               	iorlw	16
  3286  01E8  00A0               	movwf	32	;volatile
  3287                           
  3288                           ;pin_manager.c: 80: RC0PPSbits.RC0PPS = 0x10;
  3289  01E9  003D               	movlb	29	; select bank29
  3290  01EA  0820               	movf	32,w	;volatile
  3291  01EB  39E0               	andlw	-32
  3292  01EC  3810               	iorlw	16
  3293  01ED  00A0               	movwf	32	;volatile
  3294                           
  3295                           ;pin_manager.c: 81: SSPDATPPSbits.SSPDATPPS = 0x11;
  3296  01EE  003C               	movlb	28	; select bank28
  3297  01EF  0821               	movf	33,w	;volatile
  3298  01F0  39E0               	andlw	-32
  3299  01F1  3811               	iorlw	17
  3300  01F2  00A1               	movwf	33	;volatile
  3301                           
  3302                           ;pin_manager.c: 82: RC1PPSbits.RC1PPS = 0x11;
  3303  01F3  003D               	movlb	29	; select bank29
  3304  01F4  0821               	movf	33,w	;volatile
  3305  01F5  39E0               	andlw	-32
  3306  01F6  3811               	iorlw	17
  3307  01F7  00A1               	movwf	33	;volatile
  3308                           
  3309                           ;pin_manager.c: 83: PPSLOCK = 0x55;
  3310  01F8  3055               	movlw	85
  3311  01F9  003C               	movlb	28	; select bank28
  3312  01FA  008F               	movwf	15	;volatile
  3313                           
  3314                           ;pin_manager.c: 84: PPSLOCK = 0xAA;
  3315  01FB  30AA               	movlw	170
  3316  01FC  008F               	movwf	15	;volatile
  3317                           
  3318                           ;pin_manager.c: 85: PPSLOCKbits.PPSLOCKED = 0x01;
  3319  01FD  140F               	bsf	15,0	;volatile
  3320                           
  3321                           ;pin_manager.c: 86: GIE = state;
  3322  01FE  0020               	movlb	0	; select bank0
  3323  01FF  1C37               	btfss	PIN_MANAGER_Initialize@state,0
  3324  0200  2A03               	goto	u180
  3325  0201  178B               	bsf	11,7	;volatile
  3326  0202  0008               	return
  3327  0203                     u180:	
  3328  0203  138B               	bcf	11,7	;volatile
  3329  0204  0008               	return
  3330  0205                     __end_of_PIN_MANAGER_Initialize:	
  3331                           
  3332                           	psect	text6
  3333  031D                     __ptext6:	
  3334 ;; *************** function _OSCILLATOR_Initialize *****************
  3335 ;; Defined at:
  3336 ;;		line 79 in file "mcc_generated_files/mcc.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;		None
  3339 ;; Auto vars:     Size  Location     Type
  3340 ;;		None
  3341 ;; Return value:  Size  Location     Type
  3342 ;;		None               void
  3343 ;; Registers used:
  3344 ;;		wreg, status,2
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3354 ;;Total ram usage:        0 bytes
  3355 ;; Hardware stack levels used:    1
  3356 ;; Hardware stack levels required when called:    4
  3357 ;; This function calls:
  3358 ;;		Nothing
  3359 ;; This function is called by:
  3360 ;;		_SYSTEM_Initialize
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364                           
  3365                           ;psect for function _OSCILLATOR_Initialize
  3366  031D                     _OSCILLATOR_Initialize:	
  3367                           
  3368                           ;mcc.c: 81: OSCCON = 0x60;
  3369                           
  3370                           ;incstack = 0
  3371                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3372  031D  3060               	movlw	96
  3373  031E  0021               	movlb	1	; select bank1
  3374  031F  0099               	movwf	25	;volatile
  3375                           
  3376                           ;mcc.c: 83: OSCSTAT = 0x00;
  3377  0320  019A               	clrf	26	;volatile
  3378                           
  3379                           ;mcc.c: 85: OSCTUNE = 0x00;
  3380  0321  0198               	clrf	24	;volatile
  3381  0322  0008               	return
  3382  0323                     __end_of_OSCILLATOR_Initialize:	
  3383                           
  3384                           	psect	text7
  3385  02D4                     __ptext7:	
  3386 ;; *************** function _I2C_Initialize *****************
  3387 ;; Defined at:
  3388 ;;		line 82 in file "mcc_generated_files/i2c.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;		None
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;		None
  3393 ;; Return value:  Size  Location     Type
  3394 ;;		None               void
  3395 ;; Registers used:
  3396 ;;		wreg, status,2
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3406 ;;Total ram usage:        0 bytes
  3407 ;; Hardware stack levels used:    1
  3408 ;; Hardware stack levels required when called:    4
  3409 ;; This function calls:
  3410 ;;		Nothing
  3411 ;; This function is called by:
  3412 ;;		_SYSTEM_Initialize
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           
  3417                           ;psect for function _I2C_Initialize
  3418  02D4                     _I2C_Initialize:	
  3419                           
  3420                           ;i2c.c: 85: SSP1STAT = 0x00;
  3421                           
  3422                           ;incstack = 0
  3423                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  3424  02D4  0024               	movlb	4	; select bank4
  3425  02D5  0194               	clrf	20	;volatile
  3426                           
  3427                           ;i2c.c: 87: SSP1CON1 = 0x26;
  3428  02D6  3026               	movlw	38
  3429  02D7  0095               	movwf	21	;volatile
  3430                           
  3431                           ;i2c.c: 89: SSP1CON2 = 0x00;
  3432  02D8  0196               	clrf	22	;volatile
  3433                           
  3434                           ;i2c.c: 91: SSP1CON3 = 0x00;
  3435  02D9  0197               	clrf	23	;volatile
  3436                           
  3437                           ;i2c.c: 93: SSP1MSK = (127 << 1);
  3438  02DA  30FE               	movlw	254
  3439  02DB  0093               	movwf	19	;volatile
  3440                           
  3441                           ;i2c.c: 95: SSP1ADD = (8 << 1);
  3442  02DC  3010               	movlw	16
  3443  02DD  0092               	movwf	18	;volatile
  3444                           
  3445                           ;i2c.c: 98: PIR1bits.SSP1IF = 0;
  3446  02DE  0020               	movlb	0	; select bank0
  3447  02DF  1191               	bcf	17,3	;volatile
  3448                           
  3449                           ;i2c.c: 100: PIE1bits.SSP1IE = 1;
  3450  02E0  0021               	movlb	1	; select bank1
  3451  02E1  1591               	bsf	17,3	;volatile
  3452  02E2  0008               	return
  3453  02E3                     __end_of_I2C_Initialize:	
  3454                           
  3455                           	psect	text8
  3456  0313                     __ptext8:	
  3457 ;; *************** function _ADC_Initialize *****************
  3458 ;; Defined at:
  3459 ;;		line 65 in file "mcc_generated_files/adc.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;		None
  3462 ;; Auto vars:     Size  Location     Type
  3463 ;;		None
  3464 ;; Return value:  Size  Location     Type
  3465 ;;		None               void
  3466 ;; Registers used:
  3467 ;;		wreg, status,2
  3468 ;; Tracked objects:
  3469 ;;		On entry : 0/0
  3470 ;;		On exit  : 0/0
  3471 ;;		Unchanged: 0/0
  3472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3477 ;;Total ram usage:        0 bytes
  3478 ;; Hardware stack levels used:    1
  3479 ;; Hardware stack levels required when called:    4
  3480 ;; This function calls:
  3481 ;;		Nothing
  3482 ;; This function is called by:
  3483 ;;		_SYSTEM_Initialize
  3484 ;; This function uses a non-reentrant model
  3485 ;;
  3486                           
  3487                           
  3488                           ;psect for function _ADC_Initialize
  3489  0313                     _ADC_Initialize:	
  3490                           
  3491                           ;adc.c: 69: ADCON0 = 0x01;
  3492                           
  3493                           ;incstack = 0
  3494                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3495  0313  3001               	movlw	1
  3496  0314  0021               	movlb	1	; select bank1
  3497  0315  009D               	movwf	29	;volatile
  3498                           
  3499                           ;adc.c: 72: ADCON1 = 0x80;
  3500  0316  3080               	movlw	128
  3501  0317  009E               	movwf	30	;volatile
  3502                           
  3503                           ;adc.c: 75: ADCON2 = 0x00;
  3504  0318  019F               	clrf	31	;volatile
  3505                           
  3506                           ;adc.c: 78: ADRESL = 0x00;
  3507  0319  019B               	clrf	27	;volatile
  3508                           
  3509                           ;adc.c: 81: ADRESH = 0x00;
  3510  031A  019C               	clrf	28	;volatile
  3511                           
  3512                           ;adc.c: 84: PIE1bits.ADIE = 1;
  3513  031B  1711               	bsf	17,6	;volatile
  3514  031C  0008               	return
  3515  031D                     __end_of_ADC_Initialize:	
  3516                           
  3517                           	psect	intentry
  3518  0004                     __pintentry:	
  3519 ;; *************** function _INTERRUPT_InterruptManager *****************
  3520 ;; Defined at:
  3521 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;		None
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;		None
  3526 ;; Return value:  Size  Location     Type
  3527 ;;		None               void
  3528 ;; Registers used:
  3529 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3530 ;; Tracked objects:
  3531 ;;		On entry : 0/0
  3532 ;;		On exit  : 0/0
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3537 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3538 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3539 ;;Total ram usage:        1 bytes
  3540 ;; Hardware stack levels used:    1
  3541 ;; Hardware stack levels required when called:    3
  3542 ;; This function calls:
  3543 ;;		_ADC_ISR
  3544 ;;		_I2C_ISR
  3545 ;; This function is called by:
  3546 ;;		Interrupt level 1
  3547 ;; This function uses a non-reentrant model
  3548 ;;
  3549                           
  3550  0004                     _INTERRUPT_InterruptManager:	
  3551                           
  3552                           ;incstack = 0
  3553                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3554  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3555  0005  3180               	pagesel	$
  3556  0006  0020               	movlb	0	; select bank0
  3557  0007  087F               	movf	127,w
  3558  0008  00F7               	movwf	??_INTERRUPT_InterruptManager
  3559                           
  3560                           ;interrupt_manager.c: 54: if (PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1) {
  3561  0009  0021               	movlb	1	; select bank1
  3562  000A  1D91               	btfss	17,3	;volatile
  3563  000B  2813               	goto	i1l185
  3564  000C  0020               	movlb	0	; select bank0
  3565  000D  1D91               	btfss	17,3	;volatile
  3566  000E  2813               	goto	i1l185
  3567                           
  3568                           ;interrupt_manager.c: 55: I2C_ISR();
  3569  000F  3182  224F  3180   	fcall	_I2C_ISR
  3570                           
  3571                           ;interrupt_manager.c: 56: } else if (PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1) {
  3572  0012  281B               	goto	i1l189
  3573  0013                     i1l185:	
  3574  0013  0021               	movlb	1	; select bank1
  3575  0014  1F11               	btfss	17,6	;volatile
  3576  0015  281B               	goto	i1l189
  3577  0016  0020               	movlb	0	; select bank0
  3578  0017  1F11               	btfss	17,6	;volatile
  3579  0018  281B               	goto	i1l189
  3580                           
  3581                           ;interrupt_manager.c: 57: ADC_ISR();
  3582  0019  3183  2323         	fcall	_ADC_ISR
  3583  001B                     i1l189:	
  3584                           ;interrupt_manager.c: 58: } else {
  3585                           
  3586  001B  0877               	movf	??_INTERRUPT_InterruptManager,w
  3587  001C  0020               	movlb	0	; select bank0
  3588  001D  00FF               	movwf	127
  3589  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3590  001F  0009               	retfie
  3591  0020                     __end_of_INTERRUPT_InterruptManager:	
  3592                           
  3593                           	psect	text10
  3594  024F                     __ptext10:	
  3595 ;; *************** function _I2C_ISR *****************
  3596 ;; Defined at:
  3597 ;;		line 104 in file "mcc_generated_files/i2c.c"
  3598 ;; Parameters:    Size  Location     Type
  3599 ;;		None
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;  i2c_data        1    6[COMMON] unsigned char 
  3602 ;; Return value:  Size  Location     Type
  3603 ;;		None               void
  3604 ;; Registers used:
  3605 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3612 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3613 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3614 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3615 ;;Total ram usage:        2 bytes
  3616 ;; Hardware stack levels used:    1
  3617 ;; Hardware stack levels required when called:    2
  3618 ;; This function calls:
  3619 ;;		_I2C_StatusCallback
  3620 ;; This function is called by:
  3621 ;;		_INTERRUPT_InterruptManager
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625                           
  3626                           ;psect for function _I2C_ISR
  3627  024F                     _I2C_ISR:	
  3628                           
  3629                           ;i2c.c: 105: uint8_t i2c_data = 0x55;
  3630                           
  3631                           ;incstack = 0
  3632                           ; Regs used in _I2C_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3633  024F  3055               	movlw	85
  3634  0250  00F5               	movwf	??_I2C_ISR
  3635  0251  0875               	movf	??_I2C_ISR,w
  3636  0252  00F6               	movwf	I2C_ISR@i2c_data
  3637                           
  3638                           ;i2c.c: 111: PIR1bits.SSP1IF = 0;
  3639  0253  0020               	movlb	0	; select bank0
  3640  0254  1191               	bcf	17,3	;volatile
  3641                           
  3642                           ;i2c.c: 112: i2c_data = SSP1BUF;
  3643  0255  0024               	movlb	4	; select bank4
  3644  0256  0811               	movf	17,w	;volatile
  3645  0257  00F5               	movwf	??_I2C_ISR
  3646  0258  0875               	movf	??_I2C_ISR,w
  3647  0259  00F6               	movwf	I2C_ISR@i2c_data
  3648                           
  3649                           ;i2c.c: 113: if (1 == SSP1STATbits.R_nW) {
  3650  025A  1D14               	btfss	20,2	;volatile
  3651  025B  2A63               	goto	i1l105
  3652                           
  3653                           ;i2c.c: 114: if ((1 == SSP1STATbits.D_nA) && (1 == SSP1CON2bits.ACKSTAT)) {
  3654  025C  1A94               	btfsc	20,5	;volatile
  3655  025D  1F16               	btfss	22,6	;volatile
  3656  025E  2A61               	goto	i1l1050
  3657                           
  3658                           ;i2c.c: 116: I2C_StatusCallback(I2C_SLAVE_READ_COMPLETED);
  3659  025F  3003               	movlw	3
  3660  0260  2A76               	goto	L1
  3661  0261                     i1l1050:	
  3662                           ;i2c.c: 117: } else {
  3663                           
  3664                           
  3665                           ;i2c.c: 119: I2C_StatusCallback(I2C_SLAVE_READ_REQUEST);
  3666  0261  3001               	movlw	1
  3667  0262  2A76               	goto	L1
  3668  0263                     i1l105:	
  3669                           ;i2c.c: 120: }
  3670                           ;i2c.c: 121: } else if (0 == SSP1STATbits.D_nA) {
  3671                           
  3672  0263  1A94               	btfsc	20,5	;volatile
  3673  0264  2A6C               	goto	i1l1056
  3674                           
  3675                           ;i2c.c: 123: debug = 2;
  3676  0265  3002               	movlw	2
  3677  0266  0020               	movlb	0	; select bank0
  3678  0267  00A0               	movwf	_debug
  3679  0268  3000               	movlw	0
  3680  0269  00A1               	movwf	_debug+1
  3681                           
  3682                           ;i2c.c: 125: I2C_StatusCallback(I2C_SLAVE_WRITE_REQUEST);
  3683  026A  3000               	movlw	0
  3684  026B  2A76               	goto	L1
  3685  026C                     i1l1056:	
  3686                           ;i2c.c: 126: } else {
  3687                           
  3688                           
  3689                           ;i2c.c: 127: I2C_slaveWriteData = i2c_data;
  3690  026C  0876               	movf	I2C_ISR@i2c_data,w
  3691  026D  00F5               	movwf	??_I2C_ISR
  3692  026E  0875               	movf	??_I2C_ISR,w
  3693  026F  00FB               	movwf	_I2C_slaveWriteData	;volatile
  3694                           
  3695                           ;i2c.c: 128: debug = 4;
  3696  0270  3004               	movlw	4
  3697  0271  0020               	movlb	0	; select bank0
  3698  0272  00A0               	movwf	_debug
  3699  0273  3000               	movlw	0
  3700  0274  00A1               	movwf	_debug+1
  3701                           
  3702                           ;i2c.c: 130: I2C_StatusCallback(I2C_SLAVE_WRITE_COMPLETED);
  3703  0275  3002               	movlw	2
  3704  0276                     L1:	
  3705  0276  3182  2205         	fcall	_I2C_StatusCallback
  3706                           
  3707                           ;i2c.c: 131: }
  3708                           ;i2c.c: 133: SSP1CON1bits.CKP = 1;
  3709  0278  0024               	movlb	4	; select bank4
  3710  0279  1615               	bsf	21,4	;volatile
  3711  027A  0008               	return
  3712  027B                     __end_of_I2C_ISR:	
  3713                           
  3714                           	psect	text11
  3715  0205                     __ptext11:	
  3716 ;; *************** function _I2C_StatusCallback *****************
  3717 ;; Defined at:
  3718 ;;		line 160 in file "mcc_generated_files/i2c.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;  i2c_bus_stat    1    wreg     enum E6245
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;  i2c_bus_stat    1    4[COMMON] enum E6245
  3723 ;; Return value:  Size  Location     Type
  3724 ;;		None               void
  3725 ;; Registers used:
  3726 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3733 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3734 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3735 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3736 ;;Total ram usage:        3 bytes
  3737 ;; Hardware stack levels used:    1
  3738 ;; Hardware stack levels required when called:    1
  3739 ;; This function calls:
  3740 ;;		_getADCReading
  3741 ;; This function is called by:
  3742 ;;		_I2C_ISR
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           
  3747                           ;psect for function _I2C_StatusCallback
  3748  0205                     _I2C_StatusCallback:	
  3749                           
  3750                           ;incstack = 0
  3751                           ; Regs used in _I2C_StatusCallback: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3752                           ;I2C_StatusCallback@i2c_bus_state stored from wreg
  3753  0205  00F4               	movwf	I2C_StatusCallback@i2c_bus_state
  3754                           
  3755                           ;i2c.c: 162: static uint8_t EEPROM_Buffer[] ={
  3756                           ;i2c.c: 163: 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0
      +                          c, 0x0d, 0x0e, 0x0f,
  3757                           ;i2c.c: 164: 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1
      +                          c, 0x1d, 0x1e, 0x1f,
  3758                           ;i2c.c: 165: 0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2
      +                          c, 0x2d, 0x2e, 0x2f,
  3759                           ;i2c.c: 166: 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x3b, 0x3
      +                          c, 0x3d, 0x3e, 0x3f,
  3760                           ;i2c.c: 167: 0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4
      +                          c, 0x4d, 0x4e, 0x4f,
  3761  0206  2A40               	goto	i1l1022
  3762  0207                     i1l994:	
  3763                           ;i2c.c: 178: case I2C_SLAVE_WRITE_REQUEST:{
  3764                           
  3765                           
  3766                           ;i2c.c: 182: slaveWriteType = SLAVE_NORMAL_DATA;
  3767  0207  01F9               	clrf	I2C_StatusCallback@slaveWriteType
  3768                           
  3769                           ;i2c.c: 185: break;
  3770  0208  0008               	return
  3771  0209                     i1l996:	
  3772                           ;i2c.c: 192: case SLAVE_DATA_ADDRESS:
  3773                           
  3774                           ;i2c.c: 191: switch (slaveWriteType) {
  3775                           
  3776                           ;i2c.c: 186: }
  3777                           ;i2c.c: 189: case I2C_SLAVE_WRITE_COMPLETED:
  3778                           
  3779                           
  3780                           ;i2c.c: 193: eepromAddress = I2C_slaveWriteData;
  3781  0209  087B               	movf	_I2C_slaveWriteData,w	;volatile
  3782  020A  00F2               	movwf	??_I2C_StatusCallback
  3783  020B  0872               	movf	??_I2C_StatusCallback,w
  3784  020C  00F8               	movwf	I2C_StatusCallback@eepromAddress
  3785                           
  3786                           ;i2c.c: 194: break;
  3787  020D  2A34               	goto	i1l1016
  3788  020E                     i1l998:	
  3789                           ;i2c.c: 197: case SLAVE_NORMAL_DATA:
  3790                           
  3791                           
  3792                           ;i2c.c: 201: Command = I2C_slaveWriteData;
  3793  020E  087B               	movf	_I2C_slaveWriteData,w	;volatile
  3794  020F  00F2               	movwf	??_I2C_StatusCallback
  3795  0210  0872               	movf	??_I2C_StatusCallback,w
  3796  0211  00FA               	movwf	_Command
  3797                           
  3798                           ;i2c.c: 203: if(Command == 0xA5){
  3799  0212  30A5               	movlw	165
  3800  0213  067A               	xorwf	_Command,w
  3801  0214  1903               	btfsc	3,2
  3802  0215  0001               	reset	;# 
  3803                           
  3804                           ;i2c.c: 205: }
  3805                           ;i2c.c: 209: EEPROM_Buffer[eepromAddress++] = I2C_slaveWriteData;
  3806  0216  0878               	movf	I2C_StatusCallback@eepromAddress,w
  3807  0217  3E70               	addlw	112
  3808  0218  00F2               	movwf	??_I2C_StatusCallback
  3809  0219  01F3               	clrf	??_I2C_StatusCallback+1
  3810  021A  3027               	movlw	39
  3811  021B  3DF3               	addwfc	??_I2C_StatusCallback+1,f
  3812  021C  0872               	movf	??_I2C_StatusCallback,w
  3813  021D  0086               	movwf	6
  3814  021E  0873               	movf	??_I2C_StatusCallback+1,w
  3815  021F  0087               	movwf	7
  3816  0220  087B               	movf	_I2C_slaveWriteData,w	;volatile
  3817  0221  0081               	movwf	1
  3818  0222  3001               	movlw	1
  3819  0223  00F2               	movwf	??_I2C_StatusCallback
  3820  0224  0872               	movf	??_I2C_StatusCallback,w
  3821  0225  07F8               	addwf	I2C_StatusCallback@eepromAddress,f
  3822                           
  3823                           ;i2c.c: 210: if (sizeof (EEPROM_Buffer) <= eepromAddress) {
  3824  0226  3080               	movlw	128
  3825  0227  0278               	subwf	I2C_StatusCallback@eepromAddress,w
  3826  0228  1C03               	skipc
  3827  0229  2A34               	goto	i1l1016
  3828                           
  3829                           ;i2c.c: 211: eepromAddress = 0;
  3830  022A  01F8               	clrf	I2C_StatusCallback@eepromAddress
  3831                           
  3832                           ;i2c.c: 215: }
  3833                           
  3834                           ;i2c.c: 212: }
  3835                           ;i2c.c: 213: break;
  3836  022B  2A34               	goto	i1l1016
  3837  022C                     i1l1014:	
  3838  022C  0879               	movf	I2C_StatusCallback@slaveWriteType,w
  3839                           
  3840                           ; Switch size 1, requested type "space"
  3841                           ; Number of cases is 2, Range of values is 0 to 1
  3842                           ; switch strategies available:
  3843                           ; Name         Instructions Cycles
  3844                           ; simple_byte            7     4 (average)
  3845                           ; direct_byte           10     6 (fixed)
  3846                           ; jumptable            260     6 (fixed)
  3847                           ;	Chosen strategy is simple_byte
  3848  022D  3A00               	xorlw	0	; case 0
  3849  022E  1903               	skipnz
  3850  022F  2A0E               	goto	i1l998
  3851  0230  3A01               	xorlw	1	; case 1
  3852  0231  1903               	skipnz
  3853  0232  2A09               	goto	i1l996
  3854  0233  2A34               	goto	i1l1016
  3855  0234                     i1l1016:	
  3856                           
  3857                           ;i2c.c: 217: slaveWriteType = SLAVE_NORMAL_DATA;
  3858  0234  01F9               	clrf	I2C_StatusCallback@slaveWriteType
  3859                           
  3860                           ;i2c.c: 218: break;
  3861  0235  0008               	return
  3862  0236                     i1l1018:	
  3863                           ;i2c.c: 220: case I2C_SLAVE_READ_REQUEST:
  3864                           
  3865                           
  3866                           ;i2c.c: 221: debug = 3;
  3867  0236  3003               	movlw	3
  3868  0237  0020               	movlb	0	; select bank0
  3869  0238  00A0               	movwf	_debug
  3870  0239  3000               	movlw	0
  3871  023A  00A1               	movwf	_debug+1
  3872                           
  3873                           ;i2c.c: 223: SSP1BUF = getADCReading();
  3874  023B  3182  22BF         	fcall	_getADCReading
  3875  023D  0024               	movlb	4	; select bank4
  3876  023E  0091               	movwf	17	;volatile
  3877                           
  3878                           ;i2c.c: 232: }
  3879                           
  3880                           ;i2c.c: 230: default:;
  3881                           
  3882                           ;i2c.c: 229: case I2C_SLAVE_READ_COMPLETED:
  3883                           
  3884                           ;i2c.c: 227: break;
  3885  023F  0008               	return
  3886  0240                     i1l1022:	
  3887  0240  0874               	movf	I2C_StatusCallback@i2c_bus_state,w
  3888                           
  3889                           ; Switch size 1, requested type "space"
  3890                           ; Number of cases is 4, Range of values is 0 to 3
  3891                           ; switch strategies available:
  3892                           ; Name         Instructions Cycles
  3893                           ; simple_byte           13     7 (average)
  3894                           ; direct_byte           14     6 (fixed)
  3895                           ; jumptable            260     6 (fixed)
  3896                           ;	Chosen strategy is simple_byte
  3897  0241  3A00               	xorlw	0	; case 0
  3898  0242  1903               	skipnz
  3899  0243  2A07               	goto	i1l994
  3900  0244  3A01               	xorlw	1	; case 1
  3901  0245  1903               	skipnz
  3902  0246  2A36               	goto	i1l1018
  3903  0247  3A03               	xorlw	3	; case 2
  3904  0248  1903               	skipnz
  3905  0249  2A2C               	goto	i1l1014
  3906  024A  3A01               	xorlw	1	; case 3
  3907  024B  1903               	skipnz
  3908  024C  2A4E               	goto	i1l135
  3909  024D  2A4E               	goto	i1l135
  3910  024E                     i1l135:	
  3911  024E  0008               	return
  3912  024F                     __end_of_I2C_StatusCallback:	
  3913                           
  3914                           	psect	text12
  3915  02BF                     __ptext12:	
  3916 ;; *************** function _getADCReading *****************
  3917 ;; Defined at:
  3918 ;;		line 85 in file "irRange.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;		None
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;  temp            1    1[COMMON] unsigned char 
  3923 ;; Return value:  Size  Location     Type
  3924 ;;                  1    wreg      unsigned char 
  3925 ;; Registers used:
  3926 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3933 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3934 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3935 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3936 ;;Total ram usage:        2 bytes
  3937 ;; Hardware stack levels used:    1
  3938 ;; This function calls:
  3939 ;;		Nothing
  3940 ;; This function is called by:
  3941 ;;		_I2C_StatusCallback
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945                           
  3946                           ;psect for function _getADCReading
  3947  02BF                     _getADCReading:	
  3948                           
  3949                           ;irRange.c: 87: uint8_t temp = *i2cread_ptr;
  3950                           
  3951                           ;incstack = 0
  3952                           ; Regs used in _getADCReading: [wreg+fsr1l+fsr1h+status,2+status,0]
  3953  02BF  087C               	movf	_i2cread_ptr,w
  3954  02C0  0086               	movwf	6
  3955  02C1  0187               	clrf	7
  3956  02C2  0801               	movf	1,w
  3957  02C3  00F0               	movwf	??_getADCReading
  3958  02C4  0870               	movf	??_getADCReading,w
  3959  02C5  00F1               	movwf	getADCReading@temp
  3960                           
  3961                           ;irRange.c: 88: i2cread_ptr++;
  3962  02C6  3001               	movlw	1
  3963  02C7  00F0               	movwf	??_getADCReading
  3964  02C8  0870               	movf	??_getADCReading,w
  3965  02C9  07FC               	addwf	_i2cread_ptr,f
  3966                           
  3967                           ;irRange.c: 90: if(i2cread_ptr == ((uint8_t*)adc_readings + 20)){
  3968  02CA  087C               	movf	_i2cread_ptr,w
  3969  02CB  3A37               	xorlw	(low ((_adc_readings| 0+20)))& (0+255)
  3970  02CC  1D03               	skipz
  3971  02CD  2AD2               	goto	i1l238
  3972                           
  3973                           ;irRange.c: 91: i2cread_ptr = (uint8_t*)adc_readings;
  3974  02CE  3023               	movlw	(low (_adc_readings| 0))& (0+255)
  3975  02CF  00F0               	movwf	??_getADCReading
  3976  02D0  0870               	movf	??_getADCReading,w
  3977  02D1  00FC               	movwf	_i2cread_ptr
  3978  02D2                     i1l238:	
  3979                           
  3980                           ;irRange.c: 92: }
  3981                           ;irRange.c: 94: return temp;
  3982  02D2  0871               	movf	getADCReading@temp,w
  3983  02D3  0008               	return
  3984  02D4                     __end_of_getADCReading:	
  3985                           
  3986                           	psect	text13
  3987  0323                     __ptext13:	
  3988 ;; *************** function _ADC_ISR *****************
  3989 ;; Defined at:
  3990 ;;		line 132 in file "mcc_generated_files/adc.c"
  3991 ;; Parameters:    Size  Location     Type
  3992 ;;		None
  3993 ;; Auto vars:     Size  Location     Type
  3994 ;;		None
  3995 ;; Return value:  Size  Location     Type
  3996 ;;		None               void
  3997 ;; Registers used:
  3998 ;;		None
  3999 ;; Tracked objects:
  4000 ;;		On entry : 0/0
  4001 ;;		On exit  : 0/0
  4002 ;;		Unchanged: 0/0
  4003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4008 ;;Total ram usage:        0 bytes
  4009 ;; Hardware stack levels used:    1
  4010 ;; This function calls:
  4011 ;;		Nothing
  4012 ;; This function is called by:
  4013 ;;		_INTERRUPT_InterruptManager
  4014 ;; This function uses a non-reentrant model
  4015 ;;
  4016                           
  4017                           
  4018                           ;psect for function _ADC_ISR
  4019  0323                     _ADC_ISR:	
  4020                           
  4021                           ;adc.c: 134: PIR1bits.ADIF = 0;
  4022                           
  4023                           ;incstack = 0
  4024                           ; Regs used in _ADC_ISR: []
  4025  0323  0020               	movlb	0	; select bank0
  4026  0324  1311               	bcf	17,6	;volatile
  4027  0325  0008               	return
  4028  0326                     __end_of_ADC_ISR:	
  4029  007E                     btemp	set	126	;btemp
  4030  007E                     int$flags	set	126
  4031  007E                     wtemp	set	126
  4032  007E                     wtemp0	set	126
  4033  0080                     wtemp1	set	128
  4034  0082                     wtemp2	set	130
  4035  0084                     wtemp3	set	132
  4036  0086                     wtemp4	set	134
  4037  0088                     wtemp5	set	136
  4038  007F                     wtemp6	set	127
  4039  007E                     ttemp	set	126
  4040  007E                     ttemp0	set	126
  4041  0081                     ttemp1	set	129
  4042  0084                     ttemp2	set	132
  4043  0087                     ttemp3	set	135
  4044  007F                     ttemp4	set	127
  4045  007E                     ltemp	set	126
  4046  007E                     ltemp0	set	126
  4047  0082                     ltemp1	set	130
  4048  0086                     ltemp2	set	134
  4049  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        131
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      13
    BANK0            80      5      29
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           64      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    i2cread_ptr	PTR unsigned char  size(1) Largest target is 20
		 -> adc_readings(BANK0[20]), 

    adc_readings_ptr	PTR unsigned int  size(1) Largest target is 20
		 -> adc_readings(BANK0[20]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C_ISR
    _I2C_ISR->_I2C_StatusCallback
    _I2C_StatusCallback->_getADCReading

Critical Paths under _main in BANK0

    _main->_readADCs
    _readADCs->_ADC_GetConversion
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     113
                  _SYSTEM_Initialize
                       _init_irRange
                           _readADCs
 ---------------------------------------------------------------------------------
 (1) _readADCs                                             1     1      0      22
                                              4 BANK0      1     1      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    4     2      2      22
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_irRange                                         3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      23
                     _ADC_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INTERRUPT_InterruptManager                           1     1      0      69
                                              7 COMMON     1     1      0
                            _ADC_ISR
                            _I2C_ISR
 ---------------------------------------------------------------------------------
 (4) _I2C_ISR                                              2     2      0      69
                                              5 COMMON     2     2      0
                 _I2C_StatusCallback
 ---------------------------------------------------------------------------------
 (5) _I2C_StatusCallback                                   3     3      0      45
                                              2 COMMON     3     3      0
                      _getADCReading
 ---------------------------------------------------------------------------------
 (6) _getADCReading                                        2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _init_irRange
   _readADCs
     _ADC_GetConversion

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _I2C_ISR
     _I2C_StatusCallback
       _getADCReading

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      5      1D       5       36.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      2A      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      2A      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              40      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Mar 27 00:08:37 2016

                        __CFG_CP$OFF 0000                                  l235 0132  
                                l168 02B5                                  _GIE 005F  
                                u180 0203                                  u275 0287  
                                u285 029E                      __end_of_I2C_ISR 027B  
                    __end_of_ADC_ISR 0326                         __CFG_BORV$LO 0000  
                       __CFG_IESO$ON 0000                         __CFG_LVP$OFF 0000  
                               l1102 009C                                 l1120 00D8  
                               l1114 00C4                                 l1132 0100  
                               l1108 00B0                                 l1140 0111  
                               l1126 00EC                                 l1160 0303  
                               l1074 02A0                                 l1090 0074  
                               l1068 0289                                 l1084 0060  
                               l1078 004E                                 l1096 0088  
                               _LATA 010C                                 _LATB 010D  
                               _LATC 010E                                 _WPUA 020C  
                               _WPUB 020D                                 _WPUC 020E  
                               _WPUE 0210                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _main 02FB  
                               fsr0h 0005                                 fsr1h 0007  
                               fsr0l 0004                                 indf0 0000  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                        __CFG_BOREN$ON 0000  
                               ltemp 007E                                 start 0020  
                               ttemp 007E                                 wtemp 007E  
                      __CFG_MCLRE$ON 0000                        __CFG_PLLEN$ON 0000  
     __size_of_OSCILLATOR_Initialize 0006        __end_of_OSCILLATOR_Initialize 0323  
                              ?_main 0070                        __CFG_WDTE$OFF 0000  
                              i1l105 0263                                i1l135 024E  
                              i1l238 02D2                                i1l185 0013  
                              i1l189 001B                                i1l994 0207  
                              i1l996 0209                                i1l998 020E  
                              _TRISA 008C                                _TRISB 008D  
                              _TRISC 008E                                _TRISE 0090  
                       _adc_readings 0023                                _debug 0020  
                              ltemp0 007E                                ltemp1 0082  
                              ltemp2 0086                                ltemp3 0080  
                              ttemp0 007E                                ttemp1 0081  
                              ttemp2 0084                                ttemp3 0087  
                              ttemp4 007F                                status 0003  
                              wtemp0 007E                                wtemp1 0080  
                              wtemp2 0082                                wtemp3 0084  
                              wtemp4 0086                                wtemp5 0088  
                              wtemp6 007F                      __initialization 0022  
                       __end_of_main 0307                            ??_I2C_ISR 0075  
                          ??_ADC_ISR 0070                       __CFG_LPBOR$OFF 0000  
        ?_INTERRUPT_InterruptManager 0070                               ??_main 003C  
                             _ADCON0 009D                               _ADCON1 009E  
                             _ADCON2 009F                               _ADRESH 009C  
                             _ADRESL 009B                       __CFG_ZCDDIS$ON 0000  
                             _ANSELA 018C                               _ANSELB 018D  
                             _ANSELC 018E                               i1l1014 022C  
                             i1l1022 0240                               i1l1016 0234  
                             i1l1018 0236                               i1l1050 0261  
                             i1l1056 026C                        ?_init_irRange 0070  
                             _OSCCON 0099                       __CFG_PWRTE$OFF 0000  
                   __end_of_readADCs 0133                       __CFG_STVREN$ON 0000  
                 _I2C_StatusCallback 0205              __size_of_I2C_Initialize 000F  
                       __pdataBIGRAM 2770                         __pdataCOMMON 007B  
                ?_I2C_StatusCallback 0070             ADC_GetConversion@channel 003A  
                     ??_init_irRange 0037                    _SYSTEM_Initialize 0307  
            __end_of__initialization 0049                   ?_SYSTEM_Initialize 0070  
               ??_I2C_StatusCallback 0072                       __pcstackCOMMON 0070  
                       __pidataBANK0 0328                  ??_SYSTEM_Initialize 0038  
                        _i2cread_ptr 007C                       _OPTION_REGbits 0095  
             __size_of_getADCReading 0015            __end_of_SYSTEM_Initialize 0313  
                         __pbssBANK0 0020                           __pmaintext 02FB  
                    __CFG_PPS1WAY$ON 0000                           __pintentry 0004  
                            _I2C_ISR 024F                              _ADC_ISR 0323  
            __size_of_ADC_Initialize 000A     I2C_StatusCallback@slaveWriteType 0079  
                            _OSCSTAT 009A                              _OSCTUNE 0098  
                            _SSP1ADD 0212                              _PPSLOCK 0E0F  
                            _SSP1BUF 0211                              _SSP1MSK 0213  
                          ?_readADCs 0070                              _Command 007A  
                      _getADCReading 02BF                 __end_of_init_irRange 02A3  
                     _I2C_Initialize 02D4                              __ptext1 004D  
                            __ptext2 02A3                              __ptext3 027B  
                            __ptext4 0307                              __ptext5 01B3  
                            __ptext6 031D                              __ptext7 02D4  
                            __ptext8 0313                _OSCILLATOR_Initialize 031D  
           ??_PIN_MANAGER_Initialize 0037           __size_of_SYSTEM_Initialize 000C  
                            clrloop0 02E4                 end_of_initialization 0049  
                         ??_readADCs 003B                              init_ram 02EF  
                            initloop 02F0                       ?_getADCReading 0070  
             __end_of_I2C_Initialize 02E3                     __CFG_FOSC$INTOSC 0000  
    I2C_StatusCallback@EEPROM_Buffer 2770                      ?_I2C_Initialize 0070  
                      __pidataBIGRAM 0133                        __pidataCOMMON 0326  
                     _ADC_Initialize 0313               ?_OSCILLATOR_Initialize 0070  
                start_initialization 0022      __size_of_PIN_MANAGER_Initialize 0052  
                    ??_getADCReading 0070          __size_of_I2C_StatusCallback 004A  
              __size_of_init_irRange 0028               __end_of_ADC_Initialize 031D  
                        __pdataBANK0 003C                             ?_I2C_ISR 0070  
                           ?_ADC_ISR 0070                          __pbssCOMMON 0078  
                          ___latbits 0003                        __pcstackBANK0 0037  
                          _adc_state 0022                         _init_irRange 027B  
                   _adc_readings_ptr 003C                    __size_of_readADCs 00E6  
             _PIN_MANAGER_Initialize 01B3                      ?_ADC_Initialize 0070  
       ??_INTERRUPT_InterruptManager 0077                            clear_ram0 02E3  
                           _PIE1bits 0091  __size_of_INTERRUPT_InterruptManager 001C  
                           _PIR1bits 0011                             _SSP1CON1 0215  
                           _SSP1CON2 0216                             _SSP1CON3 0217  
                           _SSP1STAT 0214      I2C_StatusCallback@eepromAddress 0078  
                   __size_of_I2C_ISR 002C                     __size_of_ADC_ISR 0003  
                         _ADCON0bits 009D                     ??_I2C_Initialize 0037  
                  _ADC_GetConversion 02A3              ??_OSCILLATOR_Initialize 0037  
                 ?_ADC_GetConversion 0037                      I2C_ISR@i2c_data 0076  
                ??_ADC_GetConversion 0039                             __ptext10 024F  
                           __ptext11 0205                             __ptext12 02BF  
                           __ptext13 0323                         _SSP1CON1bits 0215  
                       _SSP1CON2bits 0216                             _readADCs 004D  
                      __size_of_main 000C                        _SSPDATPPSbits 0E21  
          __end_of_ADC_GetConversion 02BF                           _RC0PPSbits 0EA0  
                         _RC1PPSbits 0EA1                        init_irRange@i 0038  
                      _SSPCLKPPSbits 0E20                             int$flags 007E  
 __end_of_INTERRUPT_InterruptManager 0020           _INTERRUPT_InterruptManager 0004  
                       _SSP1STATbits 0214          PIN_MANAGER_Initialize@state 0037  
                 _I2C_slaveWriteData 007B                           _INTCONbits 000B  
                           intlevel1 0000              ?_PIN_MANAGER_Initialize 0070  
                  __CFG_CLKOUTEN$OFF 0000           __end_of_I2C_StatusCallback 024F  
              __end_of_getADCReading 02D4                          _PPSLOCKbits 0E0F  
    I2C_StatusCallback@i2c_bus_state 0074                     ??_ADC_Initialize 0037  
                  getADCReading@temp 0071       __end_of_PIN_MANAGER_Initialize 0205  
         __size_of_ADC_GetConversion 001C  
