

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Mar 27 11:43:38 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1718
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBIGRAM,global,class=CODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	dabs	1,0xCA0,32
    34                           	dabs	1,0xC20,80
    35                           	dabs	1,0xBE0,16
    36                           	dabs	1,0x2770,0,I2C_StatusCallback@EEPROM_Buffer
    37                           	dabs	1,0x7E,2
    38  0000                     	;# 
    39  0001                     	;# 
    40  0002                     	;# 
    41  0003                     	;# 
    42  0004                     	;# 
    43  0005                     	;# 
    44  0006                     	;# 
    45  0007                     	;# 
    46  0008                     	;# 
    47  0009                     	;# 
    48  000A                     	;# 
    49  000B                     	;# 
    50  000C                     	;# 
    51  000D                     	;# 
    52  000E                     	;# 
    53  0010                     	;# 
    54  0011                     	;# 
    55  0012                     	;# 
    56  0013                     	;# 
    57  0015                     	;# 
    58  0016                     	;# 
    59  0016                     	;# 
    60  0017                     	;# 
    61  0018                     	;# 
    62  0019                     	;# 
    63  001A                     	;# 
    64  001B                     	;# 
    65  001C                     	;# 
    66  008C                     	;# 
    67  008D                     	;# 
    68  008E                     	;# 
    69  0090                     	;# 
    70  0091                     	;# 
    71  0092                     	;# 
    72  0093                     	;# 
    73  0095                     	;# 
    74  0096                     	;# 
    75  0097                     	;# 
    76  0098                     	;# 
    77  0099                     	;# 
    78  009A                     	;# 
    79  009B                     	;# 
    80  009B                     	;# 
    81  009C                     	;# 
    82  009D                     	;# 
    83  009E                     	;# 
    84  009F                     	;# 
    85  010C                     	;# 
    86  010D                     	;# 
    87  010E                     	;# 
    88  0111                     	;# 
    89  0112                     	;# 
    90  0113                     	;# 
    91  0114                     	;# 
    92  0115                     	;# 
    93  0116                     	;# 
    94  0117                     	;# 
    95  0118                     	;# 
    96  0119                     	;# 
    97  011A                     	;# 
    98  011B                     	;# 
    99  011B                     	;# 
   100  011C                     	;# 
   101  018C                     	;# 
   102  018D                     	;# 
   103  018E                     	;# 
   104  0191                     	;# 
   105  0191                     	;# 
   106  0192                     	;# 
   107  0193                     	;# 
   108  0193                     	;# 
   109  0194                     	;# 
   110  0195                     	;# 
   111  0196                     	;# 
   112  0197                     	;# 
   113  0199                     	;# 
   114  0199                     	;# 
   115  0199                     	;# 
   116  019A                     	;# 
   117  019A                     	;# 
   118  019A                     	;# 
   119  019B                     	;# 
   120  019B                     	;# 
   121  019B                     	;# 
   122  019B                     	;# 
   123  019B                     	;# 
   124  019C                     	;# 
   125  019C                     	;# 
   126  019C                     	;# 
   127  019D                     	;# 
   128  019D                     	;# 
   129  019D                     	;# 
   130  019E                     	;# 
   131  019E                     	;# 
   132  019E                     	;# 
   133  019F                     	;# 
   134  019F                     	;# 
   135  019F                     	;# 
   136  019F                     	;# 
   137  019F                     	;# 
   138  020C                     	;# 
   139  020D                     	;# 
   140  020E                     	;# 
   141  0210                     	;# 
   142  0211                     	;# 
   143  0211                     	;# 
   144  0212                     	;# 
   145  0212                     	;# 
   146  0213                     	;# 
   147  0213                     	;# 
   148  0214                     	;# 
   149  0214                     	;# 
   150  0215                     	;# 
   151  0215                     	;# 
   152  0215                     	;# 
   153  0215                     	;# 
   154  0216                     	;# 
   155  0216                     	;# 
   156  0217                     	;# 
   157  0217                     	;# 
   158  028C                     	;# 
   159  028D                     	;# 
   160  028E                     	;# 
   161  0291                     	;# 
   162  0291                     	;# 
   163  0292                     	;# 
   164  0293                     	;# 
   165  0293                     	;# 
   166  0298                     	;# 
   167  0298                     	;# 
   168  0299                     	;# 
   169  029A                     	;# 
   170  029A                     	;# 
   171  029E                     	;# 
   172  030C                     	;# 
   173  030D                     	;# 
   174  030E                     	;# 
   175  038C                     	;# 
   176  038D                     	;# 
   177  038E                     	;# 
   178  0390                     	;# 
   179  0391                     	;# 
   180  0392                     	;# 
   181  0393                     	;# 
   182  0394                     	;# 
   183  0395                     	;# 
   184  0396                     	;# 
   185  0397                     	;# 
   186  0398                     	;# 
   187  0399                     	;# 
   188  039D                     	;# 
   189  039E                     	;# 
   190  039F                     	;# 
   191  0415                     	;# 
   192  0416                     	;# 
   193  0417                     	;# 
   194  041C                     	;# 
   195  041D                     	;# 
   196  041E                     	;# 
   197  0498                     	;# 
   198  0498                     	;# 
   199  0499                     	;# 
   200  049A                     	;# 
   201  049B                     	;# 
   202  049B                     	;# 
   203  049C                     	;# 
   204  049D                     	;# 
   205  049E                     	;# 
   206  049F                     	;# 
   207  0511                     	;# 
   208  0515                     	;# 
   209  0617                     	;# 
   210  0618                     	;# 
   211  0619                     	;# 
   212  0619                     	;# 
   213  061A                     	;# 
   214  061B                     	;# 
   215  061C                     	;# 
   216  061C                     	;# 
   217  0691                     	;# 
   218  0692                     	;# 
   219  0693                     	;# 
   220  0694                     	;# 
   221  0695                     	;# 
   222  0696                     	;# 
   223  0697                     	;# 
   224  0698                     	;# 
   225  0699                     	;# 
   226  069A                     	;# 
   227  069B                     	;# 
   228  069C                     	;# 
   229  069D                     	;# 
   230  069E                     	;# 
   231  069F                     	;# 
   232  0E0F                     	;# 
   233  0E10                     	;# 
   234  0E11                     	;# 
   235  0E12                     	;# 
   236  0E13                     	;# 
   237  0E14                     	;# 
   238  0E15                     	;# 
   239  0E17                     	;# 
   240  0E20                     	;# 
   241  0E21                     	;# 
   242  0E22                     	;# 
   243  0E24                     	;# 
   244  0E25                     	;# 
   245  0E28                     	;# 
   246  0E29                     	;# 
   247  0E2A                     	;# 
   248  0E2B                     	;# 
   249  0E90                     	;# 
   250  0E91                     	;# 
   251  0E92                     	;# 
   252  0E93                     	;# 
   253  0E94                     	;# 
   254  0E95                     	;# 
   255  0E96                     	;# 
   256  0E97                     	;# 
   257  0E98                     	;# 
   258  0E99                     	;# 
   259  0E9A                     	;# 
   260  0E9B                     	;# 
   261  0E9C                     	;# 
   262  0E9D                     	;# 
   263  0E9E                     	;# 
   264  0E9F                     	;# 
   265  0EA0                     	;# 
   266  0EA1                     	;# 
   267  0EA2                     	;# 
   268  0EA3                     	;# 
   269  0EA4                     	;# 
   270  0EA5                     	;# 
   271  0EA6                     	;# 
   272  0EA7                     	;# 
   273  0F0F                     	;# 
   274  0F10                     	;# 
   275  0F11                     	;# 
   276  0F12                     	;# 
   277  0F13                     	;# 
   278  0F14                     	;# 
   279  0F15                     	;# 
   280  0F16                     	;# 
   281  0F17                     	;# 
   282  0F18                     	;# 
   283  0F19                     	;# 
   284  0F1A                     	;# 
   285  0F1B                     	;# 
   286  0F1C                     	;# 
   287  0F1D                     	;# 
   288  0F1E                     	;# 
   289  0F1F                     	;# 
   290  0F20                     	;# 
   291  0F21                     	;# 
   292  0F22                     	;# 
   293  0F23                     	;# 
   294  0F24                     	;# 
   295  0F25                     	;# 
   296  0F26                     	;# 
   297  0F27                     	;# 
   298  0F28                     	;# 
   299  0F29                     	;# 
   300  0F2A                     	;# 
   301  0F2B                     	;# 
   302  0F2C                     	;# 
   303  0F2D                     	;# 
   304  0F2E                     	;# 
   305  0F2F                     	;# 
   306  0F30                     	;# 
   307  0F31                     	;# 
   308  0F32                     	;# 
   309  0F33                     	;# 
   310  0F34                     	;# 
   311  0F35                     	;# 
   312  0F36                     	;# 
   313  0F37                     	;# 
   314  0FE4                     	;# 
   315  0FE5                     	;# 
   316  0FE6                     	;# 
   317  0FE7                     	;# 
   318  0FE8                     	;# 
   319  0FE9                     	;# 
   320  0FEA                     	;# 
   321  0FEB                     	;# 
   322  0FED                     	;# 
   323  0FEE                     	;# 
   324  0FEF                     	;# 
   325  0000                     	;# 
   326  0001                     	;# 
   327  0002                     	;# 
   328  0003                     	;# 
   329  0004                     	;# 
   330  0005                     	;# 
   331  0006                     	;# 
   332  0007                     	;# 
   333  0008                     	;# 
   334  0009                     	;# 
   335  000A                     	;# 
   336  000B                     	;# 
   337  000C                     	;# 
   338  000D                     	;# 
   339  000E                     	;# 
   340  0010                     	;# 
   341  0011                     	;# 
   342  0012                     	;# 
   343  0013                     	;# 
   344  0015                     	;# 
   345  0016                     	;# 
   346  0016                     	;# 
   347  0017                     	;# 
   348  0018                     	;# 
   349  0019                     	;# 
   350  001A                     	;# 
   351  001B                     	;# 
   352  001C                     	;# 
   353  008C                     	;# 
   354  008D                     	;# 
   355  008E                     	;# 
   356  0090                     	;# 
   357  0091                     	;# 
   358  0092                     	;# 
   359  0093                     	;# 
   360  0095                     	;# 
   361  0096                     	;# 
   362  0097                     	;# 
   363  0098                     	;# 
   364  0099                     	;# 
   365  009A                     	;# 
   366  009B                     	;# 
   367  009B                     	;# 
   368  009C                     	;# 
   369  009D                     	;# 
   370  009E                     	;# 
   371  009F                     	;# 
   372  010C                     	;# 
   373  010D                     	;# 
   374  010E                     	;# 
   375  0111                     	;# 
   376  0112                     	;# 
   377  0113                     	;# 
   378  0114                     	;# 
   379  0115                     	;# 
   380  0116                     	;# 
   381  0117                     	;# 
   382  0118                     	;# 
   383  0119                     	;# 
   384  011A                     	;# 
   385  011B                     	;# 
   386  011B                     	;# 
   387  011C                     	;# 
   388  018C                     	;# 
   389  018D                     	;# 
   390  018E                     	;# 
   391  0191                     	;# 
   392  0191                     	;# 
   393  0192                     	;# 
   394  0193                     	;# 
   395  0193                     	;# 
   396  0194                     	;# 
   397  0195                     	;# 
   398  0196                     	;# 
   399  0197                     	;# 
   400  0199                     	;# 
   401  0199                     	;# 
   402  0199                     	;# 
   403  019A                     	;# 
   404  019A                     	;# 
   405  019A                     	;# 
   406  019B                     	;# 
   407  019B                     	;# 
   408  019B                     	;# 
   409  019B                     	;# 
   410  019B                     	;# 
   411  019C                     	;# 
   412  019C                     	;# 
   413  019C                     	;# 
   414  019D                     	;# 
   415  019D                     	;# 
   416  019D                     	;# 
   417  019E                     	;# 
   418  019E                     	;# 
   419  019E                     	;# 
   420  019F                     	;# 
   421  019F                     	;# 
   422  019F                     	;# 
   423  019F                     	;# 
   424  019F                     	;# 
   425  020C                     	;# 
   426  020D                     	;# 
   427  020E                     	;# 
   428  0210                     	;# 
   429  0211                     	;# 
   430  0211                     	;# 
   431  0212                     	;# 
   432  0212                     	;# 
   433  0213                     	;# 
   434  0213                     	;# 
   435  0214                     	;# 
   436  0214                     	;# 
   437  0215                     	;# 
   438  0215                     	;# 
   439  0215                     	;# 
   440  0215                     	;# 
   441  0216                     	;# 
   442  0216                     	;# 
   443  0217                     	;# 
   444  0217                     	;# 
   445  028C                     	;# 
   446  028D                     	;# 
   447  028E                     	;# 
   448  0291                     	;# 
   449  0291                     	;# 
   450  0292                     	;# 
   451  0293                     	;# 
   452  0293                     	;# 
   453  0298                     	;# 
   454  0298                     	;# 
   455  0299                     	;# 
   456  029A                     	;# 
   457  029A                     	;# 
   458  029E                     	;# 
   459  030C                     	;# 
   460  030D                     	;# 
   461  030E                     	;# 
   462  038C                     	;# 
   463  038D                     	;# 
   464  038E                     	;# 
   465  0390                     	;# 
   466  0391                     	;# 
   467  0392                     	;# 
   468  0393                     	;# 
   469  0394                     	;# 
   470  0395                     	;# 
   471  0396                     	;# 
   472  0397                     	;# 
   473  0398                     	;# 
   474  0399                     	;# 
   475  039D                     	;# 
   476  039E                     	;# 
   477  039F                     	;# 
   478  0415                     	;# 
   479  0416                     	;# 
   480  0417                     	;# 
   481  041C                     	;# 
   482  041D                     	;# 
   483  041E                     	;# 
   484  0498                     	;# 
   485  0498                     	;# 
   486  0499                     	;# 
   487  049A                     	;# 
   488  049B                     	;# 
   489  049B                     	;# 
   490  049C                     	;# 
   491  049D                     	;# 
   492  049E                     	;# 
   493  049F                     	;# 
   494  0511                     	;# 
   495  0515                     	;# 
   496  0617                     	;# 
   497  0618                     	;# 
   498  0619                     	;# 
   499  0619                     	;# 
   500  061A                     	;# 
   501  061B                     	;# 
   502  061C                     	;# 
   503  061C                     	;# 
   504  0691                     	;# 
   505  0692                     	;# 
   506  0693                     	;# 
   507  0694                     	;# 
   508  0695                     	;# 
   509  0696                     	;# 
   510  0697                     	;# 
   511  0698                     	;# 
   512  0699                     	;# 
   513  069A                     	;# 
   514  069B                     	;# 
   515  069C                     	;# 
   516  069D                     	;# 
   517  069E                     	;# 
   518  069F                     	;# 
   519  0E0F                     	;# 
   520  0E10                     	;# 
   521  0E11                     	;# 
   522  0E12                     	;# 
   523  0E13                     	;# 
   524  0E14                     	;# 
   525  0E15                     	;# 
   526  0E17                     	;# 
   527  0E20                     	;# 
   528  0E21                     	;# 
   529  0E22                     	;# 
   530  0E24                     	;# 
   531  0E25                     	;# 
   532  0E28                     	;# 
   533  0E29                     	;# 
   534  0E2A                     	;# 
   535  0E2B                     	;# 
   536  0E90                     	;# 
   537  0E91                     	;# 
   538  0E92                     	;# 
   539  0E93                     	;# 
   540  0E94                     	;# 
   541  0E95                     	;# 
   542  0E96                     	;# 
   543  0E97                     	;# 
   544  0E98                     	;# 
   545  0E99                     	;# 
   546  0E9A                     	;# 
   547  0E9B                     	;# 
   548  0E9C                     	;# 
   549  0E9D                     	;# 
   550  0E9E                     	;# 
   551  0E9F                     	;# 
   552  0EA0                     	;# 
   553  0EA1                     	;# 
   554  0EA2                     	;# 
   555  0EA3                     	;# 
   556  0EA4                     	;# 
   557  0EA5                     	;# 
   558  0EA6                     	;# 
   559  0EA7                     	;# 
   560  0F0F                     	;# 
   561  0F10                     	;# 
   562  0F11                     	;# 
   563  0F12                     	;# 
   564  0F13                     	;# 
   565  0F14                     	;# 
   566  0F15                     	;# 
   567  0F16                     	;# 
   568  0F17                     	;# 
   569  0F18                     	;# 
   570  0F19                     	;# 
   571  0F1A                     	;# 
   572  0F1B                     	;# 
   573  0F1C                     	;# 
   574  0F1D                     	;# 
   575  0F1E                     	;# 
   576  0F1F                     	;# 
   577  0F20                     	;# 
   578  0F21                     	;# 
   579  0F22                     	;# 
   580  0F23                     	;# 
   581  0F24                     	;# 
   582  0F25                     	;# 
   583  0F26                     	;# 
   584  0F27                     	;# 
   585  0F28                     	;# 
   586  0F29                     	;# 
   587  0F2A                     	;# 
   588  0F2B                     	;# 
   589  0F2C                     	;# 
   590  0F2D                     	;# 
   591  0F2E                     	;# 
   592  0F2F                     	;# 
   593  0F30                     	;# 
   594  0F31                     	;# 
   595  0F32                     	;# 
   596  0F33                     	;# 
   597  0F34                     	;# 
   598  0F35                     	;# 
   599  0F36                     	;# 
   600  0F37                     	;# 
   601  0FE4                     	;# 
   602  0FE5                     	;# 
   603  0FE6                     	;# 
   604  0FE7                     	;# 
   605  0FE8                     	;# 
   606  0FE9                     	;# 
   607  0FEA                     	;# 
   608  0FEB                     	;# 
   609  0FED                     	;# 
   610  0FEE                     	;# 
   611  0FEF                     	;# 
   612  0000                     	;# 
   613  0001                     	;# 
   614  0002                     	;# 
   615  0003                     	;# 
   616  0004                     	;# 
   617  0005                     	;# 
   618  0006                     	;# 
   619  0007                     	;# 
   620  0008                     	;# 
   621  0009                     	;# 
   622  000A                     	;# 
   623  000B                     	;# 
   624  000C                     	;# 
   625  000D                     	;# 
   626  000E                     	;# 
   627  0010                     	;# 
   628  0011                     	;# 
   629  0012                     	;# 
   630  0013                     	;# 
   631  0015                     	;# 
   632  0016                     	;# 
   633  0016                     	;# 
   634  0017                     	;# 
   635  0018                     	;# 
   636  0019                     	;# 
   637  001A                     	;# 
   638  001B                     	;# 
   639  001C                     	;# 
   640  008C                     	;# 
   641  008D                     	;# 
   642  008E                     	;# 
   643  0090                     	;# 
   644  0091                     	;# 
   645  0092                     	;# 
   646  0093                     	;# 
   647  0095                     	;# 
   648  0096                     	;# 
   649  0097                     	;# 
   650  0098                     	;# 
   651  0099                     	;# 
   652  009A                     	;# 
   653  009B                     	;# 
   654  009B                     	;# 
   655  009C                     	;# 
   656  009D                     	;# 
   657  009E                     	;# 
   658  009F                     	;# 
   659  010C                     	;# 
   660  010D                     	;# 
   661  010E                     	;# 
   662  0111                     	;# 
   663  0112                     	;# 
   664  0113                     	;# 
   665  0114                     	;# 
   666  0115                     	;# 
   667  0116                     	;# 
   668  0117                     	;# 
   669  0118                     	;# 
   670  0119                     	;# 
   671  011A                     	;# 
   672  011B                     	;# 
   673  011B                     	;# 
   674  011C                     	;# 
   675  018C                     	;# 
   676  018D                     	;# 
   677  018E                     	;# 
   678  0191                     	;# 
   679  0191                     	;# 
   680  0192                     	;# 
   681  0193                     	;# 
   682  0193                     	;# 
   683  0194                     	;# 
   684  0195                     	;# 
   685  0196                     	;# 
   686  0197                     	;# 
   687  0199                     	;# 
   688  0199                     	;# 
   689  0199                     	;# 
   690  019A                     	;# 
   691  019A                     	;# 
   692  019A                     	;# 
   693  019B                     	;# 
   694  019B                     	;# 
   695  019B                     	;# 
   696  019B                     	;# 
   697  019B                     	;# 
   698  019C                     	;# 
   699  019C                     	;# 
   700  019C                     	;# 
   701  019D                     	;# 
   702  019D                     	;# 
   703  019D                     	;# 
   704  019E                     	;# 
   705  019E                     	;# 
   706  019E                     	;# 
   707  019F                     	;# 
   708  019F                     	;# 
   709  019F                     	;# 
   710  019F                     	;# 
   711  019F                     	;# 
   712  020C                     	;# 
   713  020D                     	;# 
   714  020E                     	;# 
   715  0210                     	;# 
   716  0211                     	;# 
   717  0211                     	;# 
   718  0212                     	;# 
   719  0212                     	;# 
   720  0213                     	;# 
   721  0213                     	;# 
   722  0214                     	;# 
   723  0214                     	;# 
   724  0215                     	;# 
   725  0215                     	;# 
   726  0215                     	;# 
   727  0215                     	;# 
   728  0216                     	;# 
   729  0216                     	;# 
   730  0217                     	;# 
   731  0217                     	;# 
   732  028C                     	;# 
   733  028D                     	;# 
   734  028E                     	;# 
   735  0291                     	;# 
   736  0291                     	;# 
   737  0292                     	;# 
   738  0293                     	;# 
   739  0293                     	;# 
   740  0298                     	;# 
   741  0298                     	;# 
   742  0299                     	;# 
   743  029A                     	;# 
   744  029A                     	;# 
   745  029E                     	;# 
   746  030C                     	;# 
   747  030D                     	;# 
   748  030E                     	;# 
   749  038C                     	;# 
   750  038D                     	;# 
   751  038E                     	;# 
   752  0390                     	;# 
   753  0391                     	;# 
   754  0392                     	;# 
   755  0393                     	;# 
   756  0394                     	;# 
   757  0395                     	;# 
   758  0396                     	;# 
   759  0397                     	;# 
   760  0398                     	;# 
   761  0399                     	;# 
   762  039D                     	;# 
   763  039E                     	;# 
   764  039F                     	;# 
   765  0415                     	;# 
   766  0416                     	;# 
   767  0417                     	;# 
   768  041C                     	;# 
   769  041D                     	;# 
   770  041E                     	;# 
   771  0498                     	;# 
   772  0498                     	;# 
   773  0499                     	;# 
   774  049A                     	;# 
   775  049B                     	;# 
   776  049B                     	;# 
   777  049C                     	;# 
   778  049D                     	;# 
   779  049E                     	;# 
   780  049F                     	;# 
   781  0511                     	;# 
   782  0515                     	;# 
   783  0617                     	;# 
   784  0618                     	;# 
   785  0619                     	;# 
   786  0619                     	;# 
   787  061A                     	;# 
   788  061B                     	;# 
   789  061C                     	;# 
   790  061C                     	;# 
   791  0691                     	;# 
   792  0692                     	;# 
   793  0693                     	;# 
   794  0694                     	;# 
   795  0695                     	;# 
   796  0696                     	;# 
   797  0697                     	;# 
   798  0698                     	;# 
   799  0699                     	;# 
   800  069A                     	;# 
   801  069B                     	;# 
   802  069C                     	;# 
   803  069D                     	;# 
   804  069E                     	;# 
   805  069F                     	;# 
   806  0E0F                     	;# 
   807  0E10                     	;# 
   808  0E11                     	;# 
   809  0E12                     	;# 
   810  0E13                     	;# 
   811  0E14                     	;# 
   812  0E15                     	;# 
   813  0E17                     	;# 
   814  0E20                     	;# 
   815  0E21                     	;# 
   816  0E22                     	;# 
   817  0E24                     	;# 
   818  0E25                     	;# 
   819  0E28                     	;# 
   820  0E29                     	;# 
   821  0E2A                     	;# 
   822  0E2B                     	;# 
   823  0E90                     	;# 
   824  0E91                     	;# 
   825  0E92                     	;# 
   826  0E93                     	;# 
   827  0E94                     	;# 
   828  0E95                     	;# 
   829  0E96                     	;# 
   830  0E97                     	;# 
   831  0E98                     	;# 
   832  0E99                     	;# 
   833  0E9A                     	;# 
   834  0E9B                     	;# 
   835  0E9C                     	;# 
   836  0E9D                     	;# 
   837  0E9E                     	;# 
   838  0E9F                     	;# 
   839  0EA0                     	;# 
   840  0EA1                     	;# 
   841  0EA2                     	;# 
   842  0EA3                     	;# 
   843  0EA4                     	;# 
   844  0EA5                     	;# 
   845  0EA6                     	;# 
   846  0EA7                     	;# 
   847  0F0F                     	;# 
   848  0F10                     	;# 
   849  0F11                     	;# 
   850  0F12                     	;# 
   851  0F13                     	;# 
   852  0F14                     	;# 
   853  0F15                     	;# 
   854  0F16                     	;# 
   855  0F17                     	;# 
   856  0F18                     	;# 
   857  0F19                     	;# 
   858  0F1A                     	;# 
   859  0F1B                     	;# 
   860  0F1C                     	;# 
   861  0F1D                     	;# 
   862  0F1E                     	;# 
   863  0F1F                     	;# 
   864  0F20                     	;# 
   865  0F21                     	;# 
   866  0F22                     	;# 
   867  0F23                     	;# 
   868  0F24                     	;# 
   869  0F25                     	;# 
   870  0F26                     	;# 
   871  0F27                     	;# 
   872  0F28                     	;# 
   873  0F29                     	;# 
   874  0F2A                     	;# 
   875  0F2B                     	;# 
   876  0F2C                     	;# 
   877  0F2D                     	;# 
   878  0F2E                     	;# 
   879  0F2F                     	;# 
   880  0F30                     	;# 
   881  0F31                     	;# 
   882  0F32                     	;# 
   883  0F33                     	;# 
   884  0F34                     	;# 
   885  0F35                     	;# 
   886  0F36                     	;# 
   887  0F37                     	;# 
   888  0FE4                     	;# 
   889  0FE5                     	;# 
   890  0FE6                     	;# 
   891  0FE7                     	;# 
   892  0FE8                     	;# 
   893  0FE9                     	;# 
   894  0FEA                     	;# 
   895  0FEB                     	;# 
   896  0FED                     	;# 
   897  0FEE                     	;# 
   898  0FEF                     	;# 
   899  0000                     	;# 
   900  0001                     	;# 
   901  0002                     	;# 
   902  0003                     	;# 
   903  0004                     	;# 
   904  0005                     	;# 
   905  0006                     	;# 
   906  0007                     	;# 
   907  0008                     	;# 
   908  0009                     	;# 
   909  000A                     	;# 
   910  000B                     	;# 
   911  000C                     	;# 
   912  000D                     	;# 
   913  000E                     	;# 
   914  0010                     	;# 
   915  0011                     	;# 
   916  0012                     	;# 
   917  0013                     	;# 
   918  0015                     	;# 
   919  0016                     	;# 
   920  0016                     	;# 
   921  0017                     	;# 
   922  0018                     	;# 
   923  0019                     	;# 
   924  001A                     	;# 
   925  001B                     	;# 
   926  001C                     	;# 
   927  008C                     	;# 
   928  008D                     	;# 
   929  008E                     	;# 
   930  0090                     	;# 
   931  0091                     	;# 
   932  0092                     	;# 
   933  0093                     	;# 
   934  0095                     	;# 
   935  0096                     	;# 
   936  0097                     	;# 
   937  0098                     	;# 
   938  0099                     	;# 
   939  009A                     	;# 
   940  009B                     	;# 
   941  009B                     	;# 
   942  009C                     	;# 
   943  009D                     	;# 
   944  009E                     	;# 
   945  009F                     	;# 
   946  010C                     	;# 
   947  010D                     	;# 
   948  010E                     	;# 
   949  0111                     	;# 
   950  0112                     	;# 
   951  0113                     	;# 
   952  0114                     	;# 
   953  0115                     	;# 
   954  0116                     	;# 
   955  0117                     	;# 
   956  0118                     	;# 
   957  0119                     	;# 
   958  011A                     	;# 
   959  011B                     	;# 
   960  011B                     	;# 
   961  011C                     	;# 
   962  018C                     	;# 
   963  018D                     	;# 
   964  018E                     	;# 
   965  0191                     	;# 
   966  0191                     	;# 
   967  0192                     	;# 
   968  0193                     	;# 
   969  0193                     	;# 
   970  0194                     	;# 
   971  0195                     	;# 
   972  0196                     	;# 
   973  0197                     	;# 
   974  0199                     	;# 
   975  0199                     	;# 
   976  0199                     	;# 
   977  019A                     	;# 
   978  019A                     	;# 
   979  019A                     	;# 
   980  019B                     	;# 
   981  019B                     	;# 
   982  019B                     	;# 
   983  019B                     	;# 
   984  019B                     	;# 
   985  019C                     	;# 
   986  019C                     	;# 
   987  019C                     	;# 
   988  019D                     	;# 
   989  019D                     	;# 
   990  019D                     	;# 
   991  019E                     	;# 
   992  019E                     	;# 
   993  019E                     	;# 
   994  019F                     	;# 
   995  019F                     	;# 
   996  019F                     	;# 
   997  019F                     	;# 
   998  019F                     	;# 
   999  020C                     	;# 
  1000  020D                     	;# 
  1001  020E                     	;# 
  1002  0210                     	;# 
  1003  0211                     	;# 
  1004  0211                     	;# 
  1005  0212                     	;# 
  1006  0212                     	;# 
  1007  0213                     	;# 
  1008  0213                     	;# 
  1009  0214                     	;# 
  1010  0214                     	;# 
  1011  0215                     	;# 
  1012  0215                     	;# 
  1013  0215                     	;# 
  1014  0215                     	;# 
  1015  0216                     	;# 
  1016  0216                     	;# 
  1017  0217                     	;# 
  1018  0217                     	;# 
  1019  028C                     	;# 
  1020  028D                     	;# 
  1021  028E                     	;# 
  1022  0291                     	;# 
  1023  0291                     	;# 
  1024  0292                     	;# 
  1025  0293                     	;# 
  1026  0293                     	;# 
  1027  0298                     	;# 
  1028  0298                     	;# 
  1029  0299                     	;# 
  1030  029A                     	;# 
  1031  029A                     	;# 
  1032  029E                     	;# 
  1033  030C                     	;# 
  1034  030D                     	;# 
  1035  030E                     	;# 
  1036  038C                     	;# 
  1037  038D                     	;# 
  1038  038E                     	;# 
  1039  0390                     	;# 
  1040  0391                     	;# 
  1041  0392                     	;# 
  1042  0393                     	;# 
  1043  0394                     	;# 
  1044  0395                     	;# 
  1045  0396                     	;# 
  1046  0397                     	;# 
  1047  0398                     	;# 
  1048  0399                     	;# 
  1049  039D                     	;# 
  1050  039E                     	;# 
  1051  039F                     	;# 
  1052  0415                     	;# 
  1053  0416                     	;# 
  1054  0417                     	;# 
  1055  041C                     	;# 
  1056  041D                     	;# 
  1057  041E                     	;# 
  1058  0498                     	;# 
  1059  0498                     	;# 
  1060  0499                     	;# 
  1061  049A                     	;# 
  1062  049B                     	;# 
  1063  049B                     	;# 
  1064  049C                     	;# 
  1065  049D                     	;# 
  1066  049E                     	;# 
  1067  049F                     	;# 
  1068  0511                     	;# 
  1069  0515                     	;# 
  1070  0617                     	;# 
  1071  0618                     	;# 
  1072  0619                     	;# 
  1073  0619                     	;# 
  1074  061A                     	;# 
  1075  061B                     	;# 
  1076  061C                     	;# 
  1077  061C                     	;# 
  1078  0691                     	;# 
  1079  0692                     	;# 
  1080  0693                     	;# 
  1081  0694                     	;# 
  1082  0695                     	;# 
  1083  0696                     	;# 
  1084  0697                     	;# 
  1085  0698                     	;# 
  1086  0699                     	;# 
  1087  069A                     	;# 
  1088  069B                     	;# 
  1089  069C                     	;# 
  1090  069D                     	;# 
  1091  069E                     	;# 
  1092  069F                     	;# 
  1093  0E0F                     	;# 
  1094  0E10                     	;# 
  1095  0E11                     	;# 
  1096  0E12                     	;# 
  1097  0E13                     	;# 
  1098  0E14                     	;# 
  1099  0E15                     	;# 
  1100  0E17                     	;# 
  1101  0E20                     	;# 
  1102  0E21                     	;# 
  1103  0E22                     	;# 
  1104  0E24                     	;# 
  1105  0E25                     	;# 
  1106  0E28                     	;# 
  1107  0E29                     	;# 
  1108  0E2A                     	;# 
  1109  0E2B                     	;# 
  1110  0E90                     	;# 
  1111  0E91                     	;# 
  1112  0E92                     	;# 
  1113  0E93                     	;# 
  1114  0E94                     	;# 
  1115  0E95                     	;# 
  1116  0E96                     	;# 
  1117  0E97                     	;# 
  1118  0E98                     	;# 
  1119  0E99                     	;# 
  1120  0E9A                     	;# 
  1121  0E9B                     	;# 
  1122  0E9C                     	;# 
  1123  0E9D                     	;# 
  1124  0E9E                     	;# 
  1125  0E9F                     	;# 
  1126  0EA0                     	;# 
  1127  0EA1                     	;# 
  1128  0EA2                     	;# 
  1129  0EA3                     	;# 
  1130  0EA4                     	;# 
  1131  0EA5                     	;# 
  1132  0EA6                     	;# 
  1133  0EA7                     	;# 
  1134  0F0F                     	;# 
  1135  0F10                     	;# 
  1136  0F11                     	;# 
  1137  0F12                     	;# 
  1138  0F13                     	;# 
  1139  0F14                     	;# 
  1140  0F15                     	;# 
  1141  0F16                     	;# 
  1142  0F17                     	;# 
  1143  0F18                     	;# 
  1144  0F19                     	;# 
  1145  0F1A                     	;# 
  1146  0F1B                     	;# 
  1147  0F1C                     	;# 
  1148  0F1D                     	;# 
  1149  0F1E                     	;# 
  1150  0F1F                     	;# 
  1151  0F20                     	;# 
  1152  0F21                     	;# 
  1153  0F22                     	;# 
  1154  0F23                     	;# 
  1155  0F24                     	;# 
  1156  0F25                     	;# 
  1157  0F26                     	;# 
  1158  0F27                     	;# 
  1159  0F28                     	;# 
  1160  0F29                     	;# 
  1161  0F2A                     	;# 
  1162  0F2B                     	;# 
  1163  0F2C                     	;# 
  1164  0F2D                     	;# 
  1165  0F2E                     	;# 
  1166  0F2F                     	;# 
  1167  0F30                     	;# 
  1168  0F31                     	;# 
  1169  0F32                     	;# 
  1170  0F33                     	;# 
  1171  0F34                     	;# 
  1172  0F35                     	;# 
  1173  0F36                     	;# 
  1174  0F37                     	;# 
  1175  0FE4                     	;# 
  1176  0FE5                     	;# 
  1177  0FE6                     	;# 
  1178  0FE7                     	;# 
  1179  0FE8                     	;# 
  1180  0FE9                     	;# 
  1181  0FEA                     	;# 
  1182  0FEB                     	;# 
  1183  0FED                     	;# 
  1184  0FEE                     	;# 
  1185  0FEF                     	;# 
  1186  0000                     	;# 
  1187  0001                     	;# 
  1188  0002                     	;# 
  1189  0003                     	;# 
  1190  0004                     	;# 
  1191  0005                     	;# 
  1192  0006                     	;# 
  1193  0007                     	;# 
  1194  0008                     	;# 
  1195  0009                     	;# 
  1196  000A                     	;# 
  1197  000B                     	;# 
  1198  000C                     	;# 
  1199  000D                     	;# 
  1200  000E                     	;# 
  1201  0010                     	;# 
  1202  0011                     	;# 
  1203  0012                     	;# 
  1204  0013                     	;# 
  1205  0015                     	;# 
  1206  0016                     	;# 
  1207  0016                     	;# 
  1208  0017                     	;# 
  1209  0018                     	;# 
  1210  0019                     	;# 
  1211  001A                     	;# 
  1212  001B                     	;# 
  1213  001C                     	;# 
  1214  008C                     	;# 
  1215  008D                     	;# 
  1216  008E                     	;# 
  1217  0090                     	;# 
  1218  0091                     	;# 
  1219  0092                     	;# 
  1220  0093                     	;# 
  1221  0095                     	;# 
  1222  0096                     	;# 
  1223  0097                     	;# 
  1224  0098                     	;# 
  1225  0099                     	;# 
  1226  009A                     	;# 
  1227  009B                     	;# 
  1228  009B                     	;# 
  1229  009C                     	;# 
  1230  009D                     	;# 
  1231  009E                     	;# 
  1232  009F                     	;# 
  1233  010C                     	;# 
  1234  010D                     	;# 
  1235  010E                     	;# 
  1236  0111                     	;# 
  1237  0112                     	;# 
  1238  0113                     	;# 
  1239  0114                     	;# 
  1240  0115                     	;# 
  1241  0116                     	;# 
  1242  0117                     	;# 
  1243  0118                     	;# 
  1244  0119                     	;# 
  1245  011A                     	;# 
  1246  011B                     	;# 
  1247  011B                     	;# 
  1248  011C                     	;# 
  1249  018C                     	;# 
  1250  018D                     	;# 
  1251  018E                     	;# 
  1252  0191                     	;# 
  1253  0191                     	;# 
  1254  0192                     	;# 
  1255  0193                     	;# 
  1256  0193                     	;# 
  1257  0194                     	;# 
  1258  0195                     	;# 
  1259  0196                     	;# 
  1260  0197                     	;# 
  1261  0199                     	;# 
  1262  0199                     	;# 
  1263  0199                     	;# 
  1264  019A                     	;# 
  1265  019A                     	;# 
  1266  019A                     	;# 
  1267  019B                     	;# 
  1268  019B                     	;# 
  1269  019B                     	;# 
  1270  019B                     	;# 
  1271  019B                     	;# 
  1272  019C                     	;# 
  1273  019C                     	;# 
  1274  019C                     	;# 
  1275  019D                     	;# 
  1276  019D                     	;# 
  1277  019D                     	;# 
  1278  019E                     	;# 
  1279  019E                     	;# 
  1280  019E                     	;# 
  1281  019F                     	;# 
  1282  019F                     	;# 
  1283  019F                     	;# 
  1284  019F                     	;# 
  1285  019F                     	;# 
  1286  020C                     	;# 
  1287  020D                     	;# 
  1288  020E                     	;# 
  1289  0210                     	;# 
  1290  0211                     	;# 
  1291  0211                     	;# 
  1292  0212                     	;# 
  1293  0212                     	;# 
  1294  0213                     	;# 
  1295  0213                     	;# 
  1296  0214                     	;# 
  1297  0214                     	;# 
  1298  0215                     	;# 
  1299  0215                     	;# 
  1300  0215                     	;# 
  1301  0215                     	;# 
  1302  0216                     	;# 
  1303  0216                     	;# 
  1304  0217                     	;# 
  1305  0217                     	;# 
  1306  028C                     	;# 
  1307  028D                     	;# 
  1308  028E                     	;# 
  1309  0291                     	;# 
  1310  0291                     	;# 
  1311  0292                     	;# 
  1312  0293                     	;# 
  1313  0293                     	;# 
  1314  0298                     	;# 
  1315  0298                     	;# 
  1316  0299                     	;# 
  1317  029A                     	;# 
  1318  029A                     	;# 
  1319  029E                     	;# 
  1320  030C                     	;# 
  1321  030D                     	;# 
  1322  030E                     	;# 
  1323  038C                     	;# 
  1324  038D                     	;# 
  1325  038E                     	;# 
  1326  0390                     	;# 
  1327  0391                     	;# 
  1328  0392                     	;# 
  1329  0393                     	;# 
  1330  0394                     	;# 
  1331  0395                     	;# 
  1332  0396                     	;# 
  1333  0397                     	;# 
  1334  0398                     	;# 
  1335  0399                     	;# 
  1336  039D                     	;# 
  1337  039E                     	;# 
  1338  039F                     	;# 
  1339  0415                     	;# 
  1340  0416                     	;# 
  1341  0417                     	;# 
  1342  041C                     	;# 
  1343  041D                     	;# 
  1344  041E                     	;# 
  1345  0498                     	;# 
  1346  0498                     	;# 
  1347  0499                     	;# 
  1348  049A                     	;# 
  1349  049B                     	;# 
  1350  049B                     	;# 
  1351  049C                     	;# 
  1352  049D                     	;# 
  1353  049E                     	;# 
  1354  049F                     	;# 
  1355  0511                     	;# 
  1356  0515                     	;# 
  1357  0617                     	;# 
  1358  0618                     	;# 
  1359  0619                     	;# 
  1360  0619                     	;# 
  1361  061A                     	;# 
  1362  061B                     	;# 
  1363  061C                     	;# 
  1364  061C                     	;# 
  1365  0691                     	;# 
  1366  0692                     	;# 
  1367  0693                     	;# 
  1368  0694                     	;# 
  1369  0695                     	;# 
  1370  0696                     	;# 
  1371  0697                     	;# 
  1372  0698                     	;# 
  1373  0699                     	;# 
  1374  069A                     	;# 
  1375  069B                     	;# 
  1376  069C                     	;# 
  1377  069D                     	;# 
  1378  069E                     	;# 
  1379  069F                     	;# 
  1380  0E0F                     	;# 
  1381  0E10                     	;# 
  1382  0E11                     	;# 
  1383  0E12                     	;# 
  1384  0E13                     	;# 
  1385  0E14                     	;# 
  1386  0E15                     	;# 
  1387  0E17                     	;# 
  1388  0E20                     	;# 
  1389  0E21                     	;# 
  1390  0E22                     	;# 
  1391  0E24                     	;# 
  1392  0E25                     	;# 
  1393  0E28                     	;# 
  1394  0E29                     	;# 
  1395  0E2A                     	;# 
  1396  0E2B                     	;# 
  1397  0E90                     	;# 
  1398  0E91                     	;# 
  1399  0E92                     	;# 
  1400  0E93                     	;# 
  1401  0E94                     	;# 
  1402  0E95                     	;# 
  1403  0E96                     	;# 
  1404  0E97                     	;# 
  1405  0E98                     	;# 
  1406  0E99                     	;# 
  1407  0E9A                     	;# 
  1408  0E9B                     	;# 
  1409  0E9C                     	;# 
  1410  0E9D                     	;# 
  1411  0E9E                     	;# 
  1412  0E9F                     	;# 
  1413  0EA0                     	;# 
  1414  0EA1                     	;# 
  1415  0EA2                     	;# 
  1416  0EA3                     	;# 
  1417  0EA4                     	;# 
  1418  0EA5                     	;# 
  1419  0EA6                     	;# 
  1420  0EA7                     	;# 
  1421  0F0F                     	;# 
  1422  0F10                     	;# 
  1423  0F11                     	;# 
  1424  0F12                     	;# 
  1425  0F13                     	;# 
  1426  0F14                     	;# 
  1427  0F15                     	;# 
  1428  0F16                     	;# 
  1429  0F17                     	;# 
  1430  0F18                     	;# 
  1431  0F19                     	;# 
  1432  0F1A                     	;# 
  1433  0F1B                     	;# 
  1434  0F1C                     	;# 
  1435  0F1D                     	;# 
  1436  0F1E                     	;# 
  1437  0F1F                     	;# 
  1438  0F20                     	;# 
  1439  0F21                     	;# 
  1440  0F22                     	;# 
  1441  0F23                     	;# 
  1442  0F24                     	;# 
  1443  0F25                     	;# 
  1444  0F26                     	;# 
  1445  0F27                     	;# 
  1446  0F28                     	;# 
  1447  0F29                     	;# 
  1448  0F2A                     	;# 
  1449  0F2B                     	;# 
  1450  0F2C                     	;# 
  1451  0F2D                     	;# 
  1452  0F2E                     	;# 
  1453  0F2F                     	;# 
  1454  0F30                     	;# 
  1455  0F31                     	;# 
  1456  0F32                     	;# 
  1457  0F33                     	;# 
  1458  0F34                     	;# 
  1459  0F35                     	;# 
  1460  0F36                     	;# 
  1461  0F37                     	;# 
  1462  0FE4                     	;# 
  1463  0FE5                     	;# 
  1464  0FE6                     	;# 
  1465  0FE7                     	;# 
  1466  0FE8                     	;# 
  1467  0FE9                     	;# 
  1468  0FEA                     	;# 
  1469  0FEB                     	;# 
  1470  0FED                     	;# 
  1471  0FEE                     	;# 
  1472  0FEF                     	;# 
  1473  0000                     	;# 
  1474  0001                     	;# 
  1475  0002                     	;# 
  1476  0003                     	;# 
  1477  0004                     	;# 
  1478  0005                     	;# 
  1479  0006                     	;# 
  1480  0007                     	;# 
  1481  0008                     	;# 
  1482  0009                     	;# 
  1483  000A                     	;# 
  1484  000B                     	;# 
  1485  000C                     	;# 
  1486  000D                     	;# 
  1487  000E                     	;# 
  1488  0010                     	;# 
  1489  0011                     	;# 
  1490  0012                     	;# 
  1491  0013                     	;# 
  1492  0015                     	;# 
  1493  0016                     	;# 
  1494  0016                     	;# 
  1495  0017                     	;# 
  1496  0018                     	;# 
  1497  0019                     	;# 
  1498  001A                     	;# 
  1499  001B                     	;# 
  1500  001C                     	;# 
  1501  008C                     	;# 
  1502  008D                     	;# 
  1503  008E                     	;# 
  1504  0090                     	;# 
  1505  0091                     	;# 
  1506  0092                     	;# 
  1507  0093                     	;# 
  1508  0095                     	;# 
  1509  0096                     	;# 
  1510  0097                     	;# 
  1511  0098                     	;# 
  1512  0099                     	;# 
  1513  009A                     	;# 
  1514  009B                     	;# 
  1515  009B                     	;# 
  1516  009C                     	;# 
  1517  009D                     	;# 
  1518  009E                     	;# 
  1519  009F                     	;# 
  1520  010C                     	;# 
  1521  010D                     	;# 
  1522  010E                     	;# 
  1523  0111                     	;# 
  1524  0112                     	;# 
  1525  0113                     	;# 
  1526  0114                     	;# 
  1527  0115                     	;# 
  1528  0116                     	;# 
  1529  0117                     	;# 
  1530  0118                     	;# 
  1531  0119                     	;# 
  1532  011A                     	;# 
  1533  011B                     	;# 
  1534  011B                     	;# 
  1535  011C                     	;# 
  1536  018C                     	;# 
  1537  018D                     	;# 
  1538  018E                     	;# 
  1539  0191                     	;# 
  1540  0191                     	;# 
  1541  0192                     	;# 
  1542  0193                     	;# 
  1543  0193                     	;# 
  1544  0194                     	;# 
  1545  0195                     	;# 
  1546  0196                     	;# 
  1547  0197                     	;# 
  1548  0199                     	;# 
  1549  0199                     	;# 
  1550  0199                     	;# 
  1551  019A                     	;# 
  1552  019A                     	;# 
  1553  019A                     	;# 
  1554  019B                     	;# 
  1555  019B                     	;# 
  1556  019B                     	;# 
  1557  019B                     	;# 
  1558  019B                     	;# 
  1559  019C                     	;# 
  1560  019C                     	;# 
  1561  019C                     	;# 
  1562  019D                     	;# 
  1563  019D                     	;# 
  1564  019D                     	;# 
  1565  019E                     	;# 
  1566  019E                     	;# 
  1567  019E                     	;# 
  1568  019F                     	;# 
  1569  019F                     	;# 
  1570  019F                     	;# 
  1571  019F                     	;# 
  1572  019F                     	;# 
  1573  020C                     	;# 
  1574  020D                     	;# 
  1575  020E                     	;# 
  1576  0210                     	;# 
  1577  0211                     	;# 
  1578  0211                     	;# 
  1579  0212                     	;# 
  1580  0212                     	;# 
  1581  0213                     	;# 
  1582  0213                     	;# 
  1583  0214                     	;# 
  1584  0214                     	;# 
  1585  0215                     	;# 
  1586  0215                     	;# 
  1587  0215                     	;# 
  1588  0215                     	;# 
  1589  0216                     	;# 
  1590  0216                     	;# 
  1591  0217                     	;# 
  1592  0217                     	;# 
  1593  028C                     	;# 
  1594  028D                     	;# 
  1595  028E                     	;# 
  1596  0291                     	;# 
  1597  0291                     	;# 
  1598  0292                     	;# 
  1599  0293                     	;# 
  1600  0293                     	;# 
  1601  0298                     	;# 
  1602  0298                     	;# 
  1603  0299                     	;# 
  1604  029A                     	;# 
  1605  029A                     	;# 
  1606  029E                     	;# 
  1607  030C                     	;# 
  1608  030D                     	;# 
  1609  030E                     	;# 
  1610  038C                     	;# 
  1611  038D                     	;# 
  1612  038E                     	;# 
  1613  0390                     	;# 
  1614  0391                     	;# 
  1615  0392                     	;# 
  1616  0393                     	;# 
  1617  0394                     	;# 
  1618  0395                     	;# 
  1619  0396                     	;# 
  1620  0397                     	;# 
  1621  0398                     	;# 
  1622  0399                     	;# 
  1623  039D                     	;# 
  1624  039E                     	;# 
  1625  039F                     	;# 
  1626  0415                     	;# 
  1627  0416                     	;# 
  1628  0417                     	;# 
  1629  041C                     	;# 
  1630  041D                     	;# 
  1631  041E                     	;# 
  1632  0498                     	;# 
  1633  0498                     	;# 
  1634  0499                     	;# 
  1635  049A                     	;# 
  1636  049B                     	;# 
  1637  049B                     	;# 
  1638  049C                     	;# 
  1639  049D                     	;# 
  1640  049E                     	;# 
  1641  049F                     	;# 
  1642  0511                     	;# 
  1643  0515                     	;# 
  1644  0617                     	;# 
  1645  0618                     	;# 
  1646  0619                     	;# 
  1647  0619                     	;# 
  1648  061A                     	;# 
  1649  061B                     	;# 
  1650  061C                     	;# 
  1651  061C                     	;# 
  1652  0691                     	;# 
  1653  0692                     	;# 
  1654  0693                     	;# 
  1655  0694                     	;# 
  1656  0695                     	;# 
  1657  0696                     	;# 
  1658  0697                     	;# 
  1659  0698                     	;# 
  1660  0699                     	;# 
  1661  069A                     	;# 
  1662  069B                     	;# 
  1663  069C                     	;# 
  1664  069D                     	;# 
  1665  069E                     	;# 
  1666  069F                     	;# 
  1667  0E0F                     	;# 
  1668  0E10                     	;# 
  1669  0E11                     	;# 
  1670  0E12                     	;# 
  1671  0E13                     	;# 
  1672  0E14                     	;# 
  1673  0E15                     	;# 
  1674  0E17                     	;# 
  1675  0E20                     	;# 
  1676  0E21                     	;# 
  1677  0E22                     	;# 
  1678  0E24                     	;# 
  1679  0E25                     	;# 
  1680  0E28                     	;# 
  1681  0E29                     	;# 
  1682  0E2A                     	;# 
  1683  0E2B                     	;# 
  1684  0E90                     	;# 
  1685  0E91                     	;# 
  1686  0E92                     	;# 
  1687  0E93                     	;# 
  1688  0E94                     	;# 
  1689  0E95                     	;# 
  1690  0E96                     	;# 
  1691  0E97                     	;# 
  1692  0E98                     	;# 
  1693  0E99                     	;# 
  1694  0E9A                     	;# 
  1695  0E9B                     	;# 
  1696  0E9C                     	;# 
  1697  0E9D                     	;# 
  1698  0E9E                     	;# 
  1699  0E9F                     	;# 
  1700  0EA0                     	;# 
  1701  0EA1                     	;# 
  1702  0EA2                     	;# 
  1703  0EA3                     	;# 
  1704  0EA4                     	;# 
  1705  0EA5                     	;# 
  1706  0EA6                     	;# 
  1707  0EA7                     	;# 
  1708  0F0F                     	;# 
  1709  0F10                     	;# 
  1710  0F11                     	;# 
  1711  0F12                     	;# 
  1712  0F13                     	;# 
  1713  0F14                     	;# 
  1714  0F15                     	;# 
  1715  0F16                     	;# 
  1716  0F17                     	;# 
  1717  0F18                     	;# 
  1718  0F19                     	;# 
  1719  0F1A                     	;# 
  1720  0F1B                     	;# 
  1721  0F1C                     	;# 
  1722  0F1D                     	;# 
  1723  0F1E                     	;# 
  1724  0F1F                     	;# 
  1725  0F20                     	;# 
  1726  0F21                     	;# 
  1727  0F22                     	;# 
  1728  0F23                     	;# 
  1729  0F24                     	;# 
  1730  0F25                     	;# 
  1731  0F26                     	;# 
  1732  0F27                     	;# 
  1733  0F28                     	;# 
  1734  0F29                     	;# 
  1735  0F2A                     	;# 
  1736  0F2B                     	;# 
  1737  0F2C                     	;# 
  1738  0F2D                     	;# 
  1739  0F2E                     	;# 
  1740  0F2F                     	;# 
  1741  0F30                     	;# 
  1742  0F31                     	;# 
  1743  0F32                     	;# 
  1744  0F33                     	;# 
  1745  0F34                     	;# 
  1746  0F35                     	;# 
  1747  0F36                     	;# 
  1748  0F37                     	;# 
  1749  0FE4                     	;# 
  1750  0FE5                     	;# 
  1751  0FE6                     	;# 
  1752  0FE7                     	;# 
  1753  0FE8                     	;# 
  1754  0FE9                     	;# 
  1755  0FEA                     	;# 
  1756  0FEB                     	;# 
  1757  0FED                     	;# 
  1758  0FEE                     	;# 
  1759  0FEF                     	;# 
  1760  0000                     	;# 
  1761  0001                     	;# 
  1762  0002                     	;# 
  1763  0003                     	;# 
  1764  0004                     	;# 
  1765  0005                     	;# 
  1766  0006                     	;# 
  1767  0007                     	;# 
  1768  0008                     	;# 
  1769  0009                     	;# 
  1770  000A                     	;# 
  1771  000B                     	;# 
  1772  000C                     	;# 
  1773  000D                     	;# 
  1774  000E                     	;# 
  1775  0010                     	;# 
  1776  0011                     	;# 
  1777  0012                     	;# 
  1778  0013                     	;# 
  1779  0015                     	;# 
  1780  0016                     	;# 
  1781  0016                     	;# 
  1782  0017                     	;# 
  1783  0018                     	;# 
  1784  0019                     	;# 
  1785  001A                     	;# 
  1786  001B                     	;# 
  1787  001C                     	;# 
  1788  008C                     	;# 
  1789  008D                     	;# 
  1790  008E                     	;# 
  1791  0090                     	;# 
  1792  0091                     	;# 
  1793  0092                     	;# 
  1794  0093                     	;# 
  1795  0095                     	;# 
  1796  0096                     	;# 
  1797  0097                     	;# 
  1798  0098                     	;# 
  1799  0099                     	;# 
  1800  009A                     	;# 
  1801  009B                     	;# 
  1802  009B                     	;# 
  1803  009C                     	;# 
  1804  009D                     	;# 
  1805  009E                     	;# 
  1806  009F                     	;# 
  1807  010C                     	;# 
  1808  010D                     	;# 
  1809  010E                     	;# 
  1810  0111                     	;# 
  1811  0112                     	;# 
  1812  0113                     	;# 
  1813  0114                     	;# 
  1814  0115                     	;# 
  1815  0116                     	;# 
  1816  0117                     	;# 
  1817  0118                     	;# 
  1818  0119                     	;# 
  1819  011A                     	;# 
  1820  011B                     	;# 
  1821  011B                     	;# 
  1822  011C                     	;# 
  1823  018C                     	;# 
  1824  018D                     	;# 
  1825  018E                     	;# 
  1826  0191                     	;# 
  1827  0191                     	;# 
  1828  0192                     	;# 
  1829  0193                     	;# 
  1830  0193                     	;# 
  1831  0194                     	;# 
  1832  0195                     	;# 
  1833  0196                     	;# 
  1834  0197                     	;# 
  1835  0199                     	;# 
  1836  0199                     	;# 
  1837  0199                     	;# 
  1838  019A                     	;# 
  1839  019A                     	;# 
  1840  019A                     	;# 
  1841  019B                     	;# 
  1842  019B                     	;# 
  1843  019B                     	;# 
  1844  019B                     	;# 
  1845  019B                     	;# 
  1846  019C                     	;# 
  1847  019C                     	;# 
  1848  019C                     	;# 
  1849  019D                     	;# 
  1850  019D                     	;# 
  1851  019D                     	;# 
  1852  019E                     	;# 
  1853  019E                     	;# 
  1854  019E                     	;# 
  1855  019F                     	;# 
  1856  019F                     	;# 
  1857  019F                     	;# 
  1858  019F                     	;# 
  1859  019F                     	;# 
  1860  020C                     	;# 
  1861  020D                     	;# 
  1862  020E                     	;# 
  1863  0210                     	;# 
  1864  0211                     	;# 
  1865  0211                     	;# 
  1866  0212                     	;# 
  1867  0212                     	;# 
  1868  0213                     	;# 
  1869  0213                     	;# 
  1870  0214                     	;# 
  1871  0214                     	;# 
  1872  0215                     	;# 
  1873  0215                     	;# 
  1874  0215                     	;# 
  1875  0215                     	;# 
  1876  0216                     	;# 
  1877  0216                     	;# 
  1878  0217                     	;# 
  1879  0217                     	;# 
  1880  028C                     	;# 
  1881  028D                     	;# 
  1882  028E                     	;# 
  1883  0291                     	;# 
  1884  0291                     	;# 
  1885  0292                     	;# 
  1886  0293                     	;# 
  1887  0293                     	;# 
  1888  0298                     	;# 
  1889  0298                     	;# 
  1890  0299                     	;# 
  1891  029A                     	;# 
  1892  029A                     	;# 
  1893  029E                     	;# 
  1894  030C                     	;# 
  1895  030D                     	;# 
  1896  030E                     	;# 
  1897  038C                     	;# 
  1898  038D                     	;# 
  1899  038E                     	;# 
  1900  0390                     	;# 
  1901  0391                     	;# 
  1902  0392                     	;# 
  1903  0393                     	;# 
  1904  0394                     	;# 
  1905  0395                     	;# 
  1906  0396                     	;# 
  1907  0397                     	;# 
  1908  0398                     	;# 
  1909  0399                     	;# 
  1910  039D                     	;# 
  1911  039E                     	;# 
  1912  039F                     	;# 
  1913  0415                     	;# 
  1914  0416                     	;# 
  1915  0417                     	;# 
  1916  041C                     	;# 
  1917  041D                     	;# 
  1918  041E                     	;# 
  1919  0498                     	;# 
  1920  0498                     	;# 
  1921  0499                     	;# 
  1922  049A                     	;# 
  1923  049B                     	;# 
  1924  049B                     	;# 
  1925  049C                     	;# 
  1926  049D                     	;# 
  1927  049E                     	;# 
  1928  049F                     	;# 
  1929  0511                     	;# 
  1930  0515                     	;# 
  1931  0617                     	;# 
  1932  0618                     	;# 
  1933  0619                     	;# 
  1934  0619                     	;# 
  1935  061A                     	;# 
  1936  061B                     	;# 
  1937  061C                     	;# 
  1938  061C                     	;# 
  1939  0691                     	;# 
  1940  0692                     	;# 
  1941  0693                     	;# 
  1942  0694                     	;# 
  1943  0695                     	;# 
  1944  0696                     	;# 
  1945  0697                     	;# 
  1946  0698                     	;# 
  1947  0699                     	;# 
  1948  069A                     	;# 
  1949  069B                     	;# 
  1950  069C                     	;# 
  1951  069D                     	;# 
  1952  069E                     	;# 
  1953  069F                     	;# 
  1954  0E0F                     	;# 
  1955  0E10                     	;# 
  1956  0E11                     	;# 
  1957  0E12                     	;# 
  1958  0E13                     	;# 
  1959  0E14                     	;# 
  1960  0E15                     	;# 
  1961  0E17                     	;# 
  1962  0E20                     	;# 
  1963  0E21                     	;# 
  1964  0E22                     	;# 
  1965  0E24                     	;# 
  1966  0E25                     	;# 
  1967  0E28                     	;# 
  1968  0E29                     	;# 
  1969  0E2A                     	;# 
  1970  0E2B                     	;# 
  1971  0E90                     	;# 
  1972  0E91                     	;# 
  1973  0E92                     	;# 
  1974  0E93                     	;# 
  1975  0E94                     	;# 
  1976  0E95                     	;# 
  1977  0E96                     	;# 
  1978  0E97                     	;# 
  1979  0E98                     	;# 
  1980  0E99                     	;# 
  1981  0E9A                     	;# 
  1982  0E9B                     	;# 
  1983  0E9C                     	;# 
  1984  0E9D                     	;# 
  1985  0E9E                     	;# 
  1986  0E9F                     	;# 
  1987  0EA0                     	;# 
  1988  0EA1                     	;# 
  1989  0EA2                     	;# 
  1990  0EA3                     	;# 
  1991  0EA4                     	;# 
  1992  0EA5                     	;# 
  1993  0EA6                     	;# 
  1994  0EA7                     	;# 
  1995  0F0F                     	;# 
  1996  0F10                     	;# 
  1997  0F11                     	;# 
  1998  0F12                     	;# 
  1999  0F13                     	;# 
  2000  0F14                     	;# 
  2001  0F15                     	;# 
  2002  0F16                     	;# 
  2003  0F17                     	;# 
  2004  0F18                     	;# 
  2005  0F19                     	;# 
  2006  0F1A                     	;# 
  2007  0F1B                     	;# 
  2008  0F1C                     	;# 
  2009  0F1D                     	;# 
  2010  0F1E                     	;# 
  2011  0F1F                     	;# 
  2012  0F20                     	;# 
  2013  0F21                     	;# 
  2014  0F22                     	;# 
  2015  0F23                     	;# 
  2016  0F24                     	;# 
  2017  0F25                     	;# 
  2018  0F26                     	;# 
  2019  0F27                     	;# 
  2020  0F28                     	;# 
  2021  0F29                     	;# 
  2022  0F2A                     	;# 
  2023  0F2B                     	;# 
  2024  0F2C                     	;# 
  2025  0F2D                     	;# 
  2026  0F2E                     	;# 
  2027  0F2F                     	;# 
  2028  0F30                     	;# 
  2029  0F31                     	;# 
  2030  0F32                     	;# 
  2031  0F33                     	;# 
  2032  0F34                     	;# 
  2033  0F35                     	;# 
  2034  0F36                     	;# 
  2035  0F37                     	;# 
  2036  0FE4                     	;# 
  2037  0FE5                     	;# 
  2038  0FE6                     	;# 
  2039  0FE7                     	;# 
  2040  0FE8                     	;# 
  2041  0FE9                     	;# 
  2042  0FEA                     	;# 
  2043  0FEB                     	;# 
  2044  0FED                     	;# 
  2045  0FEE                     	;# 
  2046  0FEF                     	;# 
  2047  0000                     	;# 
  2048  0001                     	;# 
  2049  0002                     	;# 
  2050  0003                     	;# 
  2051  0004                     	;# 
  2052  0005                     	;# 
  2053  0006                     	;# 
  2054  0007                     	;# 
  2055  0008                     	;# 
  2056  0009                     	;# 
  2057  000A                     	;# 
  2058  000B                     	;# 
  2059  000C                     	;# 
  2060  000D                     	;# 
  2061  000E                     	;# 
  2062  0010                     	;# 
  2063  0011                     	;# 
  2064  0012                     	;# 
  2065  0013                     	;# 
  2066  0015                     	;# 
  2067  0016                     	;# 
  2068  0016                     	;# 
  2069  0017                     	;# 
  2070  0018                     	;# 
  2071  0019                     	;# 
  2072  001A                     	;# 
  2073  001B                     	;# 
  2074  001C                     	;# 
  2075  008C                     	;# 
  2076  008D                     	;# 
  2077  008E                     	;# 
  2078  0090                     	;# 
  2079  0091                     	;# 
  2080  0092                     	;# 
  2081  0093                     	;# 
  2082  0095                     	;# 
  2083  0096                     	;# 
  2084  0097                     	;# 
  2085  0098                     	;# 
  2086  0099                     	;# 
  2087  009A                     	;# 
  2088  009B                     	;# 
  2089  009B                     	;# 
  2090  009C                     	;# 
  2091  009D                     	;# 
  2092  009E                     	;# 
  2093  009F                     	;# 
  2094  010C                     	;# 
  2095  010D                     	;# 
  2096  010E                     	;# 
  2097  0111                     	;# 
  2098  0112                     	;# 
  2099  0113                     	;# 
  2100  0114                     	;# 
  2101  0115                     	;# 
  2102  0116                     	;# 
  2103  0117                     	;# 
  2104  0118                     	;# 
  2105  0119                     	;# 
  2106  011A                     	;# 
  2107  011B                     	;# 
  2108  011B                     	;# 
  2109  011C                     	;# 
  2110  018C                     	;# 
  2111  018D                     	;# 
  2112  018E                     	;# 
  2113  0191                     	;# 
  2114  0191                     	;# 
  2115  0192                     	;# 
  2116  0193                     	;# 
  2117  0193                     	;# 
  2118  0194                     	;# 
  2119  0195                     	;# 
  2120  0196                     	;# 
  2121  0197                     	;# 
  2122  0199                     	;# 
  2123  0199                     	;# 
  2124  0199                     	;# 
  2125  019A                     	;# 
  2126  019A                     	;# 
  2127  019A                     	;# 
  2128  019B                     	;# 
  2129  019B                     	;# 
  2130  019B                     	;# 
  2131  019B                     	;# 
  2132  019B                     	;# 
  2133  019C                     	;# 
  2134  019C                     	;# 
  2135  019C                     	;# 
  2136  019D                     	;# 
  2137  019D                     	;# 
  2138  019D                     	;# 
  2139  019E                     	;# 
  2140  019E                     	;# 
  2141  019E                     	;# 
  2142  019F                     	;# 
  2143  019F                     	;# 
  2144  019F                     	;# 
  2145  019F                     	;# 
  2146  019F                     	;# 
  2147  020C                     	;# 
  2148  020D                     	;# 
  2149  020E                     	;# 
  2150  0210                     	;# 
  2151  0211                     	;# 
  2152  0211                     	;# 
  2153  0212                     	;# 
  2154  0212                     	;# 
  2155  0213                     	;# 
  2156  0213                     	;# 
  2157  0214                     	;# 
  2158  0214                     	;# 
  2159  0215                     	;# 
  2160  0215                     	;# 
  2161  0215                     	;# 
  2162  0215                     	;# 
  2163  0216                     	;# 
  2164  0216                     	;# 
  2165  0217                     	;# 
  2166  0217                     	;# 
  2167  028C                     	;# 
  2168  028D                     	;# 
  2169  028E                     	;# 
  2170  0291                     	;# 
  2171  0291                     	;# 
  2172  0292                     	;# 
  2173  0293                     	;# 
  2174  0293                     	;# 
  2175  0298                     	;# 
  2176  0298                     	;# 
  2177  0299                     	;# 
  2178  029A                     	;# 
  2179  029A                     	;# 
  2180  029E                     	;# 
  2181  030C                     	;# 
  2182  030D                     	;# 
  2183  030E                     	;# 
  2184  038C                     	;# 
  2185  038D                     	;# 
  2186  038E                     	;# 
  2187  0390                     	;# 
  2188  0391                     	;# 
  2189  0392                     	;# 
  2190  0393                     	;# 
  2191  0394                     	;# 
  2192  0395                     	;# 
  2193  0396                     	;# 
  2194  0397                     	;# 
  2195  0398                     	;# 
  2196  0399                     	;# 
  2197  039D                     	;# 
  2198  039E                     	;# 
  2199  039F                     	;# 
  2200  0415                     	;# 
  2201  0416                     	;# 
  2202  0417                     	;# 
  2203  041C                     	;# 
  2204  041D                     	;# 
  2205  041E                     	;# 
  2206  0498                     	;# 
  2207  0498                     	;# 
  2208  0499                     	;# 
  2209  049A                     	;# 
  2210  049B                     	;# 
  2211  049B                     	;# 
  2212  049C                     	;# 
  2213  049D                     	;# 
  2214  049E                     	;# 
  2215  049F                     	;# 
  2216  0511                     	;# 
  2217  0515                     	;# 
  2218  0617                     	;# 
  2219  0618                     	;# 
  2220  0619                     	;# 
  2221  0619                     	;# 
  2222  061A                     	;# 
  2223  061B                     	;# 
  2224  061C                     	;# 
  2225  061C                     	;# 
  2226  0691                     	;# 
  2227  0692                     	;# 
  2228  0693                     	;# 
  2229  0694                     	;# 
  2230  0695                     	;# 
  2231  0696                     	;# 
  2232  0697                     	;# 
  2233  0698                     	;# 
  2234  0699                     	;# 
  2235  069A                     	;# 
  2236  069B                     	;# 
  2237  069C                     	;# 
  2238  069D                     	;# 
  2239  069E                     	;# 
  2240  069F                     	;# 
  2241  0E0F                     	;# 
  2242  0E10                     	;# 
  2243  0E11                     	;# 
  2244  0E12                     	;# 
  2245  0E13                     	;# 
  2246  0E14                     	;# 
  2247  0E15                     	;# 
  2248  0E17                     	;# 
  2249  0E20                     	;# 
  2250  0E21                     	;# 
  2251  0E22                     	;# 
  2252  0E24                     	;# 
  2253  0E25                     	;# 
  2254  0E28                     	;# 
  2255  0E29                     	;# 
  2256  0E2A                     	;# 
  2257  0E2B                     	;# 
  2258  0E90                     	;# 
  2259  0E91                     	;# 
  2260  0E92                     	;# 
  2261  0E93                     	;# 
  2262  0E94                     	;# 
  2263  0E95                     	;# 
  2264  0E96                     	;# 
  2265  0E97                     	;# 
  2266  0E98                     	;# 
  2267  0E99                     	;# 
  2268  0E9A                     	;# 
  2269  0E9B                     	;# 
  2270  0E9C                     	;# 
  2271  0E9D                     	;# 
  2272  0E9E                     	;# 
  2273  0E9F                     	;# 
  2274  0EA0                     	;# 
  2275  0EA1                     	;# 
  2276  0EA2                     	;# 
  2277  0EA3                     	;# 
  2278  0EA4                     	;# 
  2279  0EA5                     	;# 
  2280  0EA6                     	;# 
  2281  0EA7                     	;# 
  2282  0F0F                     	;# 
  2283  0F10                     	;# 
  2284  0F11                     	;# 
  2285  0F12                     	;# 
  2286  0F13                     	;# 
  2287  0F14                     	;# 
  2288  0F15                     	;# 
  2289  0F16                     	;# 
  2290  0F17                     	;# 
  2291  0F18                     	;# 
  2292  0F19                     	;# 
  2293  0F1A                     	;# 
  2294  0F1B                     	;# 
  2295  0F1C                     	;# 
  2296  0F1D                     	;# 
  2297  0F1E                     	;# 
  2298  0F1F                     	;# 
  2299  0F20                     	;# 
  2300  0F21                     	;# 
  2301  0F22                     	;# 
  2302  0F23                     	;# 
  2303  0F24                     	;# 
  2304  0F25                     	;# 
  2305  0F26                     	;# 
  2306  0F27                     	;# 
  2307  0F28                     	;# 
  2308  0F29                     	;# 
  2309  0F2A                     	;# 
  2310  0F2B                     	;# 
  2311  0F2C                     	;# 
  2312  0F2D                     	;# 
  2313  0F2E                     	;# 
  2314  0F2F                     	;# 
  2315  0F30                     	;# 
  2316  0F31                     	;# 
  2317  0F32                     	;# 
  2318  0F33                     	;# 
  2319  0F34                     	;# 
  2320  0F35                     	;# 
  2321  0F36                     	;# 
  2322  0F37                     	;# 
  2323  0FE4                     	;# 
  2324  0FE5                     	;# 
  2325  0FE6                     	;# 
  2326  0FE7                     	;# 
  2327  0FE8                     	;# 
  2328  0FE9                     	;# 
  2329  0FEA                     	;# 
  2330  0FEB                     	;# 
  2331  0FED                     	;# 
  2332  0FEE                     	;# 
  2333  0FEF                     	;I2C_StatusCallback@EEPROM_Buffer
  2334                           
  2335                           	psect	idataCOMMON
  2336  034B                     __pidataCOMMON:	
  2337                           
  2338                           ;initializer for _I2C_slaveWriteData
  2339  034B  3455               	retlw	85
  2340                           
  2341                           ;initializer for _i2cread_ptr
  2342  034C  3425               	retlw	low (_adc_readings| 0)
  2343                           
  2344                           	psect	idataBANK0
  2345  034D                     __pidataBANK0:	
  2346                           
  2347                           ;initializer for _adc_readings_ptr
  2348  034D  3425               	retlw	low (_adc_readings| 0)
  2349                           
  2350                           	psect	idataBIGRAM
  2351  013B                     __pidataBIGRAM:	
  2352                           
  2353                           ;initializer for I2C_StatusCallback@EEPROM_Buffer
  2354  013B  3400               	retlw	0
  2355  013C  3401               	retlw	1
  2356  013D  3402               	retlw	2
  2357  013E  3403               	retlw	3
  2358  013F  3404               	retlw	4
  2359  0140  3405               	retlw	5
  2360  0141  3406               	retlw	6
  2361  0142  3407               	retlw	7
  2362  0143  3408               	retlw	8
  2363  0144  3409               	retlw	9
  2364  0145  340A               	retlw	10
  2365  0146  340B               	retlw	11
  2366  0147  340C               	retlw	12
  2367  0148  340D               	retlw	13
  2368  0149  340E               	retlw	14
  2369  014A  340F               	retlw	15
  2370  014B  3410               	retlw	16
  2371  014C  3411               	retlw	17
  2372  014D  3412               	retlw	18
  2373  014E  3413               	retlw	19
  2374  014F  3414               	retlw	20
  2375  0150  3415               	retlw	21
  2376  0151  3416               	retlw	22
  2377  0152  3417               	retlw	23
  2378  0153  3418               	retlw	24
  2379  0154  3419               	retlw	25
  2380  0155  341A               	retlw	26
  2381  0156  341B               	retlw	27
  2382  0157  341C               	retlw	28
  2383  0158  341D               	retlw	29
  2384  0159  341E               	retlw	30
  2385  015A  341F               	retlw	31
  2386  015B  3420               	retlw	32
  2387  015C  3421               	retlw	33
  2388  015D  3422               	retlw	34
  2389  015E  3423               	retlw	35
  2390  015F  3424               	retlw	36
  2391  0160  3425               	retlw	37
  2392  0161  3426               	retlw	38
  2393  0162  3427               	retlw	39
  2394  0163  3428               	retlw	40
  2395  0164  3429               	retlw	41
  2396  0165  342A               	retlw	42
  2397  0166  342B               	retlw	43
  2398  0167  342C               	retlw	44
  2399  0168  342D               	retlw	45
  2400  0169  342E               	retlw	46
  2401  016A  342F               	retlw	47
  2402  016B  3430               	retlw	48
  2403  016C  3431               	retlw	49
  2404  016D  3432               	retlw	50
  2405  016E  3433               	retlw	51
  2406  016F  3434               	retlw	52
  2407  0170  3435               	retlw	53
  2408  0171  3436               	retlw	54
  2409  0172  3437               	retlw	55
  2410  0173  3438               	retlw	56
  2411  0174  3439               	retlw	57
  2412  0175  343A               	retlw	58
  2413  0176  343B               	retlw	59
  2414  0177  343C               	retlw	60
  2415  0178  343D               	retlw	61
  2416  0179  343E               	retlw	62
  2417  017A  343F               	retlw	63
  2418  017B  3440               	retlw	64
  2419  017C  3441               	retlw	65
  2420  017D  3442               	retlw	66
  2421  017E  3443               	retlw	67
  2422  017F  3444               	retlw	68
  2423  0180  3445               	retlw	69
  2424  0181  3446               	retlw	70
  2425  0182  3447               	retlw	71
  2426  0183  3448               	retlw	72
  2427  0184  3449               	retlw	73
  2428  0185  344A               	retlw	74
  2429  0186  344B               	retlw	75
  2430  0187  344C               	retlw	76
  2431  0188  344D               	retlw	77
  2432  0189  344E               	retlw	78
  2433  018A  344F               	retlw	79
  2434  018B  3450               	retlw	80
  2435  018C  3451               	retlw	81
  2436  018D  3452               	retlw	82
  2437  018E  3453               	retlw	83
  2438  018F  3454               	retlw	84
  2439  0190  3455               	retlw	85
  2440  0191  3456               	retlw	86
  2441  0192  3457               	retlw	87
  2442  0193  3458               	retlw	88
  2443  0194  3459               	retlw	89
  2444  0195  345A               	retlw	90
  2445  0196  345B               	retlw	91
  2446  0197  345C               	retlw	92
  2447  0198  345D               	retlw	93
  2448  0199  345E               	retlw	94
  2449  019A  345F               	retlw	95
  2450  019B  3460               	retlw	96
  2451  019C  3461               	retlw	97
  2452  019D  3462               	retlw	98
  2453  019E  3463               	retlw	99
  2454  019F  3464               	retlw	100
  2455  01A0  3465               	retlw	101
  2456  01A1  3466               	retlw	102
  2457  01A2  3467               	retlw	103
  2458  01A3  3468               	retlw	104
  2459  01A4  3469               	retlw	105
  2460  01A5  346A               	retlw	106
  2461  01A6  346B               	retlw	107
  2462  01A7  346C               	retlw	108
  2463  01A8  346D               	retlw	109
  2464  01A9  346E               	retlw	110
  2465  01AA  346F               	retlw	111
  2466  01AB  3470               	retlw	112
  2467  01AC  3471               	retlw	113
  2468  01AD  3472               	retlw	114
  2469  01AE  3473               	retlw	115
  2470  01AF  3474               	retlw	116
  2471  01B0  3475               	retlw	117
  2472  01B1  3476               	retlw	118
  2473  01B2  3477               	retlw	119
  2474  01B3  3478               	retlw	120
  2475  01B4  3479               	retlw	121
  2476  01B5  347A               	retlw	122
  2477  01B6  347B               	retlw	123
  2478  01B7  347C               	retlw	124
  2479  01B8  347D               	retlw	125
  2480  01B9  347E               	retlw	126
  2481  01BA  347F               	retlw	127
  2482  000B                     _INTCONbits	set	11
  2483  0011                     _PIR1bits	set	17
  2484  0015                     _TMR0	set	21
  2485  005F                     _GIE	set	95
  2486  009D                     _ADCON0	set	157
  2487  009D                     _ADCON0bits	set	157
  2488  009E                     _ADCON1	set	158
  2489  009F                     _ADCON2	set	159
  2490  009C                     _ADRESH	set	156
  2491  009B                     _ADRESL	set	155
  2492  0095                     _OPTION_REG	set	149
  2493  0095                     _OPTION_REGbits	set	149
  2494  0099                     _OSCCON	set	153
  2495  009A                     _OSCSTAT	set	154
  2496  0098                     _OSCTUNE	set	152
  2497  0091                     _PIE1bits	set	145
  2498  008C                     _TRISA	set	140
  2499  008D                     _TRISB	set	141
  2500  008E                     _TRISC	set	142
  2501  0090                     _TRISE	set	144
  2502  010C                     _LATA	set	268
  2503  010D                     _LATB	set	269
  2504  010E                     _LATC	set	270
  2505  018C                     _ANSELA	set	396
  2506  018D                     _ANSELB	set	397
  2507  018E                     _ANSELC	set	398
  2508  0212                     _SSP1ADD	set	530
  2509  0211                     _SSP1BUF	set	529
  2510  0215                     _SSP1CON1	set	533
  2511  0215                     _SSP1CON1bits	set	533
  2512  0216                     _SSP1CON2	set	534
  2513  0216                     _SSP1CON2bits	set	534
  2514  0217                     _SSP1CON3	set	535
  2515  0213                     _SSP1MSK	set	531
  2516  0214                     _SSP1STAT	set	532
  2517  0214                     _SSP1STATbits	set	532
  2518  020C                     _WPUA	set	524
  2519  020D                     _WPUB	set	525
  2520  020E                     _WPUC	set	526
  2521  0210                     _WPUE	set	528
  2522  0E0F                     _PPSLOCK	set	3599
  2523  0E0F                     _PPSLOCKbits	set	3599
  2524  0E20                     _SSPCLKPPSbits	set	3616
  2525  0E21                     _SSPDATPPSbits	set	3617
  2526  0EA0                     _RC0PPSbits	set	3744
  2527  0EA1                     _RC1PPSbits	set	3745
  2528                           
  2529                           ; #config settings
  2530  0000                     
  2531                           	psect	cinit
  2532  0029                     start_initialization:	
  2533  0029                     __initialization:		;BIGRAM
  2534                           
  2535                           ; Clear objects allocated to COMMON
  2536  0029  01F8               	clrf	__pbssCOMMON& (0+127)
  2537  002A  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  2538  002B  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  2539  002C  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  2540                           
  2541                           ; Clear objects allocated to BANK0
  2542  002D  3020               	movlw	low __pbssBANK0
  2543  002E  0084               	movwf	4
  2544  002F  3000               	movlw	high __pbssBANK0
  2545  0030  0085               	movwf	5
  2546  0031  3019               	movlw	25
  2547  0032  00FE               	movwf	btemp
  2548  0033  3000               	movlw	0
  2549  0034  00FF               	movwf	btemp+1
  2550  0035  3183  2307  3180   	fcall	clear_ram0
  2551                           
  2552                           ; Initialize objects allocated to BIGRAM
  2553  0038  303B               	movlw	low __pidataBIGRAM
  2554  0039  0084               	movwf	4
  2555  003A  3081               	movlw	(high __pidataBIGRAM)| (0+128)
  2556  003B  0085               	movwf	5
  2557  003C  3070               	movlw	low (0+10096)
  2558  003D  0086               	movwf	6
  2559  003E  3027               	movlw	high (0+10096)
  2560  003F  0087               	movwf	7
  2561  0040  3000               	movlw	0
  2562  0041  00FF               	movwf	btemp+1
  2563  0042  3080               	movlw	128
  2564  0043  3183  2313  3180   	fcall	init_ram
  2565                           
  2566                           ; Initialize objects allocated to COMMON
  2567  0046  3183  234B  3180   	fcall	__pidataCOMMON	;fetch initializer
  2568  0049  00FC               	movwf	__pdataCOMMON& (0+127)
  2569  004A  3183  234C  3180   	fcall	__pidataCOMMON+1	;fetch initializer
  2570  004D  00FD               	movwf	(__pdataCOMMON+1)& (0+127)
  2571                           
  2572                           ; Initialize objects allocated to BANK0
  2573  004E  3183  234D         	fcall	__pidataBANK0	;fetch initializer
  2574  0050  00BE               	movwf	__pdataBANK0& (0+127)
  2575  0051                     end_of_initialization:	
  2576                           ;End of C runtime variable initialization code
  2577                           
  2578  0051                     __end_of__initialization:	
  2579  0051  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2580  0052  0020               	movlb	0
  2581  0053  3183  2B1F         	ljmp	_main	;jump to C main() function
  2582                           
  2583                           	psect	bssCOMMON
  2584  0078                     __pbssCOMMON:	
  2585  0078                     I2C_StatusCallback@eepromAddress:	
  2586  0078                     	ds	1
  2587  0079                     I2C_StatusCallback@slaveWriteType:	
  2588  0079                     	ds	1
  2589  007A                     _Command:	
  2590  007A                     	ds	1
  2591  007B                     _timer0ReloadVal:	
  2592  007B                     	ds	1
  2593                           
  2594                           	psect	dataCOMMON
  2595  007C                     __pdataCOMMON:	
  2596  007C                     _I2C_slaveWriteData:	
  2597  007C                     	ds	1
  2598  007D                     _i2cread_ptr:	
  2599  007D                     	ds	1
  2600                           
  2601                           	psect	bssBANK0
  2602  0020                     __pbssBANK0:	
  2603  0020                     _debug:	
  2604  0020                     	ds	2
  2605  0022                     _timerVariable:	
  2606  0022                     	ds	2
  2607  0024                     _adc_state:	
  2608  0024                     	ds	1
  2609  0025                     _adc_readings:	
  2610  0025                     	ds	20
  2611                           
  2612                           	psect	dataBANK0
  2613  003E                     __pdataBANK0:	
  2614  003E                     _adc_readings_ptr:	
  2615  003E                     	ds	1
  2616                           
  2617                           	psect	clrtext
  2618  0307                     clear_ram0:	
  2619                           ;	Called with FSR0 containing the base address, and
  2620                           ;	btemp/btemp+1 has the size to clear
  2621                           
  2622  0307  0064               	clrwdt	;clear the watchdog before getting into this loop
  2623  0308                     clrloop0:	
  2624  0308  0180               	clrf	0	;clear RAM location pointed to by FSR
  2625  0309  3101               	addfsr 0,1
  2626  030A  3001               	movlw	1
  2627  030B  02FE               	subwf	126,f
  2628  030C  3000               	movlw	0
  2629  030D  3BFF               	subwfb	127,f
  2630  030E  087F               	movf	127,w
  2631  030F  047E               	iorwf	126,w
  2632  0310  1903               	btfsc	3,2
  2633  0311  3400               	retlw	0	;all done for this memory range, return
  2634  0312  2B08               	goto	clrloop0	;have we reached the end yet?
  2635                           
  2636                           	psect	inittext
  2637  0313                     init_ram:	
  2638  0313  00FE               	movwf	126
  2639  0314                     initloop:	
  2640  0314  0012               	moviw fsr0++
  2641  0315  001E               	movwi fsr1++
  2642  0316  3001               	movlw	1
  2643  0317  02FE               	subwf	126,f
  2644  0318  3000               	movlw	0
  2645  0319  3BFF               	subwfb	127,f
  2646  031A  087F               	movf	127,w
  2647  031B  047E               	iorwf	126,w
  2648  031C  1903               	btfsc	3,2
  2649  031D  3400               	retlw	0
  2650  031E  2B14               	goto	initloop
  2651                           
  2652                           	psect	cstackCOMMON
  2653  0070                     __pcstackCOMMON:	
  2654  0070                     ?_OSCILLATOR_Initialize:	
  2655  0070                     ?_ADC_Initialize:	
  2656                           ; 0 bytes @ 0x0
  2657                           
  2658  0070                     ?_I2C_Initialize:	
  2659                           ; 0 bytes @ 0x0
  2660                           
  2661  0070                     ?_TMR0_Initialize:	
  2662                           ; 0 bytes @ 0x0
  2663                           
  2664  0070                     ?_I2C_StatusCallback:	
  2665                           ; 0 bytes @ 0x0
  2666                           
  2667  0070                     ??_getADCReading:	
  2668                           ; 0 bytes @ 0x0
  2669                           
  2670  0070                     ?_TMR0_ISR:	
  2671                           ; 0 bytes @ 0x0
  2672                           
  2673  0070                     ??_TMR0_ISR:	
  2674                           ; 0 bytes @ 0x0
  2675                           
  2676  0070                     ?_init_irRange:	
  2677                           ; 0 bytes @ 0x0
  2678                           
  2679  0070                     ?_readADCs:	
  2680                           ; 0 bytes @ 0x0
  2681                           
  2682  0070                     ?_TMR0_CallBack:	
  2683                           ; 0 bytes @ 0x0
  2684                           
  2685  0070                     ??_TMR0_CallBack:	
  2686                           ; 0 bytes @ 0x0
  2687                           
  2688  0070                     ?_PIN_MANAGER_Initialize:	
  2689                           ; 0 bytes @ 0x0
  2690                           
  2691  0070                     ?_SYSTEM_Initialize:	
  2692                           ; 0 bytes @ 0x0
  2693                           
  2694  0070                     ?_I2C_ISR:	
  2695                           ; 0 bytes @ 0x0
  2696                           
  2697  0070                     ?_ADC_ISR:	
  2698                           ; 0 bytes @ 0x0
  2699                           
  2700  0070                     ??_ADC_ISR:	
  2701                           ; 0 bytes @ 0x0
  2702                           
  2703  0070                     ?_INTERRUPT_InterruptManager:	
  2704                           ; 0 bytes @ 0x0
  2705                           
  2706  0070                     ?_main:	
  2707                           ; 0 bytes @ 0x0
  2708                           
  2709  0070                     ?_getADCReading:	
  2710                           ; 0 bytes @ 0x0
  2711                           
  2712                           
  2713                           ; 1 bytes @ 0x0
  2714  0070                     	ds	1
  2715  0071                     getADCReading@temp:	
  2716                           
  2717                           ; 1 bytes @ 0x1
  2718  0071                     	ds	1
  2719  0072                     ??_I2C_StatusCallback:	
  2720                           
  2721                           ; 0 bytes @ 0x2
  2722  0072                     	ds	2
  2723  0074                     I2C_StatusCallback@i2c_bus_state:	
  2724                           
  2725                           ; 1 bytes @ 0x4
  2726  0074                     	ds	1
  2727  0075                     ??_I2C_ISR:	
  2728                           
  2729                           ; 0 bytes @ 0x5
  2730  0075                     	ds	1
  2731  0076                     I2C_ISR@i2c_data:	
  2732                           
  2733                           ; 1 bytes @ 0x6
  2734  0076                     	ds	1
  2735  0077                     ??_INTERRUPT_InterruptManager:	
  2736                           
  2737                           ; 0 bytes @ 0x7
  2738  0077                     	ds	1
  2739                           
  2740                           	psect	cstackBANK0
  2741  0039                     __pcstackBANK0:	
  2742  0039                     ??_OSCILLATOR_Initialize:	
  2743  0039                     ??_ADC_Initialize:	
  2744                           ; 0 bytes @ 0x0
  2745                           
  2746  0039                     ??_I2C_Initialize:	
  2747                           ; 0 bytes @ 0x0
  2748                           
  2749  0039                     ??_TMR0_Initialize:	
  2750                           ; 0 bytes @ 0x0
  2751                           
  2752  0039                     ??_init_irRange:	
  2753                           ; 0 bytes @ 0x0
  2754                           
  2755  0039                     ??_PIN_MANAGER_Initialize:	
  2756                           ; 0 bytes @ 0x0
  2757                           
  2758  0039                     ?_ADC_GetConversion:	
  2759                           ; 0 bytes @ 0x0
  2760                           
  2761  0039                     PIN_MANAGER_Initialize@state:	
  2762                           ; 2 bytes @ 0x0
  2763                           
  2764                           
  2765                           ; 1 bytes @ 0x0
  2766  0039                     	ds	1
  2767  003A                     ??_SYSTEM_Initialize:	
  2768  003A                     init_irRange@i:	
  2769                           ; 0 bytes @ 0x1
  2770                           
  2771                           
  2772                           ; 2 bytes @ 0x1
  2773  003A                     	ds	1
  2774  003B                     ??_ADC_GetConversion:	
  2775                           
  2776                           ; 0 bytes @ 0x2
  2777  003B                     	ds	1
  2778  003C                     ADC_GetConversion@channel:	
  2779                           
  2780                           ; 1 bytes @ 0x3
  2781  003C                     	ds	1
  2782  003D                     ??_readADCs:	
  2783                           
  2784                           ; 0 bytes @ 0x4
  2785  003D                     	ds	1
  2786  003E                     ??_main:	
  2787                           
  2788                           	psect	maintext
  2789  031F                     __pmaintext:	
  2790                           ; 0 bytes @ 0x5
  2791 ;;
  2792 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2793 ;;
  2794 ;; *************** function _main *****************
  2795 ;; Defined at:
  2796 ;;		line 54 in file "main.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;		None
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;		None
  2801 ;; Return value:  Size  Location     Type
  2802 ;;		None               void
  2803 ;; Registers used:
  2804 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2805 ;; Tracked objects:
  2806 ;;		On entry : B1F/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2814 ;;Total ram usage:        0 bytes
  2815 ;; Hardware stack levels required when called:    6
  2816 ;; This function calls:
  2817 ;;		_SYSTEM_Initialize
  2818 ;;		_init_irRange
  2819 ;;		_readADCs
  2820 ;; This function is called by:
  2821 ;;		Startup code after reset
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           
  2826                           ;psect for function _main
  2827  031F                     _main:	
  2828                           
  2829                           ;main.c: 56: SYSTEM_Initialize();
  2830                           
  2831                           ;incstack = 0
  2832                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2833  031F  3182  22DC  3183   	fcall	_SYSTEM_Initialize
  2834                           
  2835                           ;main.c: 62: (INTCONbits.GIE = 1);
  2836  0322  178B               	bsf	11,7	;volatile
  2837                           
  2838                           ;main.c: 65: (INTCONbits.PEIE = 1);
  2839  0323  170B               	bsf	11,6	;volatile
  2840                           
  2841                           ;main.c: 72: init_irRange();
  2842  0324  3182  2284  3183   	fcall	_init_irRange
  2843  0327                     l1260:	
  2844                           ;main.c: 73: while (1) {
  2845                           
  2846                           
  2847                           ;main.c: 75: readADCs();
  2848  0327  3180  2055  3183   	fcall	_readADCs
  2849  032A  2B27               	goto	l1260
  2850  032B                     __end_of_main:	
  2851                           
  2852                           	psect	text1
  2853  0055                     __ptext1:	
  2854 ;; *************** function _readADCs *****************
  2855 ;; Defined at:
  2856 ;;		line 23 in file "irRange.c"
  2857 ;; Parameters:    Size  Location     Type
  2858 ;;		None
  2859 ;; Auto vars:     Size  Location     Type
  2860 ;;		None
  2861 ;; Return value:  Size  Location     Type
  2862 ;;		None               void
  2863 ;; Registers used:
  2864 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2865 ;; Tracked objects:
  2866 ;;		On entry : 0/0
  2867 ;;		On exit  : 0/0
  2868 ;;		Unchanged: 0/0
  2869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2872 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2873 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2874 ;;Total ram usage:        1 bytes
  2875 ;; Hardware stack levels used:    1
  2876 ;; Hardware stack levels required when called:    5
  2877 ;; This function calls:
  2878 ;;		_ADC_GetConversion
  2879 ;; This function is called by:
  2880 ;;		_main
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           
  2885                           ;psect for function _readADCs
  2886  0055                     _readADCs:	
  2887                           
  2888                           ;irRange.c: 25: switch(adc_state){
  2889                           
  2890                           ;incstack = 0
  2891                           ; Regs used in _readADCs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2892  0055  2919               	goto	l1236
  2893  0056                     l1174:	
  2894                           ;irRange.c: 26: case channel_AN0:
  2895                           
  2896                           
  2897                           ;irRange.c: 27: *adc_readings_ptr = (uint16_t)ADC_GetConversion(channel_AN0);
  2898  0056  3000               	movlw	0
  2899  0057  3182  22AC         	fcall	_ADC_GetConversion
  2900  0059  0020               	movlb	0	; select bank0
  2901  005A  083E               	movf	_adc_readings_ptr,w
  2902  005B  0086               	movwf	6
  2903  005C  0187               	clrf	7
  2904  005D  0839               	movf	?_ADC_GetConversion,w
  2905  005E  3FC0               	movwi [0]fsr1
  2906  005F  083A               	movf	?_ADC_GetConversion+1,w
  2907  0060  3FC1               	movwi [1]fsr1
  2908                           
  2909                           ;irRange.c: 28: adc_readings_ptr++;
  2910  0061  3002               	movlw	2
  2911  0062  00BD               	movwf	??_readADCs
  2912  0063  083D               	movf	??_readADCs,w
  2913  0064  07BE               	addwf	_adc_readings_ptr,f
  2914                           
  2915                           ;irRange.c: 29: adc_state = channel_AN1;
  2916  0065  01A4               	clrf	_adc_state
  2917  0066  0AA4               	incf	_adc_state,f
  2918                           
  2919                           ;irRange.c: 31: break;
  2920  0067  0008               	return
  2921  0068                     l1180:	
  2922                           ;irRange.c: 32: case channel_AN1:
  2923                           
  2924                           
  2925                           ;irRange.c: 33: *adc_readings_ptr = (uint16_t)ADC_GetConversion(channel_AN1);
  2926  0068  3001               	movlw	1
  2927  0069  3182  22AC         	fcall	_ADC_GetConversion
  2928  006B  0020               	movlb	0	; select bank0
  2929  006C  083E               	movf	_adc_readings_ptr,w
  2930  006D  0086               	movwf	6
  2931  006E  0187               	clrf	7
  2932  006F  0839               	movf	?_ADC_GetConversion,w
  2933  0070  3FC0               	movwi [0]fsr1
  2934  0071  083A               	movf	?_ADC_GetConversion+1,w
  2935  0072  3FC1               	movwi [1]fsr1
  2936                           
  2937                           ;irRange.c: 34: adc_readings_ptr++;
  2938  0073  3002               	movlw	2
  2939  0074  00BD               	movwf	??_readADCs
  2940  0075  083D               	movf	??_readADCs,w
  2941  0076  07BE               	addwf	_adc_readings_ptr,f
  2942                           
  2943                           ;irRange.c: 35: adc_state = channel_AN2;
  2944  0077  3002               	movlw	2
  2945  0078  00BD               	movwf	??_readADCs
  2946  0079  083D               	movf	??_readADCs,w
  2947  007A  00A4               	movwf	_adc_state
  2948                           
  2949                           ;irRange.c: 37: break;
  2950  007B  0008               	return
  2951  007C                     l1186:	
  2952                           ;irRange.c: 38: case channel_AN2:
  2953                           
  2954                           
  2955                           ;irRange.c: 39: *adc_readings_ptr = (uint16_t)ADC_GetConversion(channel_AN2);
  2956  007C  3002               	movlw	2
  2957  007D  3182  22AC         	fcall	_ADC_GetConversion
  2958  007F  0020               	movlb	0	; select bank0
  2959  0080  083E               	movf	_adc_readings_ptr,w
  2960  0081  0086               	movwf	6
  2961  0082  0187               	clrf	7
  2962  0083  0839               	movf	?_ADC_GetConversion,w
  2963  0084  3FC0               	movwi [0]fsr1
  2964  0085  083A               	movf	?_ADC_GetConversion+1,w
  2965  0086  3FC1               	movwi [1]fsr1
  2966                           
  2967                           ;irRange.c: 40: adc_readings_ptr++;
  2968  0087  3002               	movlw	2
  2969  0088  00BD               	movwf	??_readADCs
  2970  0089  083D               	movf	??_readADCs,w
  2971  008A  07BE               	addwf	_adc_readings_ptr,f
  2972                           
  2973                           ;irRange.c: 41: adc_state = channel_AN3;
  2974  008B  3003               	movlw	3
  2975  008C  00BD               	movwf	??_readADCs
  2976  008D  083D               	movf	??_readADCs,w
  2977  008E  00A4               	movwf	_adc_state
  2978                           
  2979                           ;irRange.c: 43: break;
  2980  008F  0008               	return
  2981  0090                     l1192:	
  2982                           ;irRange.c: 44: case channel_AN3:
  2983                           
  2984                           
  2985                           ;irRange.c: 45: *adc_readings_ptr = (uint16_t)ADC_GetConversion(channel_AN3);
  2986  0090  3003               	movlw	3
  2987  0091  3182  22AC         	fcall	_ADC_GetConversion
  2988  0093  0020               	movlb	0	; select bank0
  2989  0094  083E               	movf	_adc_readings_ptr,w
  2990  0095  0086               	movwf	6
  2991  0096  0187               	clrf	7
  2992  0097  0839               	movf	?_ADC_GetConversion,w
  2993  0098  3FC0               	movwi [0]fsr1
  2994  0099  083A               	movf	?_ADC_GetConversion+1,w
  2995  009A  3FC1               	movwi [1]fsr1
  2996                           
  2997                           ;irRange.c: 46: adc_readings_ptr++;
  2998  009B  3002               	movlw	2
  2999  009C  00BD               	movwf	??_readADCs
  3000  009D  083D               	movf	??_readADCs,w
  3001  009E  07BE               	addwf	_adc_readings_ptr,f
  3002                           
  3003                           ;irRange.c: 47: adc_state = channel_AN4;
  3004  009F  3004               	movlw	4
  3005  00A0  00BD               	movwf	??_readADCs
  3006  00A1  083D               	movf	??_readADCs,w
  3007  00A2  00A4               	movwf	_adc_state
  3008                           
  3009                           ;irRange.c: 48: break;
  3010  00A3  0008               	return
  3011  00A4                     l1198:	
  3012                           ;irRange.c: 49: case channel_AN4:
  3013                           
  3014                           
  3015                           ;irRange.c: 50: *adc_readings_ptr = (uint16_t)ADC_GetConversion(channel_AN4);
  3016  00A4  3004               	movlw	4
  3017  00A5  3182  22AC         	fcall	_ADC_GetConversion
  3018  00A7  0020               	movlb	0	; select bank0
  3019  00A8  083E               	movf	_adc_readings_ptr,w
  3020  00A9  0086               	movwf	6
  3021  00AA  0187               	clrf	7
  3022  00AB  0839               	movf	?_ADC_GetConversion,w
  3023  00AC  3FC0               	movwi [0]fsr1
  3024  00AD  083A               	movf	?_ADC_GetConversion+1,w
  3025  00AE  3FC1               	movwi [1]fsr1
  3026                           
  3027                           ;irRange.c: 51: adc_readings_ptr++;
  3028  00AF  3002               	movlw	2
  3029  00B0  00BD               	movwf	??_readADCs
  3030  00B1  083D               	movf	??_readADCs,w
  3031  00B2  07BE               	addwf	_adc_readings_ptr,f
  3032                           
  3033                           ;irRange.c: 52: adc_state = channel_AN14;
  3034  00B3  300E               	movlw	14
  3035  00B4  00BD               	movwf	??_readADCs
  3036  00B5  083D               	movf	??_readADCs,w
  3037  00B6  00A4               	movwf	_adc_state
  3038                           
  3039                           ;irRange.c: 53: break;
  3040  00B7  0008               	return
  3041  00B8                     l1204:	
  3042                           ;irRange.c: 54: case channel_AN14:
  3043                           
  3044                           
  3045                           ;irRange.c: 55: *adc_readings_ptr = (uint16_t)ADC_GetConversion(channel_AN14);
  3046  00B8  300E               	movlw	14
  3047  00B9  3182  22AC         	fcall	_ADC_GetConversion
  3048  00BB  0020               	movlb	0	; select bank0
  3049  00BC  083E               	movf	_adc_readings_ptr,w
  3050  00BD  0086               	movwf	6
  3051  00BE  0187               	clrf	7
  3052  00BF  0839               	movf	?_ADC_GetConversion,w
  3053  00C0  3FC0               	movwi [0]fsr1
  3054  00C1  083A               	movf	?_ADC_GetConversion+1,w
  3055  00C2  3FC1               	movwi [1]fsr1
  3056                           
  3057                           ;irRange.c: 56: adc_readings_ptr++;
  3058  00C3  3002               	movlw	2
  3059  00C4  00BD               	movwf	??_readADCs
  3060  00C5  083D               	movf	??_readADCs,w
  3061  00C6  07BE               	addwf	_adc_readings_ptr,f
  3062                           
  3063                           ;irRange.c: 57: adc_state = channel_AN15;
  3064  00C7  300F               	movlw	15
  3065  00C8  00BD               	movwf	??_readADCs
  3066  00C9  083D               	movf	??_readADCs,w
  3067  00CA  00A4               	movwf	_adc_state
  3068                           
  3069                           ;irRange.c: 58: break;
  3070  00CB  0008               	return
  3071  00CC                     l1210:	
  3072                           ;irRange.c: 59: case channel_AN15:
  3073                           
  3074                           
  3075                           ;irRange.c: 60: *adc_readings_ptr = (uint16_t)ADC_GetConversion(channel_AN15);
  3076  00CC  300F               	movlw	15
  3077  00CD  3182  22AC         	fcall	_ADC_GetConversion
  3078  00CF  0020               	movlb	0	; select bank0
  3079  00D0  083E               	movf	_adc_readings_ptr,w
  3080  00D1  0086               	movwf	6
  3081  00D2  0187               	clrf	7
  3082  00D3  0839               	movf	?_ADC_GetConversion,w
  3083  00D4  3FC0               	movwi [0]fsr1
  3084  00D5  083A               	movf	?_ADC_GetConversion+1,w
  3085  00D6  3FC1               	movwi [1]fsr1
  3086                           
  3087                           ;irRange.c: 61: adc_readings_ptr++;
  3088  00D7  3002               	movlw	2
  3089  00D8  00BD               	movwf	??_readADCs
  3090  00D9  083D               	movf	??_readADCs,w
  3091  00DA  07BE               	addwf	_adc_readings_ptr,f
  3092                           
  3093                           ;irRange.c: 62: adc_state = channel_AN16;
  3094  00DB  3010               	movlw	16
  3095  00DC  00BD               	movwf	??_readADCs
  3096  00DD  083D               	movf	??_readADCs,w
  3097  00DE  00A4               	movwf	_adc_state
  3098                           
  3099                           ;irRange.c: 63: break;
  3100  00DF  0008               	return
  3101  00E0                     l1216:	
  3102                           ;irRange.c: 64: case channel_AN16:
  3103                           
  3104                           
  3105                           ;irRange.c: 65: *adc_readings_ptr = (uint16_t)ADC_GetConversion(channel_AN16);
  3106  00E0  3010               	movlw	16
  3107  00E1  3182  22AC         	fcall	_ADC_GetConversion
  3108  00E3  0020               	movlb	0	; select bank0
  3109  00E4  083E               	movf	_adc_readings_ptr,w
  3110  00E5  0086               	movwf	6
  3111  00E6  0187               	clrf	7
  3112  00E7  0839               	movf	?_ADC_GetConversion,w
  3113  00E8  3FC0               	movwi [0]fsr1
  3114  00E9  083A               	movf	?_ADC_GetConversion+1,w
  3115  00EA  3FC1               	movwi [1]fsr1
  3116                           
  3117                           ;irRange.c: 66: adc_readings_ptr++;
  3118  00EB  3002               	movlw	2
  3119  00EC  00BD               	movwf	??_readADCs
  3120  00ED  083D               	movf	??_readADCs,w
  3121  00EE  07BE               	addwf	_adc_readings_ptr,f
  3122                           
  3123                           ;irRange.c: 67: adc_state = channel_AN17;
  3124  00EF  3011               	movlw	17
  3125  00F0  00BD               	movwf	??_readADCs
  3126  00F1  083D               	movf	??_readADCs,w
  3127  00F2  00A4               	movwf	_adc_state
  3128                           
  3129                           ;irRange.c: 68: break;
  3130  00F3  0008               	return
  3131  00F4                     l1222:	
  3132                           ;irRange.c: 69: case channel_AN17:
  3133                           
  3134                           
  3135                           ;irRange.c: 70: *adc_readings_ptr = (uint16_t)ADC_GetConversion(channel_AN17);
  3136  00F4  3011               	movlw	17
  3137  00F5  3182  22AC         	fcall	_ADC_GetConversion
  3138  00F7  0020               	movlb	0	; select bank0
  3139  00F8  083E               	movf	_adc_readings_ptr,w
  3140  00F9  0086               	movwf	6
  3141  00FA  0187               	clrf	7
  3142  00FB  0839               	movf	?_ADC_GetConversion,w
  3143  00FC  3FC0               	movwi [0]fsr1
  3144  00FD  083A               	movf	?_ADC_GetConversion+1,w
  3145  00FE  3FC1               	movwi [1]fsr1
  3146                           
  3147                           ;irRange.c: 71: adc_readings_ptr++;
  3148  00FF  3002               	movlw	2
  3149  0100  00BD               	movwf	??_readADCs
  3150  0101  083D               	movf	??_readADCs,w
  3151  0102  07BE               	addwf	_adc_readings_ptr,f
  3152                           
  3153                           ;irRange.c: 72: adc_state = channel_AN18;
  3154  0103  3012               	movlw	18
  3155  0104  00BD               	movwf	??_readADCs
  3156  0105  083D               	movf	??_readADCs,w
  3157  0106  00A4               	movwf	_adc_state
  3158                           
  3159                           ;irRange.c: 73: break;
  3160  0107  0008               	return
  3161  0108                     l1228:	
  3162                           ;irRange.c: 74: case channel_AN18:
  3163                           
  3164                           
  3165                           ;irRange.c: 75: *adc_readings_ptr = (uint16_t)ADC_GetConversion(channel_AN18);
  3166  0108  3012               	movlw	18
  3167  0109  3182  22AC         	fcall	_ADC_GetConversion
  3168  010B  0020               	movlb	0	; select bank0
  3169  010C  083E               	movf	_adc_readings_ptr,w
  3170  010D  0086               	movwf	6
  3171  010E  0187               	clrf	7
  3172  010F  0839               	movf	?_ADC_GetConversion,w
  3173  0110  3FC0               	movwi [0]fsr1
  3174  0111  083A               	movf	?_ADC_GetConversion+1,w
  3175  0112  3FC1               	movwi [1]fsr1
  3176                           
  3177                           ;irRange.c: 76: adc_readings_ptr = adc_readings;
  3178  0113  3025               	movlw	(low (_adc_readings| 0))& (0+255)
  3179  0114  00BD               	movwf	??_readADCs
  3180  0115  083D               	movf	??_readADCs,w
  3181  0116  00BE               	movwf	_adc_readings_ptr
  3182                           
  3183                           ;irRange.c: 77: adc_state = channel_AN0;
  3184  0117  01A4               	clrf	_adc_state
  3185                           
  3186                           ;irRange.c: 80: }
  3187                           
  3188                           ;irRange.c: 78: break;
  3189  0118  0008               	return
  3190  0119                     l1236:	
  3191  0119  0020               	movlb	0	; select bank0
  3192  011A  0824               	movf	_adc_state,w
  3193                           
  3194                           ; Switch size 1, requested type "space"
  3195                           ; Number of cases is 10, Range of values is 0 to 18
  3196                           ; switch strategies available:
  3197                           ; Name         Instructions Cycles
  3198                           ; simple_byte           31    16 (average)
  3199                           ; direct_byte           44     6 (fixed)
  3200                           ; jumptable            260     6 (fixed)
  3201                           ;	Chosen strategy is simple_byte
  3202  011B  3A00               	xorlw	0	; case 0
  3203  011C  1903               	skipnz
  3204  011D  2856               	goto	l1174
  3205  011E  3A01               	xorlw	1	; case 1
  3206  011F  1903               	skipnz
  3207  0120  2868               	goto	l1180
  3208  0121  3A03               	xorlw	3	; case 2
  3209  0122  1903               	skipnz
  3210  0123  287C               	goto	l1186
  3211  0124  3A01               	xorlw	1	; case 3
  3212  0125  1903               	skipnz
  3213  0126  2890               	goto	l1192
  3214  0127  3A07               	xorlw	7	; case 4
  3215  0128  1903               	skipnz
  3216  0129  28A4               	goto	l1198
  3217  012A  3A0A               	xorlw	10	; case 14
  3218  012B  1903               	skipnz
  3219  012C  28B8               	goto	l1204
  3220  012D  3A01               	xorlw	1	; case 15
  3221  012E  1903               	skipnz
  3222  012F  28CC               	goto	l1210
  3223  0130  3A1F               	xorlw	31	; case 16
  3224  0131  1903               	skipnz
  3225  0132  28E0               	goto	l1216
  3226  0133  3A01               	xorlw	1	; case 17
  3227  0134  1903               	skipnz
  3228  0135  28F4               	goto	l1222
  3229  0136  3A03               	xorlw	3	; case 18
  3230  0137  1903               	skipnz
  3231  0138  2908               	goto	l1228
  3232  0139  293A               	goto	l245
  3233  013A                     l245:	
  3234  013A  0008               	return
  3235  013B                     __end_of_readADCs:	
  3236                           
  3237                           	psect	text2
  3238  02AC                     __ptext2:	
  3239 ;; *************** function _ADC_GetConversion *****************
  3240 ;; Defined at:
  3241 ;;		line 111 in file "mcc_generated_files/adc.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;  channel         1    wreg     enum E6209
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;  channel         1    3[BANK0 ] enum E6209
  3246 ;; Return value:  Size  Location     Type
  3247 ;;                  2    0[BANK0 ] unsigned int 
  3248 ;; Registers used:
  3249 ;;		wreg, status,2, status,0
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/0
  3252 ;;		On exit  : 0/0
  3253 ;;		Unchanged: 0/0
  3254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3255 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3256 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3257 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3258 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3259 ;;Total ram usage:        4 bytes
  3260 ;; Hardware stack levels used:    1
  3261 ;; Hardware stack levels required when called:    4
  3262 ;; This function calls:
  3263 ;;		Nothing
  3264 ;; This function is called by:
  3265 ;;		_readADCs
  3266 ;; This function uses a non-reentrant model
  3267 ;;
  3268                           
  3269                           
  3270                           ;psect for function _ADC_GetConversion
  3271  02AC                     _ADC_GetConversion:	
  3272                           
  3273                           ;incstack = 0
  3274                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  3275                           ;ADC_GetConversion@channel stored from wreg
  3276  02AC  0020               	movlb	0	; select bank0
  3277  02AD  00BC               	movwf	ADC_GetConversion@channel
  3278                           
  3279                           ;adc.c: 113: ADCON0bits.CHS = channel;
  3280  02AE  083C               	movf	ADC_GetConversion@channel,w
  3281  02AF  00BB               	movwf	??_ADC_GetConversion
  3282  02B0  0DBB               	rlf	??_ADC_GetConversion,f
  3283  02B1  0DBB               	rlf	??_ADC_GetConversion,f
  3284  02B2  0021               	movlb	1	; select bank1
  3285  02B3  081D               	movf	29,w	;volatile
  3286  02B4  0020               	movlb	0	; select bank0
  3287  02B5  063B               	xorwf	??_ADC_GetConversion,w
  3288  02B6  3983               	andlw	-125
  3289  02B7  063B               	xorwf	??_ADC_GetConversion,w
  3290  02B8  0021               	movlb	1	; select bank1
  3291  02B9  009D               	movwf	29	;volatile
  3292                           
  3293                           ;adc.c: 116: ADCON0bits.ADON = 1;
  3294  02BA  141D               	bsf	29,0	;volatile
  3295                           
  3296                           ;adc.c: 119: _delay((unsigned long)((5)*(2000000/4000000.0)));
  3297  02BB  3200               	nop2	;2 cycle nop
  3298                           
  3299                           ;adc.c: 122: ADCON0bits.GO_nDONE = 1;
  3300  02BC  0021               	movlb	1	; select bank1
  3301  02BD  149D               	bsf	29,1	;volatile
  3302  02BE                     l172:	
  3303                           ;adc.c: 125: while (ADCON0bits.GO_nDONE) {
  3304                           
  3305  02BE  189D               	btfsc	29,1	;volatile
  3306  02BF  2ABE               	goto	l172
  3307                           
  3308                           ;adc.c: 126: }
  3309                           ;adc.c: 129: return ((ADRESH << 8) + ADRESL);
  3310  02C0  081C               	movf	28,w	;volatile
  3311  02C1  0020               	movlb	0	; select bank0
  3312  02C2  00BA               	movwf	?_ADC_GetConversion+1
  3313  02C3  0021               	movlb	1	; select bank1
  3314  02C4  081B               	movf	27,w	;volatile
  3315  02C5  0020               	movlb	0	; select bank0
  3316  02C6  00B9               	movwf	?_ADC_GetConversion
  3317  02C7  0008               	return
  3318  02C8                     __end_of_ADC_GetConversion:	
  3319                           
  3320                           	psect	text3
  3321  0284                     __ptext3:	
  3322 ;; *************** function _init_irRange *****************
  3323 ;; Defined at:
  3324 ;;		line 12 in file "irRange.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;		None
  3327 ;; Auto vars:     Size  Location     Type
  3328 ;;  i               2    1[BANK0 ] int 
  3329 ;; Return value:  Size  Location     Type
  3330 ;;		None               void
  3331 ;; Registers used:
  3332 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3339 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3340 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3341 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3342 ;;Total ram usage:        3 bytes
  3343 ;; Hardware stack levels used:    1
  3344 ;; Hardware stack levels required when called:    4
  3345 ;; This function calls:
  3346 ;;		Nothing
  3347 ;; This function is called by:
  3348 ;;		_main
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           
  3353                           ;psect for function _init_irRange
  3354  0284                     _init_irRange:	
  3355                           
  3356                           ;irRange.c: 13: int i;
  3357                           ;irRange.c: 15: for(i = 0; i < 10; i++){
  3358                           
  3359                           ;incstack = 0
  3360                           ; Regs used in _init_irRange: [wreg+fsr1l+fsr1h+status,2+status,0]
  3361  0284  0020               	movlb	0	; select bank0
  3362  0285  01BA               	clrf	init_irRange@i
  3363  0286  01BB               	clrf	init_irRange@i+1
  3364  0287  083B               	movf	init_irRange@i+1,w
  3365  0288  3A80               	xorlw	128
  3366  0289  00B9               	movwf	??_init_irRange
  3367  028A  3080               	movlw	128
  3368  028B  0239               	subwf	??_init_irRange,w
  3369  028C  1D03               	skipz
  3370  028D  2A90               	goto	u295
  3371  028E  300A               	movlw	10
  3372  028F  023A               	subwf	init_irRange@i,w
  3373  0290                     u295:	
  3374  0290  1803               	btfsc	3,0
  3375  0291  2AA9               	goto	l1170
  3376  0292                     l1164:	
  3377                           
  3378                           ;irRange.c: 16: *(adc_readings + i) = 0;
  3379  0292  0020               	movlb	0	; select bank0
  3380  0293  353A               	lslf	init_irRange@i,w
  3381  0294  3E25               	addlw	(low (_adc_readings| 0))& (0+255)
  3382  0295  0086               	movwf	6
  3383  0296  0187               	clrf	7
  3384  0297  3000               	movlw	0
  3385  0298  3FC0               	movwi [0]fsr1
  3386  0299  3FC1               	movwi [1]fsr1
  3387  029A  3001               	movlw	1
  3388  029B  07BA               	addwf	init_irRange@i,f
  3389  029C  3000               	movlw	0
  3390  029D  3DBB               	addwfc	init_irRange@i+1,f
  3391  029E  083B               	movf	init_irRange@i+1,w
  3392  029F  3A80               	xorlw	128
  3393  02A0  00B9               	movwf	??_init_irRange
  3394  02A1  3080               	movlw	128
  3395  02A2  0239               	subwf	??_init_irRange,w
  3396  02A3  1D03               	skipz
  3397  02A4  2AA7               	goto	u305
  3398  02A5  300A               	movlw	10
  3399  02A6  023A               	subwf	init_irRange@i,w
  3400  02A7                     u305:	
  3401  02A7  1C03               	skipc
  3402  02A8  2A92               	goto	l1164
  3403  02A9                     l1170:	
  3404                           
  3405                           ;irRange.c: 17: }
  3406                           ;irRange.c: 18: adc_state = channel_AN0;
  3407  02A9  0020               	movlb	0	; select bank0
  3408  02AA  01A4               	clrf	_adc_state
  3409  02AB  0008               	return
  3410  02AC                     __end_of_init_irRange:	
  3411                           
  3412                           	psect	text4
  3413  02DC                     __ptext4:	
  3414 ;; *************** function _SYSTEM_Initialize *****************
  3415 ;; Defined at:
  3416 ;;		line 72 in file "mcc_generated_files/mcc.c"
  3417 ;; Parameters:    Size  Location     Type
  3418 ;;		None
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;		None
  3421 ;; Return value:  Size  Location     Type
  3422 ;;		None               void
  3423 ;; Registers used:
  3424 ;;		wreg, status,2, status,0, pclath, cstack
  3425 ;; Tracked objects:
  3426 ;;		On entry : 0/0
  3427 ;;		On exit  : 0/0
  3428 ;;		Unchanged: 0/0
  3429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3434 ;;Total ram usage:        0 bytes
  3435 ;; Hardware stack levels used:    1
  3436 ;; Hardware stack levels required when called:    5
  3437 ;; This function calls:
  3438 ;;		_ADC_Initialize
  3439 ;;		_I2C_Initialize
  3440 ;;		_OSCILLATOR_Initialize
  3441 ;;		_PIN_MANAGER_Initialize
  3442 ;;		_TMR0_Initialize
  3443 ;; This function is called by:
  3444 ;;		_main
  3445 ;; This function uses a non-reentrant model
  3446 ;;
  3447                           
  3448                           
  3449                           ;psect for function _SYSTEM_Initialize
  3450  02DC                     _SYSTEM_Initialize:	
  3451                           
  3452                           ;mcc.c: 73: OSCILLATOR_Initialize();
  3453                           
  3454                           ;incstack = 0
  3455                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3456  02DC  3183  233C  3182   	fcall	_OSCILLATOR_Initialize
  3457                           
  3458                           ;mcc.c: 74: PIN_MANAGER_Initialize();
  3459  02DF  3181  21BB  3182   	fcall	_PIN_MANAGER_Initialize
  3460                           
  3461                           ;mcc.c: 75: ADC_Initialize();
  3462  02E2  3183  232B  3182   	fcall	_ADC_Initialize
  3463                           
  3464                           ;mcc.c: 76: I2C_Initialize();
  3465  02E5  3182  22EB  3182   	fcall	_I2C_Initialize
  3466                           
  3467                           ;mcc.c: 77: TMR0_Initialize();
  3468  02E8  3182  22FA         	fcall	_TMR0_Initialize
  3469  02EA  0008               	return
  3470  02EB                     __end_of_SYSTEM_Initialize:	
  3471                           
  3472                           	psect	text5
  3473  02FA                     __ptext5:	
  3474 ;; *************** function _TMR0_Initialize *****************
  3475 ;; Defined at:
  3476 ;;		line 65 in file "mcc_generated_files/tmr0.c"
  3477 ;; Parameters:    Size  Location     Type
  3478 ;;		None
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;		None
  3481 ;; Return value:  Size  Location     Type
  3482 ;;		None               void
  3483 ;; Registers used:
  3484 ;;		wreg, status,2
  3485 ;; Tracked objects:
  3486 ;;		On entry : 0/0
  3487 ;;		On exit  : 0/0
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3494 ;;Total ram usage:        0 bytes
  3495 ;; Hardware stack levels used:    1
  3496 ;; Hardware stack levels required when called:    4
  3497 ;; This function calls:
  3498 ;;		Nothing
  3499 ;; This function is called by:
  3500 ;;		_SYSTEM_Initialize
  3501 ;; This function uses a non-reentrant model
  3502 ;;
  3503                           
  3504                           
  3505                           ;psect for function _TMR0_Initialize
  3506  02FA                     _TMR0_Initialize:	
  3507                           
  3508                           ;tmr0.c: 69: OPTION_REG = (OPTION_REG & 0xC0) | 0xD7 & 0x3F;
  3509                           
  3510                           ;incstack = 0
  3511                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  3512  02FA  0021               	movlb	1	; select bank1
  3513  02FB  0815               	movf	21,w	;volatile
  3514  02FC  39C0               	andlw	192
  3515  02FD  3817               	iorlw	23
  3516  02FE  0095               	movwf	21	;volatile
  3517                           
  3518                           ;tmr0.c: 72: TMR0 = 0x00;
  3519  02FF  0020               	movlb	0	; select bank0
  3520  0300  0195               	clrf	21	;volatile
  3521                           
  3522                           ;tmr0.c: 75: timer0ReloadVal = 0;
  3523  0301  01FB               	clrf	_timer0ReloadVal	;volatile
  3524                           
  3525                           ;tmr0.c: 78: INTCONbits.TMR0IF = 0;
  3526  0302  110B               	bcf	11,2	;volatile
  3527                           
  3528                           ;tmr0.c: 81: INTCONbits.TMR0IE = 1;
  3529  0303  168B               	bsf	11,5	;volatile
  3530                           
  3531                           ;tmr0.c: 83: timerVariable = 0;
  3532  0304  01A2               	clrf	_timerVariable	;volatile
  3533  0305  01A3               	clrf	_timerVariable+1	;volatile
  3534  0306  0008               	return
  3535  0307                     __end_of_TMR0_Initialize:	
  3536                           
  3537                           	psect	text6
  3538  01BB                     __ptext6:	
  3539 ;; *************** function _PIN_MANAGER_Initialize *****************
  3540 ;; Defined at:
  3541 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;		None
  3544 ;; Auto vars:     Size  Location     Type
  3545 ;;  state           1    0[BANK0 ] unsigned char 
  3546 ;; Return value:  Size  Location     Type
  3547 ;;		None               void
  3548 ;; Registers used:
  3549 ;;		wreg, status,2, status,0
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3556 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3558 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3559 ;;Total ram usage:        1 bytes
  3560 ;; Hardware stack levels used:    1
  3561 ;; Hardware stack levels required when called:    4
  3562 ;; This function calls:
  3563 ;;		Nothing
  3564 ;; This function is called by:
  3565 ;;		_SYSTEM_Initialize
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569                           
  3570                           ;psect for function _PIN_MANAGER_Initialize
  3571  01BB                     _PIN_MANAGER_Initialize:	
  3572                           
  3573                           ;pin_manager.c: 52: LATA = 0x00;
  3574                           
  3575                           ;incstack = 0
  3576                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  3577  01BB  0022               	movlb	2	; select bank2
  3578  01BC  018C               	clrf	12	;volatile
  3579                           
  3580                           ;pin_manager.c: 53: TRISA = 0xFF;
  3581  01BD  30FF               	movlw	255
  3582  01BE  0021               	movlb	1	; select bank1
  3583  01BF  008C               	movwf	12	;volatile
  3584                           
  3585                           ;pin_manager.c: 54: ANSELA = 0x3F;
  3586  01C0  303F               	movlw	63
  3587  01C1  0023               	movlb	3	; select bank3
  3588  01C2  008C               	movwf	12	;volatile
  3589                           
  3590                           ;pin_manager.c: 55: WPUA = 0x00;
  3591  01C3  0024               	movlb	4	; select bank4
  3592  01C4  018C               	clrf	12	;volatile
  3593                           
  3594                           ;pin_manager.c: 57: LATB = 0x00;
  3595  01C5  0022               	movlb	2	; select bank2
  3596  01C6  018D               	clrf	13	;volatile
  3597                           
  3598                           ;pin_manager.c: 58: TRISB = 0xFF;
  3599  01C7  30FF               	movlw	255
  3600  01C8  0021               	movlb	1	; select bank1
  3601  01C9  008D               	movwf	13	;volatile
  3602                           
  3603                           ;pin_manager.c: 59: ANSELB = 0x3F;
  3604  01CA  303F               	movlw	63
  3605  01CB  0023               	movlb	3	; select bank3
  3606  01CC  008D               	movwf	13	;volatile
  3607                           
  3608                           ;pin_manager.c: 60: WPUB = 0x00;
  3609  01CD  0024               	movlb	4	; select bank4
  3610  01CE  018D               	clrf	13	;volatile
  3611                           
  3612                           ;pin_manager.c: 62: LATC = 0x03;
  3613  01CF  3003               	movlw	3
  3614  01D0  0022               	movlb	2	; select bank2
  3615  01D1  008E               	movwf	14	;volatile
  3616                           
  3617                           ;pin_manager.c: 63: TRISC = 0xFF;
  3618  01D2  30FF               	movlw	255
  3619  01D3  0021               	movlb	1	; select bank1
  3620  01D4  008E               	movwf	14	;volatile
  3621                           
  3622                           ;pin_manager.c: 64: ANSELC = 0xFC;
  3623  01D5  30FC               	movlw	252
  3624  01D6  0023               	movlb	3	; select bank3
  3625  01D7  008E               	movwf	14	;volatile
  3626                           
  3627                           ;pin_manager.c: 65: WPUC = 0x00;
  3628  01D8  0024               	movlb	4	; select bank4
  3629  01D9  018E               	clrf	14	;volatile
  3630                           
  3631                           ;pin_manager.c: 67: TRISE = 0x08;
  3632  01DA  3008               	movlw	8
  3633  01DB  0021               	movlb	1	; select bank1
  3634  01DC  0090               	movwf	16	;volatile
  3635                           
  3636                           ;pin_manager.c: 68: WPUE = 0x00;
  3637  01DD  0024               	movlb	4	; select bank4
  3638  01DE  0190               	clrf	16	;volatile
  3639                           
  3640                           ;pin_manager.c: 70: OPTION_REGbits.nWPUEN = 0x01;
  3641  01DF  0021               	movlb	1	; select bank1
  3642  01E0  1795               	bsf	21,7	;volatile
  3643                           
  3644                           ;pin_manager.c: 73: bool state = GIE;
  3645  01E1  3000               	movlw	0
  3646  01E2  1B8B               	btfsc	11,7	;volatile
  3647  01E3  3001               	movlw	1
  3648  01E4  0020               	movlb	0	; select bank0
  3649  01E5  00B9               	movwf	PIN_MANAGER_Initialize@state
  3650                           
  3651                           ;pin_manager.c: 74: GIE = 0;
  3652  01E6  138B               	bcf	11,7	;volatile
  3653                           
  3654                           ;pin_manager.c: 75: PPSLOCK = 0x55;
  3655  01E7  3055               	movlw	85
  3656  01E8  003C               	movlb	28	; select bank28
  3657  01E9  008F               	movwf	15	;volatile
  3658                           
  3659                           ;pin_manager.c: 76: PPSLOCK = 0xAA;
  3660  01EA  30AA               	movlw	170
  3661  01EB  008F               	movwf	15	;volatile
  3662                           
  3663                           ;pin_manager.c: 77: PPSLOCKbits.PPSLOCKED = 0x00;
  3664  01EC  100F               	bcf	15,0	;volatile
  3665                           
  3666                           ;pin_manager.c: 79: SSPCLKPPSbits.SSPCLKPPS = 0x10;
  3667  01ED  0820               	movf	32,w	;volatile
  3668  01EE  39E0               	andlw	-32
  3669  01EF  3810               	iorlw	16
  3670  01F0  00A0               	movwf	32	;volatile
  3671                           
  3672                           ;pin_manager.c: 80: RC0PPSbits.RC0PPS = 0x10;
  3673  01F1  003D               	movlb	29	; select bank29
  3674  01F2  0820               	movf	32,w	;volatile
  3675  01F3  39E0               	andlw	-32
  3676  01F4  3810               	iorlw	16
  3677  01F5  00A0               	movwf	32	;volatile
  3678                           
  3679                           ;pin_manager.c: 81: SSPDATPPSbits.SSPDATPPS = 0x11;
  3680  01F6  003C               	movlb	28	; select bank28
  3681  01F7  0821               	movf	33,w	;volatile
  3682  01F8  39E0               	andlw	-32
  3683  01F9  3811               	iorlw	17
  3684  01FA  00A1               	movwf	33	;volatile
  3685                           
  3686                           ;pin_manager.c: 82: RC1PPSbits.RC1PPS = 0x11;
  3687  01FB  003D               	movlb	29	; select bank29
  3688  01FC  0821               	movf	33,w	;volatile
  3689  01FD  39E0               	andlw	-32
  3690  01FE  3811               	iorlw	17
  3691  01FF  00A1               	movwf	33	;volatile
  3692                           
  3693                           ;pin_manager.c: 83: PPSLOCK = 0x55;
  3694  0200  3055               	movlw	85
  3695  0201  003C               	movlb	28	; select bank28
  3696  0202  008F               	movwf	15	;volatile
  3697                           
  3698                           ;pin_manager.c: 84: PPSLOCK = 0xAA;
  3699  0203  30AA               	movlw	170
  3700  0204  008F               	movwf	15	;volatile
  3701                           
  3702                           ;pin_manager.c: 85: PPSLOCKbits.PPSLOCKED = 0x01;
  3703  0205  140F               	bsf	15,0	;volatile
  3704                           
  3705                           ;pin_manager.c: 86: GIE = state;
  3706  0206  0020               	movlb	0	; select bank0
  3707  0207  1C39               	btfss	PIN_MANAGER_Initialize@state,0
  3708  0208  2A0B               	goto	u200
  3709  0209  178B               	bsf	11,7	;volatile
  3710  020A  0008               	return
  3711  020B                     u200:	
  3712  020B  138B               	bcf	11,7	;volatile
  3713  020C  0008               	return
  3714  020D                     __end_of_PIN_MANAGER_Initialize:	
  3715                           
  3716                           	psect	text7
  3717  033C                     __ptext7:	
  3718 ;; *************** function _OSCILLATOR_Initialize *****************
  3719 ;; Defined at:
  3720 ;;		line 80 in file "mcc_generated_files/mcc.c"
  3721 ;; Parameters:    Size  Location     Type
  3722 ;;		None
  3723 ;; Auto vars:     Size  Location     Type
  3724 ;;		None
  3725 ;; Return value:  Size  Location     Type
  3726 ;;		None               void
  3727 ;; Registers used:
  3728 ;;		wreg, status,2
  3729 ;; Tracked objects:
  3730 ;;		On entry : 0/0
  3731 ;;		On exit  : 0/0
  3732 ;;		Unchanged: 0/0
  3733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3738 ;;Total ram usage:        0 bytes
  3739 ;; Hardware stack levels used:    1
  3740 ;; Hardware stack levels required when called:    4
  3741 ;; This function calls:
  3742 ;;		Nothing
  3743 ;; This function is called by:
  3744 ;;		_SYSTEM_Initialize
  3745 ;; This function uses a non-reentrant model
  3746 ;;
  3747                           
  3748                           
  3749                           ;psect for function _OSCILLATOR_Initialize
  3750  033C                     _OSCILLATOR_Initialize:	
  3751                           
  3752                           ;mcc.c: 82: OSCCON = 0x60;
  3753                           
  3754                           ;incstack = 0
  3755                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3756  033C  3060               	movlw	96
  3757  033D  0021               	movlb	1	; select bank1
  3758  033E  0099               	movwf	25	;volatile
  3759                           
  3760                           ;mcc.c: 84: OSCSTAT = 0x00;
  3761  033F  019A               	clrf	26	;volatile
  3762                           
  3763                           ;mcc.c: 86: OSCTUNE = 0x00;
  3764  0340  0198               	clrf	24	;volatile
  3765  0341  0008               	return
  3766  0342                     __end_of_OSCILLATOR_Initialize:	
  3767                           
  3768                           	psect	text8
  3769  02EB                     __ptext8:	
  3770 ;; *************** function _I2C_Initialize *****************
  3771 ;; Defined at:
  3772 ;;		line 82 in file "mcc_generated_files/i2c.c"
  3773 ;; Parameters:    Size  Location     Type
  3774 ;;		None
  3775 ;; Auto vars:     Size  Location     Type
  3776 ;;		None
  3777 ;; Return value:  Size  Location     Type
  3778 ;;		None               void
  3779 ;; Registers used:
  3780 ;;		wreg, status,2
  3781 ;; Tracked objects:
  3782 ;;		On entry : 0/0
  3783 ;;		On exit  : 0/0
  3784 ;;		Unchanged: 0/0
  3785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3790 ;;Total ram usage:        0 bytes
  3791 ;; Hardware stack levels used:    1
  3792 ;; Hardware stack levels required when called:    4
  3793 ;; This function calls:
  3794 ;;		Nothing
  3795 ;; This function is called by:
  3796 ;;		_SYSTEM_Initialize
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800                           
  3801                           ;psect for function _I2C_Initialize
  3802  02EB                     _I2C_Initialize:	
  3803                           
  3804                           ;i2c.c: 85: SSP1STAT = 0x00;
  3805                           
  3806                           ;incstack = 0
  3807                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  3808  02EB  0024               	movlb	4	; select bank4
  3809  02EC  0194               	clrf	20	;volatile
  3810                           
  3811                           ;i2c.c: 87: SSP1CON1 = 0x26;
  3812  02ED  3026               	movlw	38
  3813  02EE  0095               	movwf	21	;volatile
  3814                           
  3815                           ;i2c.c: 89: SSP1CON2 = 0x00;
  3816  02EF  0196               	clrf	22	;volatile
  3817                           
  3818                           ;i2c.c: 91: SSP1CON3 = 0x00;
  3819  02F0  0197               	clrf	23	;volatile
  3820                           
  3821                           ;i2c.c: 93: SSP1MSK = (127 << 1);
  3822  02F1  30FE               	movlw	254
  3823  02F2  0093               	movwf	19	;volatile
  3824                           
  3825                           ;i2c.c: 95: SSP1ADD = (8 << 1);
  3826  02F3  3010               	movlw	16
  3827  02F4  0092               	movwf	18	;volatile
  3828                           
  3829                           ;i2c.c: 98: PIR1bits.SSP1IF = 0;
  3830  02F5  0020               	movlb	0	; select bank0
  3831  02F6  1191               	bcf	17,3	;volatile
  3832                           
  3833                           ;i2c.c: 100: PIE1bits.SSP1IE = 1;
  3834  02F7  0021               	movlb	1	; select bank1
  3835  02F8  1591               	bsf	17,3	;volatile
  3836  02F9  0008               	return
  3837  02FA                     __end_of_I2C_Initialize:	
  3838                           
  3839                           	psect	text9
  3840  032B                     __ptext9:	
  3841 ;; *************** function _ADC_Initialize *****************
  3842 ;; Defined at:
  3843 ;;		line 65 in file "mcc_generated_files/adc.c"
  3844 ;; Parameters:    Size  Location     Type
  3845 ;;		None
  3846 ;; Auto vars:     Size  Location     Type
  3847 ;;		None
  3848 ;; Return value:  Size  Location     Type
  3849 ;;		None               void
  3850 ;; Registers used:
  3851 ;;		wreg, status,2
  3852 ;; Tracked objects:
  3853 ;;		On entry : 0/0
  3854 ;;		On exit  : 0/0
  3855 ;;		Unchanged: 0/0
  3856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3861 ;;Total ram usage:        0 bytes
  3862 ;; Hardware stack levels used:    1
  3863 ;; Hardware stack levels required when called:    4
  3864 ;; This function calls:
  3865 ;;		Nothing
  3866 ;; This function is called by:
  3867 ;;		_SYSTEM_Initialize
  3868 ;; This function uses a non-reentrant model
  3869 ;;
  3870                           
  3871                           
  3872                           ;psect for function _ADC_Initialize
  3873  032B                     _ADC_Initialize:	
  3874                           
  3875                           ;adc.c: 69: ADCON0 = 0x01;
  3876                           
  3877                           ;incstack = 0
  3878                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3879  032B  3001               	movlw	1
  3880  032C  0021               	movlb	1	; select bank1
  3881  032D  009D               	movwf	29	;volatile
  3882                           
  3883                           ;adc.c: 72: ADCON1 = 0x80;
  3884  032E  3080               	movlw	128
  3885  032F  009E               	movwf	30	;volatile
  3886                           
  3887                           ;adc.c: 75: ADCON2 = 0x00;
  3888  0330  019F               	clrf	31	;volatile
  3889                           
  3890                           ;adc.c: 78: ADRESL = 0x00;
  3891  0331  019B               	clrf	27	;volatile
  3892                           
  3893                           ;adc.c: 81: ADRESH = 0x00;
  3894  0332  019C               	clrf	28	;volatile
  3895                           
  3896                           ;adc.c: 84: PIE1bits.ADIE = 1;
  3897  0333  1711               	bsf	17,6	;volatile
  3898  0334  0008               	return
  3899  0335                     __end_of_ADC_Initialize:	
  3900                           
  3901                           	psect	intentry
  3902  0004                     __pintentry:	
  3903 ;; *************** function _INTERRUPT_InterruptManager *****************
  3904 ;; Defined at:
  3905 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3906 ;; Parameters:    Size  Location     Type
  3907 ;;		None
  3908 ;; Auto vars:     Size  Location     Type
  3909 ;;		None
  3910 ;; Return value:  Size  Location     Type
  3911 ;;		None               void
  3912 ;; Registers used:
  3913 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3914 ;; Tracked objects:
  3915 ;;		On entry : 0/0
  3916 ;;		On exit  : 0/0
  3917 ;;		Unchanged: 0/0
  3918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3921 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3922 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3923 ;;Total ram usage:        1 bytes
  3924 ;; Hardware stack levels used:    1
  3925 ;; Hardware stack levels required when called:    3
  3926 ;; This function calls:
  3927 ;;		_ADC_ISR
  3928 ;;		_I2C_ISR
  3929 ;;		_TMR0_ISR
  3930 ;; This function is called by:
  3931 ;;		Interrupt level 1
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           
  3935  0004                     _INTERRUPT_InterruptManager:	
  3936                           
  3937                           ;incstack = 0
  3938                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3939  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3940  0005  3180               	pagesel	$
  3941  0006  0020               	movlb	0	; select bank0
  3942  0007  087F               	movf	127,w
  3943  0008  00F7               	movwf	??_INTERRUPT_InterruptManager
  3944                           
  3945                           ;interrupt_manager.c: 54: if (PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1) {
  3946  0009  0021               	movlb	1	; select bank1
  3947  000A  1D91               	btfss	17,3	;volatile
  3948  000B  2813               	goto	i1l193
  3949  000C  0020               	movlb	0	; select bank0
  3950  000D  1D91               	btfss	17,3	;volatile
  3951  000E  2813               	goto	i1l193
  3952                           
  3953                           ;interrupt_manager.c: 55: I2C_ISR();
  3954  000F  3182  2258  3180   	fcall	_I2C_ISR
  3955                           
  3956                           ;interrupt_manager.c: 56: } else if (PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1) {
  3957  0012  2822               	goto	i1l199
  3958  0013                     i1l193:	
  3959  0013  0021               	movlb	1	; select bank1
  3960  0014  1F11               	btfss	17,6	;volatile
  3961  0015  281D               	goto	i1l195
  3962  0016  0020               	movlb	0	; select bank0
  3963  0017  1F11               	btfss	17,6	;volatile
  3964  0018  281D               	goto	i1l195
  3965                           
  3966                           ;interrupt_manager.c: 57: ADC_ISR();
  3967  0019  3183  2348  3180   	fcall	_ADC_ISR
  3968                           
  3969                           ;interrupt_manager.c: 58: } else if (INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1) {
  3970  001C  2822               	goto	i1l199
  3971  001D                     i1l195:	
  3972  001D  1A8B               	btfsc	11,5	;volatile
  3973  001E  1D0B               	btfss	11,2	;volatile
  3974  001F  2822               	goto	i1l199
  3975                           
  3976                           ;interrupt_manager.c: 59: TMR0_ISR();
  3977  0020  3183  2335         	fcall	_TMR0_ISR
  3978  0022                     i1l199:	
  3979                           ;interrupt_manager.c: 60: } else {
  3980                           
  3981  0022  0877               	movf	??_INTERRUPT_InterruptManager,w
  3982  0023  0020               	movlb	0	; select bank0
  3983  0024  00FF               	movwf	127
  3984  0025  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3985  0026  0009               	retfie
  3986  0027                     __end_of_INTERRUPT_InterruptManager:	
  3987                           
  3988                           	psect	text11
  3989  0335                     __ptext11:	
  3990 ;; *************** function _TMR0_ISR *****************
  3991 ;; Defined at:
  3992 ;;		line 104 in file "mcc_generated_files/tmr0.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;		None
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;		None
  3997 ;; Return value:  Size  Location     Type
  3998 ;;		None               void
  3999 ;; Registers used:
  4000 ;;		wreg, status,2, status,0, pclath, cstack
  4001 ;; Tracked objects:
  4002 ;;		On entry : 0/0
  4003 ;;		On exit  : 0/0
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4010 ;;Total ram usage:        0 bytes
  4011 ;; Hardware stack levels used:    1
  4012 ;; Hardware stack levels required when called:    1
  4013 ;; This function calls:
  4014 ;;		_TMR0_CallBack
  4015 ;; This function is called by:
  4016 ;;		_INTERRUPT_InterruptManager
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           
  4021                           ;psect for function _TMR0_ISR
  4022  0335                     _TMR0_ISR:	
  4023                           
  4024                           ;tmr0.c: 107: INTCONbits.TMR0IF = 0;
  4025                           
  4026                           ;incstack = 0
  4027                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  4028  0335  110B               	bcf	11,2	;volatile
  4029                           
  4030                           ;tmr0.c: 109: TMR0 = timer0ReloadVal;
  4031  0336  087B               	movf	_timer0ReloadVal,w	;volatile
  4032  0337  0020               	movlb	0	; select bank0
  4033  0338  0095               	movwf	21	;volatile
  4034                           
  4035                           ;tmr0.c: 113: TMR0_CallBack();
  4036  0339  3183  2342         	fcall	_TMR0_CallBack
  4037  033B  0008               	return
  4038  033C                     __end_of_TMR0_ISR:	
  4039                           
  4040                           	psect	text12
  4041  0342                     __ptext12:	
  4042 ;; *************** function _TMR0_CallBack *****************
  4043 ;; Defined at:
  4044 ;;		line 118 in file "mcc_generated_files/tmr0.c"
  4045 ;; Parameters:    Size  Location     Type
  4046 ;;		None
  4047 ;; Auto vars:     Size  Location     Type
  4048 ;;		None
  4049 ;; Return value:  Size  Location     Type
  4050 ;;		None               void
  4051 ;; Registers used:
  4052 ;;		wreg
  4053 ;; Tracked objects:
  4054 ;;		On entry : 0/0
  4055 ;;		On exit  : 0/0
  4056 ;;		Unchanged: 0/0
  4057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4062 ;;Total ram usage:        0 bytes
  4063 ;; Hardware stack levels used:    1
  4064 ;; This function calls:
  4065 ;;		Nothing
  4066 ;; This function is called by:
  4067 ;;		_TMR0_ISR
  4068 ;; This function uses a non-reentrant model
  4069 ;;
  4070                           
  4071                           
  4072                           ;psect for function _TMR0_CallBack
  4073  0342                     _TMR0_CallBack:	
  4074                           
  4075                           ;tmr0.c: 121: timerVariable++;
  4076                           
  4077                           ;incstack = 0
  4078                           ; Regs used in _TMR0_CallBack: [wreg]
  4079  0342  3001               	movlw	1
  4080  0343  0020               	movlb	0	; select bank0
  4081  0344  07A2               	addwf	_timerVariable,f	;volatile
  4082  0345  3000               	movlw	0
  4083  0346  3DA3               	addwfc	_timerVariable+1,f	;volatile
  4084  0347  0008               	return
  4085  0348                     __end_of_TMR0_CallBack:	
  4086                           
  4087                           	psect	text13
  4088  0258                     __ptext13:	
  4089 ;; *************** function _I2C_ISR *****************
  4090 ;; Defined at:
  4091 ;;		line 104 in file "mcc_generated_files/i2c.c"
  4092 ;; Parameters:    Size  Location     Type
  4093 ;;		None
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;  i2c_data        1    6[COMMON] unsigned char 
  4096 ;; Return value:  Size  Location     Type
  4097 ;;		None               void
  4098 ;; Registers used:
  4099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4106 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4107 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4108 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4109 ;;Total ram usage:        2 bytes
  4110 ;; Hardware stack levels used:    1
  4111 ;; Hardware stack levels required when called:    2
  4112 ;; This function calls:
  4113 ;;		_I2C_StatusCallback
  4114 ;; This function is called by:
  4115 ;;		_INTERRUPT_InterruptManager
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           
  4120                           ;psect for function _I2C_ISR
  4121  0258                     _I2C_ISR:	
  4122                           
  4123                           ;i2c.c: 105: uint8_t i2c_data = 0x55;
  4124                           
  4125                           ;incstack = 0
  4126                           ; Regs used in _I2C_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4127  0258  3055               	movlw	85
  4128  0259  00F5               	movwf	??_I2C_ISR
  4129  025A  0875               	movf	??_I2C_ISR,w
  4130  025B  00F6               	movwf	I2C_ISR@i2c_data
  4131                           
  4132                           ;i2c.c: 111: PIR1bits.SSP1IF = 0;
  4133  025C  0020               	movlb	0	; select bank0
  4134  025D  1191               	bcf	17,3	;volatile
  4135                           
  4136                           ;i2c.c: 112: i2c_data = SSP1BUF;
  4137  025E  0024               	movlb	4	; select bank4
  4138  025F  0811               	movf	17,w	;volatile
  4139  0260  00F5               	movwf	??_I2C_ISR
  4140  0261  0875               	movf	??_I2C_ISR,w
  4141  0262  00F6               	movwf	I2C_ISR@i2c_data
  4142                           
  4143                           ;i2c.c: 113: if (1 == SSP1STATbits.R_nW) {
  4144  0263  1D14               	btfss	20,2	;volatile
  4145  0264  2A6C               	goto	i1l109
  4146                           
  4147                           ;i2c.c: 114: if ((1 == SSP1STATbits.D_nA) && (1 == SSP1CON2bits.ACKSTAT)) {
  4148  0265  1A94               	btfsc	20,5	;volatile
  4149  0266  1F16               	btfss	22,6	;volatile
  4150  0267  2A6A               	goto	i1l1140
  4151                           
  4152                           ;i2c.c: 116: I2C_StatusCallback(I2C_SLAVE_READ_COMPLETED);
  4153  0268  3003               	movlw	3
  4154  0269  2A7F               	goto	L1
  4155  026A                     i1l1140:	
  4156                           ;i2c.c: 117: } else {
  4157                           
  4158                           
  4159                           ;i2c.c: 119: I2C_StatusCallback(I2C_SLAVE_READ_REQUEST);
  4160  026A  3001               	movlw	1
  4161  026B  2A7F               	goto	L1
  4162  026C                     i1l109:	
  4163                           ;i2c.c: 120: }
  4164                           ;i2c.c: 121: } else if (0 == SSP1STATbits.D_nA) {
  4165                           
  4166  026C  1A94               	btfsc	20,5	;volatile
  4167  026D  2A75               	goto	i1l1146
  4168                           
  4169                           ;i2c.c: 123: debug = 2;
  4170  026E  3002               	movlw	2
  4171  026F  0020               	movlb	0	; select bank0
  4172  0270  00A0               	movwf	_debug
  4173  0271  3000               	movlw	0
  4174  0272  00A1               	movwf	_debug+1
  4175                           
  4176                           ;i2c.c: 125: I2C_StatusCallback(I2C_SLAVE_WRITE_REQUEST);
  4177  0273  3000               	movlw	0
  4178  0274  2A7F               	goto	L1
  4179  0275                     i1l1146:	
  4180                           ;i2c.c: 126: } else {
  4181                           
  4182                           
  4183                           ;i2c.c: 127: I2C_slaveWriteData = i2c_data;
  4184  0275  0876               	movf	I2C_ISR@i2c_data,w
  4185  0276  00F5               	movwf	??_I2C_ISR
  4186  0277  0875               	movf	??_I2C_ISR,w
  4187  0278  00FC               	movwf	_I2C_slaveWriteData	;volatile
  4188                           
  4189                           ;i2c.c: 128: debug = 4;
  4190  0279  3004               	movlw	4
  4191  027A  0020               	movlb	0	; select bank0
  4192  027B  00A0               	movwf	_debug
  4193  027C  3000               	movlw	0
  4194  027D  00A1               	movwf	_debug+1
  4195                           
  4196                           ;i2c.c: 130: I2C_StatusCallback(I2C_SLAVE_WRITE_COMPLETED);
  4197  027E  3002               	movlw	2
  4198  027F                     L1:	
  4199  027F  3182  220D         	fcall	_I2C_StatusCallback
  4200                           
  4201                           ;i2c.c: 131: }
  4202                           ;i2c.c: 133: SSP1CON1bits.CKP = 1;
  4203  0281  0024               	movlb	4	; select bank4
  4204  0282  1615               	bsf	21,4	;volatile
  4205  0283  0008               	return
  4206  0284                     __end_of_I2C_ISR:	
  4207                           
  4208                           	psect	text14
  4209  020D                     __ptext14:	
  4210 ;; *************** function _I2C_StatusCallback *****************
  4211 ;; Defined at:
  4212 ;;		line 160 in file "mcc_generated_files/i2c.c"
  4213 ;; Parameters:    Size  Location     Type
  4214 ;;  i2c_bus_stat    1    wreg     enum E6245
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;  i2c_bus_stat    1    4[COMMON] enum E6245
  4217 ;; Return value:  Size  Location     Type
  4218 ;;		None               void
  4219 ;; Registers used:
  4220 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4227 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4228 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4229 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4230 ;;Total ram usage:        3 bytes
  4231 ;; Hardware stack levels used:    1
  4232 ;; Hardware stack levels required when called:    1
  4233 ;; This function calls:
  4234 ;;		_getADCReading
  4235 ;; This function is called by:
  4236 ;;		_I2C_ISR
  4237 ;; This function uses a non-reentrant model
  4238 ;;
  4239                           
  4240                           
  4241                           ;psect for function _I2C_StatusCallback
  4242  020D                     _I2C_StatusCallback:	
  4243                           
  4244                           ;incstack = 0
  4245                           ; Regs used in _I2C_StatusCallback: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4246                           ;I2C_StatusCallback@i2c_bus_state stored from wreg
  4247  020D  00F4               	movwf	I2C_StatusCallback@i2c_bus_state
  4248                           
  4249                           ;i2c.c: 162: static uint8_t EEPROM_Buffer[] ={
  4250                           ;i2c.c: 163: 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0
      +                          c, 0x0d, 0x0e, 0x0f,
  4251                           ;i2c.c: 164: 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1
      +                          c, 0x1d, 0x1e, 0x1f,
  4252                           ;i2c.c: 165: 0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2
      +                          c, 0x2d, 0x2e, 0x2f,
  4253                           ;i2c.c: 166: 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x3b, 0x3
      +                          c, 0x3d, 0x3e, 0x3f,
  4254                           ;i2c.c: 167: 0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4
      +                          c, 0x4d, 0x4e, 0x4f,
  4255  020E  2A49               	goto	i1l1110
  4256  020F                     i1l1080:	
  4257                           ;i2c.c: 178: case I2C_SLAVE_WRITE_REQUEST:{
  4258                           
  4259                           
  4260                           ;i2c.c: 182: slaveWriteType = SLAVE_NORMAL_DATA;
  4261  020F  01F9               	clrf	I2C_StatusCallback@slaveWriteType
  4262                           
  4263                           ;i2c.c: 185: break;
  4264  0210  0008               	return
  4265  0211                     i1l1082:	
  4266                           ;i2c.c: 192: case SLAVE_DATA_ADDRESS:
  4267                           
  4268                           ;i2c.c: 191: switch (slaveWriteType) {
  4269                           
  4270                           ;i2c.c: 186: }
  4271                           ;i2c.c: 189: case I2C_SLAVE_WRITE_COMPLETED:
  4272                           
  4273                           
  4274                           ;i2c.c: 193: eepromAddress = I2C_slaveWriteData;
  4275  0211  087C               	movf	_I2C_slaveWriteData,w	;volatile
  4276  0212  00F2               	movwf	??_I2C_StatusCallback
  4277  0213  0872               	movf	??_I2C_StatusCallback,w
  4278  0214  00F8               	movwf	I2C_StatusCallback@eepromAddress
  4279                           
  4280                           ;i2c.c: 194: break;
  4281  0215  2A3C               	goto	i1l1102
  4282  0216                     i1l1084:	
  4283                           ;i2c.c: 197: case SLAVE_NORMAL_DATA:
  4284                           
  4285                           
  4286                           ;i2c.c: 201: Command = I2C_slaveWriteData;
  4287  0216  087C               	movf	_I2C_slaveWriteData,w	;volatile
  4288  0217  00F2               	movwf	??_I2C_StatusCallback
  4289  0218  0872               	movf	??_I2C_StatusCallback,w
  4290  0219  00FA               	movwf	_Command
  4291                           
  4292                           ;i2c.c: 203: if(Command == 0xA5){
  4293  021A  30A5               	movlw	165
  4294  021B  067A               	xorwf	_Command,w
  4295  021C  1903               	btfsc	3,2
  4296  021D  0001               	reset	;# 
  4297                           
  4298                           ;i2c.c: 205: }
  4299                           ;i2c.c: 209: EEPROM_Buffer[eepromAddress++] = I2C_slaveWriteData;
  4300  021E  0878               	movf	I2C_StatusCallback@eepromAddress,w
  4301  021F  3E70               	addlw	112
  4302  0220  00F2               	movwf	??_I2C_StatusCallback
  4303  0221  01F3               	clrf	??_I2C_StatusCallback+1
  4304  0222  3027               	movlw	39
  4305  0223  3DF3               	addwfc	??_I2C_StatusCallback+1,f
  4306  0224  0872               	movf	??_I2C_StatusCallback,w
  4307  0225  0086               	movwf	6
  4308  0226  0873               	movf	??_I2C_StatusCallback+1,w
  4309  0227  0087               	movwf	7
  4310  0228  087C               	movf	_I2C_slaveWriteData,w	;volatile
  4311  0229  0081               	movwf	1
  4312  022A  3001               	movlw	1
  4313  022B  00F2               	movwf	??_I2C_StatusCallback
  4314  022C  0872               	movf	??_I2C_StatusCallback,w
  4315  022D  07F8               	addwf	I2C_StatusCallback@eepromAddress,f
  4316                           
  4317                           ;i2c.c: 210: if (sizeof (EEPROM_Buffer) <= eepromAddress) {
  4318  022E  3080               	movlw	128
  4319  022F  0278               	subwf	I2C_StatusCallback@eepromAddress,w
  4320  0230  1C03               	skipc
  4321  0231  2A3C               	goto	i1l1102
  4322                           
  4323                           ;i2c.c: 211: eepromAddress = 0;
  4324  0232  01F8               	clrf	I2C_StatusCallback@eepromAddress
  4325                           
  4326                           ;i2c.c: 215: }
  4327                           
  4328                           ;i2c.c: 212: }
  4329                           ;i2c.c: 213: break;
  4330  0233  2A3C               	goto	i1l1102
  4331  0234                     i1l1100:	
  4332  0234  0879               	movf	I2C_StatusCallback@slaveWriteType,w
  4333                           
  4334                           ; Switch size 1, requested type "space"
  4335                           ; Number of cases is 2, Range of values is 0 to 1
  4336                           ; switch strategies available:
  4337                           ; Name         Instructions Cycles
  4338                           ; simple_byte            7     4 (average)
  4339                           ; direct_byte           10     6 (fixed)
  4340                           ; jumptable            260     6 (fixed)
  4341                           ;	Chosen strategy is simple_byte
  4342  0235  3A00               	xorlw	0	; case 0
  4343  0236  1903               	skipnz
  4344  0237  2A16               	goto	i1l1084
  4345  0238  3A01               	xorlw	1	; case 1
  4346  0239  1903               	skipnz
  4347  023A  2A11               	goto	i1l1082
  4348  023B  2A3C               	goto	i1l1102
  4349  023C                     i1l1102:	
  4350                           
  4351                           ;i2c.c: 217: slaveWriteType = SLAVE_NORMAL_DATA;
  4352  023C  01F9               	clrf	I2C_StatusCallback@slaveWriteType
  4353                           
  4354                           ;i2c.c: 218: break;
  4355  023D  0008               	return
  4356  023E                     i1l1104:	
  4357                           ;i2c.c: 220: case I2C_SLAVE_READ_REQUEST:
  4358                           
  4359                           
  4360                           ;i2c.c: 221: debug = 3;
  4361  023E  3003               	movlw	3
  4362  023F  0020               	movlb	0	; select bank0
  4363  0240  00A0               	movwf	_debug
  4364  0241  3000               	movlw	0
  4365  0242  00A1               	movwf	_debug+1
  4366                           
  4367                           ;i2c.c: 222: getADCReading();
  4368  0243  3182  22C8         	fcall	_getADCReading
  4369                           
  4370                           ;i2c.c: 223: SSP1BUF = i2cread_ptr;
  4371  0245  087D               	movf	_i2cread_ptr,w	;volatile
  4372  0246  0024               	movlb	4	; select bank4
  4373  0247  0091               	movwf	17	;volatile
  4374                           
  4375                           ;i2c.c: 232: }
  4376                           
  4377                           ;i2c.c: 230: default:;
  4378                           
  4379                           ;i2c.c: 229: case I2C_SLAVE_READ_COMPLETED:
  4380                           
  4381                           ;i2c.c: 227: break;
  4382  0248  0008               	return
  4383  0249                     i1l1110:	
  4384  0249  0874               	movf	I2C_StatusCallback@i2c_bus_state,w
  4385                           
  4386                           ; Switch size 1, requested type "space"
  4387                           ; Number of cases is 4, Range of values is 0 to 3
  4388                           ; switch strategies available:
  4389                           ; Name         Instructions Cycles
  4390                           ; simple_byte           13     7 (average)
  4391                           ; direct_byte           14     6 (fixed)
  4392                           ; jumptable            260     6 (fixed)
  4393                           ;	Chosen strategy is simple_byte
  4394  024A  3A00               	xorlw	0	; case 0
  4395  024B  1903               	skipnz
  4396  024C  2A0F               	goto	i1l1080
  4397  024D  3A01               	xorlw	1	; case 1
  4398  024E  1903               	skipnz
  4399  024F  2A3E               	goto	i1l1104
  4400  0250  3A03               	xorlw	3	; case 2
  4401  0251  1903               	skipnz
  4402  0252  2A34               	goto	i1l1100
  4403  0253  3A01               	xorlw	1	; case 3
  4404  0254  1903               	skipnz
  4405  0255  2A57               	goto	i1l139
  4406  0256  2A57               	goto	i1l139
  4407  0257                     i1l139:	
  4408  0257  0008               	return
  4409  0258                     __end_of_I2C_StatusCallback:	
  4410                           
  4411                           	psect	text15
  4412  02C8                     __ptext15:	
  4413 ;; *************** function _getADCReading *****************
  4414 ;; Defined at:
  4415 ;;		line 85 in file "irRange.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;		None
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;  temp            1    1[COMMON] unsigned char 
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  1    wreg      unsigned char 
  4422 ;; Registers used:
  4423 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4430 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4431 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4432 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4433 ;;Total ram usage:        2 bytes
  4434 ;; Hardware stack levels used:    1
  4435 ;; This function calls:
  4436 ;;		Nothing
  4437 ;; This function is called by:
  4438 ;;		_I2C_StatusCallback
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           
  4443                           ;psect for function _getADCReading
  4444  02C8                     _getADCReading:	
  4445                           
  4446                           ;irRange.c: 87: uint8_t temp = *i2cread_ptr;
  4447                           
  4448                           ;incstack = 0
  4449                           ; Regs used in _getADCReading: [wreg+fsr1l+fsr1h+status,2+status,0]
  4450  02C8  087D               	movf	_i2cread_ptr,w
  4451  02C9  0086               	movwf	6
  4452  02CA  0187               	clrf	7
  4453  02CB  0801               	movf	1,w
  4454  02CC  00F0               	movwf	??_getADCReading
  4455  02CD  0870               	movf	??_getADCReading,w
  4456  02CE  00F1               	movwf	getADCReading@temp
  4457                           
  4458                           ;irRange.c: 88: i2cread_ptr++;
  4459  02CF  3001               	movlw	1
  4460  02D0  00F0               	movwf	??_getADCReading
  4461  02D1  0870               	movf	??_getADCReading,w
  4462  02D2  07FD               	addwf	_i2cread_ptr,f
  4463                           
  4464                           ;irRange.c: 90: if(i2cread_ptr == ((uint8_t*)adc_readings + 20)){
  4465  02D3  087D               	movf	_i2cread_ptr,w
  4466  02D4  3A39               	xorlw	(low ((_adc_readings| 0+20)))& (0+255)
  4467  02D5  1D03               	skipz
  4468  02D6  0008               	return
  4469                           
  4470                           ;irRange.c: 91: i2cread_ptr = (uint8_t*)adc_readings;
  4471  02D7  3025               	movlw	(low (_adc_readings| 0))& (0+255)
  4472  02D8  00F0               	movwf	??_getADCReading
  4473  02D9  0870               	movf	??_getADCReading,w
  4474  02DA  00FD               	movwf	_i2cread_ptr
  4475  02DB  0008               	return
  4476  02DC                     __end_of_getADCReading:	
  4477                           ;irRange.c: 92: }
  4478                           ;irRange.c: 94: return temp;
  4479                           ;	Return value of _getADCReading is never used
  4480                           
  4481                           
  4482                           	psect	text16
  4483  0348                     __ptext16:	
  4484 ;; *************** function _ADC_ISR *****************
  4485 ;; Defined at:
  4486 ;;		line 132 in file "mcc_generated_files/adc.c"
  4487 ;; Parameters:    Size  Location     Type
  4488 ;;		None
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;		None
  4491 ;; Return value:  Size  Location     Type
  4492 ;;		None               void
  4493 ;; Registers used:
  4494 ;;		None
  4495 ;; Tracked objects:
  4496 ;;		On entry : 0/0
  4497 ;;		On exit  : 0/0
  4498 ;;		Unchanged: 0/0
  4499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4504 ;;Total ram usage:        0 bytes
  4505 ;; Hardware stack levels used:    1
  4506 ;; This function calls:
  4507 ;;		Nothing
  4508 ;; This function is called by:
  4509 ;;		_INTERRUPT_InterruptManager
  4510 ;; This function uses a non-reentrant model
  4511 ;;
  4512                           
  4513                           
  4514                           ;psect for function _ADC_ISR
  4515  0348                     _ADC_ISR:	
  4516                           
  4517                           ;adc.c: 134: PIR1bits.ADIF = 0;
  4518                           
  4519                           ;incstack = 0
  4520                           ; Regs used in _ADC_ISR: []
  4521  0348  0020               	movlb	0	; select bank0
  4522  0349  1311               	bcf	17,6	;volatile
  4523  034A  0008               	return
  4524  034B                     __end_of_ADC_ISR:	
  4525  007E                     btemp	set	126	;btemp
  4526  007E                     int$flags	set	126
  4527  007E                     wtemp	set	126
  4528  007E                     wtemp0	set	126
  4529  0080                     wtemp1	set	128
  4530  0082                     wtemp2	set	130
  4531  0084                     wtemp3	set	132
  4532  0086                     wtemp4	set	134
  4533  0088                     wtemp5	set	136
  4534  007F                     wtemp6	set	127
  4535  007E                     ttemp	set	126
  4536  007E                     ttemp0	set	126
  4537  0081                     ttemp1	set	129
  4538  0084                     ttemp2	set	132
  4539  0087                     ttemp3	set	135
  4540  007F                     ttemp4	set	127
  4541  007E                     ltemp	set	126
  4542  007E                     ltemp0	set	126
  4543  0082                     ltemp1	set	130
  4544  0086                     ltemp2	set	134
  4545  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        131
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80      5      31
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           64      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    adc_readings_ptr	PTR unsigned int  size(1) Largest target is 20
		 -> adc_readings(BANK0[20]), 

    i2cread_ptr	PTR unsigned char  size(1) Largest target is 20
		 -> adc_readings(BANK0[20]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C_ISR
    _I2C_ISR->_I2C_StatusCallback
    _I2C_StatusCallback->_getADCReading

Critical Paths under _main in BANK0

    _main->_readADCs
    _readADCs->_ADC_GetConversion
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     113
                  _SYSTEM_Initialize
                       _init_irRange
                           _readADCs
 ---------------------------------------------------------------------------------
 (1) _readADCs                                             1     1      0      22
                                              4 BANK0      1     1      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    4     2      2      22
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_irRange                                         3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      23
                     _ADC_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INTERRUPT_InterruptManager                           1     1      0      53
                                              7 COMMON     1     1      0
                            _ADC_ISR
                            _I2C_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (4) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (5) _TMR0_CallBack                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_ISR                                              2     2      0      53
                                              5 COMMON     2     2      0
                 _I2C_StatusCallback
 ---------------------------------------------------------------------------------
 (5) _I2C_StatusCallback                                   3     3      0      29
                                              2 COMMON     3     3      0
                      _getADCReading
 ---------------------------------------------------------------------------------
 (6) _getADCReading                                        2     2      0       7
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
   _init_irRange
   _readADCs
     _ADC_GetConversion

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _I2C_ISR
     _I2C_StatusCallback
       _getADCReading
   _TMR0_ISR
     _TMR0_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      5      1F       5       38.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      2D      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      2D      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              40      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Mar 27 11:43:38 2016

                        __CFG_CP$OFF 0000                      _timer0ReloadVal 007B  
                                l172 02BE                                  l245 013A  
                                _GIE 005F                                  u200 020B  
                                u305 02A7                                  u295 0290  
                    __end_of_I2C_ISR 0284                      __end_of_ADC_ISR 034B  
                       __CFG_BORV$LO 0000                         __CFG_IESO$ON 0000  
                       __CFG_LVP$OFF 0000                                 l1210 00CC  
                               l1204 00B8                                 l1222 00F4  
                               l1216 00E0                                 l1170 02A9  
                               l1164 0292                                 l1228 0108  
                               l1180 0068                                 l1236 0119  
                               l1260 0327                                 l1174 0056  
                               l1192 0090                                 l1186 007C  
                               l1198 00A4                                 _LATA 010C  
                               _LATB 010D                                 _LATC 010E  
                               _TMR0 0015                                 _WPUA 020C  
                               _WPUB 020D                                 _WPUC 020E  
                               _WPUE 0210                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _main 031F  
                               fsr0h 0005                                 fsr1h 0007  
                               fsr0l 0004                                 indf0 0000  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                        __CFG_BOREN$ON 0000  
                               ltemp 007E                                 start 0027  
                               ttemp 007E                                 wtemp 007E  
                      __CFG_MCLRE$ON 0000              __end_of_TMR0_Initialize 0307  
                      __CFG_PLLEN$ON 0000       __size_of_OSCILLATOR_Initialize 0006  
      __end_of_OSCILLATOR_Initialize 0342                                ?_main 0070  
                      __CFG_WDTE$OFF 0000                                i1l109 026C  
                              i1l139 0257                                i1l193 0013  
                              i1l195 001D                                i1l199 0022  
                              _TRISA 008C                                _TRISB 008D  
                              _TRISC 008E                                _TRISE 0090  
                   __end_of_TMR0_ISR 033C                         _adc_readings 0025  
                              _debug 0020                                ltemp0 007E  
                              ltemp1 0082                                ltemp2 0086  
                              ltemp3 0080                                ttemp0 007E  
                              ttemp1 0081                                ttemp2 0084  
                              ttemp3 0087                                ttemp4 007F  
                              status 0003                                wtemp0 007E  
                              wtemp1 0080                                wtemp2 0082  
                              wtemp3 0084                                wtemp4 0086  
                              wtemp5 0088                                wtemp6 007F  
                    __initialization 0029                         __end_of_main 032B  
                          ??_I2C_ISR 0075                            ??_ADC_ISR 0070  
                     __CFG_LPBOR$OFF 0000          ?_INTERRUPT_InterruptManager 0070  
                             ??_main 003E                               _ADCON0 009D  
                             _ADCON1 009E                               _ADCON2 009F  
                             _ADRESH 009C                               _ADRESL 009B  
                     __CFG_ZCDDIS$ON 0000                               _ANSELA 018C  
                             _ANSELB 018D                               _ANSELC 018E  
                             i1l1100 0234                               i1l1102 023C  
                             i1l1110 0249                               i1l1104 023E  
                             i1l1140 026A                               i1l1080 020F  
                             i1l1082 0211                               i1l1146 0275  
                             i1l1084 0216                        ?_init_irRange 0070  
                             _OSCCON 0099                       __CFG_PWRTE$OFF 0000  
                   __end_of_readADCs 013B                       __CFG_STVREN$ON 0000  
                   ?_TMR0_Initialize 0070                   _I2C_StatusCallback 020D  
            __size_of_I2C_Initialize 000F                         __pdataBIGRAM 2770  
                       __pdataCOMMON 007C                  ?_I2C_StatusCallback 0070  
           ADC_GetConversion@channel 003C                __end_of_TMR0_CallBack 0348  
                     ??_init_irRange 0039                    _SYSTEM_Initialize 02DC  
            __end_of__initialization 0051                   ?_SYSTEM_Initialize 0070  
               ??_I2C_StatusCallback 0072                       __pcstackCOMMON 0070  
                       __pidataBANK0 034D                  ??_SYSTEM_Initialize 003A  
                          ?_TMR0_ISR 0070                          _i2cread_ptr 007D  
                     _OPTION_REGbits 0095               __size_of_getADCReading 0014  
          __end_of_SYSTEM_Initialize 02EB                           __pbssBANK0 0020  
                         __pmaintext 031F                           ??_TMR0_ISR 0070  
                    __CFG_PPS1WAY$ON 0000                           __pintentry 0004  
                            _I2C_ISR 0258                              _ADC_ISR 0348  
            __size_of_ADC_Initialize 000A     I2C_StatusCallback@slaveWriteType 0079  
                            _OSCSTAT 009A                              _OSCTUNE 0098  
                            _SSP1ADD 0212                              _PPSLOCK 0E0F  
                            _SSP1BUF 0211                              _SSP1MSK 0213  
                          ?_readADCs 0070                              _Command 007A  
                      _getADCReading 02C8                 __end_of_init_irRange 02AC  
                     _I2C_Initialize 02EB                              __ptext1 0055  
                            __ptext2 02AC                              __ptext3 0284  
                            __ptext4 02DC                              __ptext5 02FA  
                            __ptext6 01BB                              __ptext7 033C  
                            __ptext8 02EB                              __ptext9 032B  
              _OSCILLATOR_Initialize 033C             ??_PIN_MANAGER_Initialize 0039  
         __size_of_SYSTEM_Initialize 000F                              clrloop0 0308  
               end_of_initialization 0051                           ??_readADCs 003D  
                            init_ram 0313                              initloop 0314  
                     ?_getADCReading 0070               __end_of_I2C_Initialize 02FA  
                   __CFG_FOSC$INTOSC 0000      I2C_StatusCallback@EEPROM_Buffer 2770  
                    ?_I2C_Initialize 0070                        __pidataBIGRAM 013B  
                      __pidataCOMMON 034B                    __size_of_TMR0_ISR 0007  
                     _ADC_Initialize 032B               ?_OSCILLATOR_Initialize 0070  
                start_initialization 0029             __size_of_TMR0_Initialize 000D  
    __size_of_PIN_MANAGER_Initialize 0052                      ??_getADCReading 0070  
        __size_of_I2C_StatusCallback 004B                __size_of_init_irRange 0028  
             __size_of_TMR0_CallBack 0006               __end_of_ADC_Initialize 0335  
                        __pdataBANK0 003E                             ?_I2C_ISR 0070  
                           ?_ADC_ISR 0070                          __pbssCOMMON 0078  
                          ___latbits 0003                        __pcstackBANK0 0039  
                          _adc_state 0024                         _init_irRange 0284  
                   _adc_readings_ptr 003E                    __size_of_readADCs 00E6  
             _PIN_MANAGER_Initialize 01BB                      ?_ADC_Initialize 0070  
       ??_INTERRUPT_InterruptManager 0077                        _TMR0_CallBack 0342  
                  ??_TMR0_Initialize 0039                            clear_ram0 0307  
                           _PIE1bits 0091  __size_of_INTERRUPT_InterruptManager 0023  
                           _PIR1bits 0011                             _SSP1CON1 0215  
                           _SSP1CON2 0216                             _SSP1CON3 0217  
                           _TMR0_ISR 0335                             _SSP1STAT 0214  
    I2C_StatusCallback@eepromAddress 0078                     __size_of_I2C_ISR 002C  
                   __size_of_ADC_ISR 0003                           _ADCON0bits 009D  
                     ?_TMR0_CallBack 0070                     ??_I2C_Initialize 0039  
                  _ADC_GetConversion 02AC              ??_OSCILLATOR_Initialize 0039  
                 ?_ADC_GetConversion 0039                      I2C_ISR@i2c_data 0076  
                ??_ADC_GetConversion 003B                             __ptext11 0335  
                           __ptext12 0342                             __ptext13 0258  
                           __ptext14 020D                             __ptext15 02C8  
                           __ptext16 0348                         _SSP1CON1bits 0215  
                       _SSP1CON2bits 0216                             _readADCs 0055  
                      __size_of_main 000C                        _SSPDATPPSbits 0E21  
                      _timerVariable 0022            __end_of_ADC_GetConversion 02C8  
                         _RC0PPSbits 0EA0                           _RC1PPSbits 0EA1  
                      init_irRange@i 003A                        _SSPCLKPPSbits 0E20  
                           int$flags 007E   __end_of_INTERRUPT_InterruptManager 0027  
         _INTERRUPT_InterruptManager 0004                         _SSP1STATbits 0214  
        PIN_MANAGER_Initialize@state 0039                   _I2C_slaveWriteData 007C  
                         _INTCONbits 000B                      ??_TMR0_CallBack 0070  
                           intlevel1 0000              ?_PIN_MANAGER_Initialize 0070  
                  __CFG_CLKOUTEN$OFF 0000           __end_of_I2C_StatusCallback 0258  
              __end_of_getADCReading 02DC                          _PPSLOCKbits 0E0F  
    I2C_StatusCallback@i2c_bus_state 0074                     ??_ADC_Initialize 0039  
                  getADCReading@temp 0071                           _OPTION_REG 0095  
                    _TMR0_Initialize 02FA       __end_of_PIN_MANAGER_Initialize 020D  
         __size_of_ADC_GetConversion 001C  
